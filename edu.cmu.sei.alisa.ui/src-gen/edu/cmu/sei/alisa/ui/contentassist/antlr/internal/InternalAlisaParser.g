/*
* generated by Xtext
*/
parser grammar InternalAlisaParser;

options {
	tokenVocab=InternalAlisaLexer;
	superClass=AbstractInternalContentAssistParser;
	
}

@header {
package edu.cmu.sei.alisa.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import edu.cmu.sei.alisa.services.AlisaGrammarAccess;

}

@members {
 
 	private AlisaGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("KEYWORD_1", "'('");
		tokenNameToValue.put("KEYWORD_2", "')'");
		tokenNameToValue.put("KEYWORD_3", "'*'");
		tokenNameToValue.put("KEYWORD_4", "'+'");
		tokenNameToValue.put("KEYWORD_5", "','");
		tokenNameToValue.put("KEYWORD_6", "'-'");
		tokenNameToValue.put("KEYWORD_7", "'.'");
		tokenNameToValue.put("KEYWORD_8", "':'");
		tokenNameToValue.put("KEYWORD_9", "';'");
		tokenNameToValue.put("KEYWORD_10", "'['");
		tokenNameToValue.put("KEYWORD_11", "']'");
		tokenNameToValue.put("KEYWORD_14", "'..'");
		tokenNameToValue.put("KEYWORD_15", "'::'");
		tokenNameToValue.put("KEYWORD_16", "'=>'");
		tokenNameToValue.put("KEYWORD_17", "'by'");
		tokenNameToValue.put("KEYWORD_18", "'in'");
		tokenNameToValue.put("KEYWORD_19", "'of'");
		tokenNameToValue.put("KEYWORD_20", "'ok'");
		tokenNameToValue.put("KEYWORD_21", "'or'");
		tokenNameToValue.put("KEYWORD_22", "'to'");
		tokenNameToValue.put("KEYWORD_23", "'+=>'");
		tokenNameToValue.put("KEYWORD_24", "'and'");
		tokenNameToValue.put("KEYWORD_25", "'end'");
		tokenNameToValue.put("KEYWORD_26", "'tbd'");
		tokenNameToValue.put("KEYWORD_27", "'date'");
		tokenNameToValue.put("KEYWORD_28", "'role'");
		tokenNameToValue.put("KEYWORD_29", "'true'");
		tokenNameToValue.put("KEYWORD_30", "'delta'");
		tokenNameToValue.put("KEYWORD_31", "'false'");
		tokenNameToValue.put("KEYWORD_32", "'modes'");
		tokenNameToValue.put("KEYWORD_33", "'state'");
		tokenNameToValue.put("KEYWORD_34", "'title'");
		tokenNameToValue.put("KEYWORD_35", "'manual'");
		tokenNameToValue.put("KEYWORD_36", "'method'");
		tokenNameToValue.put("KEYWORD_37", "'output'");
		tokenNameToValue.put("KEYWORD_38", "'passed'");
		tokenNameToValue.put("KEYWORD_39", "'result'");
		tokenNameToValue.put("KEYWORD_40", "'status'");
		tokenNameToValue.put("KEYWORD_41", "'system'");
		tokenNameToValue.put("KEYWORD_42", "'applies'");
		tokenNameToValue.put("KEYWORD_43", "'binding'");
		tokenNameToValue.put("KEYWORD_44", "'comment'");
		tokenNameToValue.put("KEYWORD_45", "'compute'");
		tokenNameToValue.put("KEYWORD_46", "'element'");
		tokenNameToValue.put("KEYWORD_47", "'logfile'");
		tokenNameToValue.put("KEYWORD_48", "'unknown'");
		tokenNameToValue.put("KEYWORD_49", "'version'");
		tokenNameToValue.put("KEYWORD_50", "'activity'");
		tokenNameToValue.put("KEYWORD_51", "'assigned'");
		tokenNameToValue.put("KEYWORD_52", "'constant'");
		tokenNameToValue.put("KEYWORD_53", "'verified'");
		tokenNameToValue.put("KEYWORD_54", "'automatic'");
		tokenNameToValue.put("KEYWORD_55", "'reference'");
		tokenNameToValue.put("KEYWORD_56", "'scheduled'");
		tokenNameToValue.put("KEYWORD_57", "'classifier'");
		tokenNameToValue.put("KEYWORD_58", "'decomposed'");
		tokenNameToValue.put("KEYWORD_59", "'inprogress'");
		tokenNameToValue.put("KEYWORD_60", "'model-type'");
		tokenNameToValue.put("KEYWORD_61", "'referenced'");
		tokenNameToValue.put("KEYWORD_62", "'description'");
		tokenNameToValue.put("KEYWORD_63", "'requirement'");
		tokenNameToValue.put("KEYWORD_64", "'stakeholder'");
		tokenNameToValue.put("KEYWORD_65", "'element-type'");
		tokenNameToValue.put("KEYWORD_66", "'verification'");
		tokenNameToValue.put("KEYWORD_67", "'documentDetails'");
 	}
 	
    public void setGrammarAccess(AlisaGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleAlisaModel
entryRuleAlisaModel 
:
{ before(grammarAccess.getAlisaModelRule()); }
	 ruleAlisaModel
{ after(grammarAccess.getAlisaModelRule()); } 
	 EOF 
;

// Rule AlisaModel
ruleAlisaModel 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAlisaModelAccess().getContentAssignment()); }
(rule__AlisaModel__ContentAssignment)*
{ after(grammarAccess.getAlisaModelAccess().getContentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueString
entryRuleValueString 
:
{ before(grammarAccess.getValueStringRule()); }
	 ruleValueString
{ after(grammarAccess.getValueStringRule()); } 
	 EOF 
;

// Rule ValueString
ruleValueString 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStakeholder
entryRuleStakeholder 
:
{ before(grammarAccess.getStakeholderRule()); }
	 ruleStakeholder
{ after(grammarAccess.getStakeholderRule()); } 
	 EOF 
;

// Rule Stakeholder
ruleStakeholder 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStakeholderAccess().getGroup()); }
(rule__Stakeholder__Group__0)
{ after(grammarAccess.getStakeholderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirement
entryRuleRequirement 
:
{ before(grammarAccess.getRequirementRule()); }
	 ruleRequirement
{ after(grammarAccess.getRequirementRule()); } 
	 EOF 
;

// Rule Requirement
ruleRequirement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRequirementAccess().getGroup()); }
(rule__Requirement__Group__0)
{ after(grammarAccess.getRequirementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRequirementDecomposition
entryRuleRequirementDecomposition 
:
{ before(grammarAccess.getRequirementDecompositionRule()); }
	 ruleRequirementDecomposition
{ after(grammarAccess.getRequirementDecompositionRule()); } 
	 EOF 
;

// Rule RequirementDecomposition
ruleRequirementDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRequirementDecompositionAccess().getAlternatives()); }
(rule__RequirementDecomposition__Alternatives)
{ after(grammarAccess.getRequirementDecompositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationDecomposition
entryRuleVerificationDecomposition 
:
{ before(grammarAccess.getVerificationDecompositionRule()); }
	 ruleVerificationDecomposition
{ after(grammarAccess.getVerificationDecompositionRule()); } 
	 EOF 
;

// Rule VerificationDecomposition
ruleVerificationDecomposition 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVerificationDecompositionAccess().getAlternatives()); }
(rule__VerificationDecomposition__Alternatives)
{ after(grammarAccess.getVerificationDecompositionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementType
entryRuleElementType 
:
{ before(grammarAccess.getElementTypeRule()); }
	 ruleElementType
{ after(grammarAccess.getElementTypeRule()); } 
	 EOF 
;

// Rule ElementType
ruleElementType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getElementTypeAccess().getGroup()); }
(rule__ElementType__Group__0)
{ after(grammarAccess.getElementTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationActivity
entryRuleVerificationActivity 
:
{ before(grammarAccess.getVerificationActivityRule()); }
	 ruleVerificationActivity
{ after(grammarAccess.getVerificationActivityRule()); } 
	 EOF 
;

// Rule VerificationActivity
ruleVerificationActivity 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVerificationActivityAccess().getGroup()); }
(rule__VerificationActivity__Group__0)
{ after(grammarAccess.getVerificationActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationMethod
entryRuleVerificationMethod 
:
{ before(grammarAccess.getVerificationMethodRule()); }
	 ruleVerificationMethod
{ after(grammarAccess.getVerificationMethodRule()); } 
	 EOF 
;

// Rule VerificationMethod
ruleVerificationMethod 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVerificationMethodAccess().getAlternatives()); }
(rule__VerificationMethod__Alternatives)
{ after(grammarAccess.getVerificationMethodAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationResult
entryRuleVerificationResult 
:
{ before(grammarAccess.getVerificationResultRule()); }
	 ruleVerificationResult
{ after(grammarAccess.getVerificationResultRule()); } 
	 EOF 
;

// Rule VerificationResult
ruleVerificationResult 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVerificationResultAccess().getGroup()); }
(rule__VerificationResult__Group__0)
{ after(grammarAccess.getVerificationResultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationResultState
entryRuleVerificationResultState 
:
{ before(grammarAccess.getVerificationResultStateRule()); }
	 ruleVerificationResultState
{ after(grammarAccess.getVerificationResultStateRule()); } 
	 EOF 
;

// Rule VerificationResultState
ruleVerificationResultState 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVerificationResultStateAccess().getAlternatives()); }
(rule__VerificationResultState__Alternatives)
{ after(grammarAccess.getVerificationResultStateAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVerificationResultStatus
entryRuleVerificationResultStatus 
:
{ before(grammarAccess.getVerificationResultStatusRule()); }
	 ruleVerificationResultStatus
{ after(grammarAccess.getVerificationResultStatusRule()); } 
	 EOF 
;

// Rule VerificationResultStatus
ruleVerificationResultStatus 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVerificationResultStatusAccess().getAlternatives()); }
(rule__VerificationResultStatus__Alternatives)
{ after(grammarAccess.getVerificationResultStatusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleContainedPropertyAssociation
entryRuleContainedPropertyAssociation 
:
{ before(grammarAccess.getContainedPropertyAssociationRule()); }
	 ruleContainedPropertyAssociation
{ after(grammarAccess.getContainedPropertyAssociationRule()); } 
	 EOF 
;

// Rule ContainedPropertyAssociation
ruleContainedPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
(rule__ContainedPropertyAssociation__Group__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleContainmentPath
entryRuleContainmentPath 
:
{ before(grammarAccess.getContainmentPathRule()); }
	 ruleContainmentPath
{ after(grammarAccess.getContainmentPathRule()); } 
	 EOF 
;

// Rule ContainmentPath
ruleContainmentPath 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathAccess().getGroup()); }
(rule__ContainmentPath__Group__0)
{ after(grammarAccess.getContainmentPathAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleOptionalModalPropertyValue
entryRuleOptionalModalPropertyValue 
:
{ before(grammarAccess.getOptionalModalPropertyValueRule()); }
	 ruleOptionalModalPropertyValue
{ after(grammarAccess.getOptionalModalPropertyValueRule()); } 
	 EOF 
;

// Rule OptionalModalPropertyValue
ruleOptionalModalPropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
(rule__OptionalModalPropertyValue__Group__0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyValue
entryRulePropertyValue 
:
{ before(grammarAccess.getPropertyValueRule()); }
	 rulePropertyValue
{ after(grammarAccess.getPropertyValueRule()); } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
(rule__PropertyValue__OwnedValueAssignment)
{ after(grammarAccess.getPropertyValueAccess().getOwnedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyExpression
entryRulePropertyExpression 
:
{ before(grammarAccess.getPropertyExpressionRule()); }
	 rulePropertyExpression
{ after(grammarAccess.getPropertyExpressionRule()); } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
(rule__PropertyExpression__Alternatives)
{ after(grammarAccess.getPropertyExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralorReferenceTerm
entryRuleLiteralorReferenceTerm 
:
{ before(grammarAccess.getLiteralorReferenceTermRule()); }
	 ruleLiteralorReferenceTerm
{ after(grammarAccess.getLiteralorReferenceTermRule()); } 
	 EOF 
;

// Rule LiteralorReferenceTerm
ruleLiteralorReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
(rule__LiteralorReferenceTerm__NamedValueAssignment)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
(rule__ConstantValue__NamedValueAssignment)
{ after(grammarAccess.getConstantValueAccess().getNamedValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceTerm
entryRuleReferenceTerm 
:
{ before(grammarAccess.getReferenceTermRule()); }
	 ruleReferenceTerm
{ after(grammarAccess.getReferenceTermRule()); } 
	 EOF 
;

// Rule ReferenceTerm
ruleReferenceTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getReferenceTermAccess().getGroup()); }
(rule__ReferenceTerm__Group__0)
{ after(grammarAccess.getReferenceTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordTerm
entryRuleRecordTerm 
:
{ before(grammarAccess.getRecordTermRule()); }
	 ruleRecordTerm
{ after(grammarAccess.getRecordTermRule()); } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRecordTermAccess().getGroup()); }
(rule__RecordTerm__Group__0)
{ after(grammarAccess.getRecordTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleComputedTerm
entryRuleComputedTerm 
:
{ before(grammarAccess.getComputedTermRule()); }
	 ruleComputedTerm
{ after(grammarAccess.getComputedTermRule()); } 
	 EOF 
;

// Rule ComputedTerm
ruleComputedTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComputedTermAccess().getGroup()); }
(rule__ComputedTerm__Group__0)
{ after(grammarAccess.getComputedTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentClassifierTerm
entryRuleComponentClassifierTerm 
:
{ before(grammarAccess.getComponentClassifierTermRule()); }
	 ruleComponentClassifierTerm
{ after(grammarAccess.getComponentClassifierTermRule()); } 
	 EOF 
;

// Rule ComponentClassifierTerm
ruleComponentClassifierTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
(rule__ComponentClassifierTerm__Group__0)
{ after(grammarAccess.getComponentClassifierTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListTerm
entryRuleListTerm 
:
{ before(grammarAccess.getListTermRule()); }
	 ruleListTerm
{ after(grammarAccess.getListTermRule()); } 
	 EOF 
;

// Rule ListTerm
ruleListTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getListTermAccess().getGroup()); }
(rule__ListTerm__Group__0)
{ after(grammarAccess.getListTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldPropertyAssociation
entryRuleFieldPropertyAssociation 
:
{ before(grammarAccess.getFieldPropertyAssociationRule()); }
	 ruleFieldPropertyAssociation
{ after(grammarAccess.getFieldPropertyAssociationRule()); } 
	 EOF 
;

// Rule FieldPropertyAssociation
ruleFieldPropertyAssociation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
(rule__FieldPropertyAssociation__Group__0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement 
:
{ before(grammarAccess.getContainmentPathElementRule()); }
	 ruleContainmentPathElement
{ after(grammarAccess.getContainmentPathElementRule()); } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getContainmentPathElementAccess().getGroup()); }
(rule__ContainmentPathElement__Group__0)
{ after(grammarAccess.getContainmentPathElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedContainmentPathElement
entryRuleQualifiedContainmentPathElement 
:
{ before(grammarAccess.getQualifiedContainmentPathElementRule()); }
	 ruleQualifiedContainmentPathElement
{ after(grammarAccess.getQualifiedContainmentPathElementRule()); } 
	 EOF 
;

// Rule QualifiedContainmentPathElement
ruleQualifiedContainmentPathElement 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQualifiedContainmentPathElementAccess().getNamedElementAssignment()); }
(rule__QualifiedContainmentPathElement__NamedElementAssignment)
{ after(grammarAccess.getQualifiedContainmentPathElementAccess().getNamedElementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRulePlusMinus
entryRulePlusMinus 
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPlusMinusAccess().getAlternatives()); }
(rule__PlusMinus__Alternatives)
{ after(grammarAccess.getPlusMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringTerm
entryRuleStringTerm 
:
{ before(grammarAccess.getStringTermRule()); }
	 ruleStringTerm
{ after(grammarAccess.getStringTermRule()); } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getStringTermAccess().getValueAssignment()); }
(rule__StringTerm__ValueAssignment)
{ after(grammarAccess.getStringTermAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoQuoteString
entryRuleNoQuoteString 
:
{ before(grammarAccess.getNoQuoteStringRule()); }
	 ruleNoQuoteString
{ after(grammarAccess.getNoQuoteStringRule()); } 
	 EOF 
;

// Rule NoQuoteString
ruleNoQuoteString 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayRange
entryRuleArrayRange 
:
{ before(grammarAccess.getArrayRangeRule()); }
	 ruleArrayRange
{ after(grammarAccess.getArrayRangeRule()); } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getArrayRangeAccess().getGroup()); }
(rule__ArrayRange__Group__0)
{ after(grammarAccess.getArrayRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedConstant
entryRuleSignedConstant 
:
{ before(grammarAccess.getSignedConstantRule()); }
	 ruleSignedConstant
{ after(grammarAccess.getSignedConstantRule()); } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedConstantAccess().getGroup()); }
(rule__SignedConstant__Group__0)
{ after(grammarAccess.getSignedConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm 
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntegerTermAccess().getGroup()); }
(rule__IntegerTerm__Group__0)
{ after(grammarAccess.getIntegerTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedInt
entryRuleSignedInt 
:
{ before(grammarAccess.getSignedIntRule()); }
	 ruleSignedInt
{ after(grammarAccess.getSignedIntRule()); } 
	 EOF 
;

// Rule SignedInt
ruleSignedInt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedIntAccess().getGroup()); }
(rule__SignedInt__Group__0)
{ after(grammarAccess.getSignedIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealTerm
entryRuleRealTerm 
:
{ before(grammarAccess.getRealTermRule()); }
	 ruleRealTerm
{ after(grammarAccess.getRealTermRule()); } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getRealTermAccess().getGroup()); }
(rule__RealTerm__Group__0)
{ after(grammarAccess.getRealTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignedReal
entryRuleSignedReal 
:
{ before(grammarAccess.getSignedRealRule()); }
	 ruleSignedReal
{ after(grammarAccess.getSignedRealRule()); } 
	 EOF 
;

// Rule SignedReal
ruleSignedReal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSignedRealAccess().getGroup()); }
(rule__SignedReal__Group__0)
{ after(grammarAccess.getSignedRealAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericRangeTerm
entryRuleNumericRangeTerm 
:
{ before(grammarAccess.getNumericRangeTermRule()); }
	 ruleNumericRangeTerm
{ after(grammarAccess.getNumericRangeTermRule()); } 
	 EOF 
;

// Rule NumericRangeTerm
ruleNumericRangeTerm 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup()); }
(rule__NumericRangeTerm__Group__0)
{ after(grammarAccess.getNumericRangeTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumAlt
entryRuleNumAlt 
:
{ before(grammarAccess.getNumAltRule()); }
	 ruleNumAlt
{ after(grammarAccess.getNumAltRule()); } 
	 EOF 
;

// Rule NumAlt
ruleNumAlt 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNumAltAccess().getAlternatives()); }
(rule__NumAlt__Alternatives)
{ after(grammarAccess.getNumAltAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTVALUE
entryRuleINTVALUE 
:
{ before(grammarAccess.getINTVALUERule()); }
	 ruleINTVALUE
{ after(grammarAccess.getINTVALUERule()); } 
	 EOF 
;

// Rule INTVALUE
ruleINTVALUE 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQCLREF
entryRuleQCLREF 
:
{ before(grammarAccess.getQCLREFRule()); }
	 ruleQCLREF
{ after(grammarAccess.getQCLREFRule()); } 
	 EOF 
;

// Rule QCLREF
ruleQCLREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQCLREFAccess().getGroup()); }
(rule__QCLREF__Group__0)
{ after(grammarAccess.getQCLREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQPREF
entryRuleQPREF 
:
{ before(grammarAccess.getQPREFRule()); }
	 ruleQPREF
{ after(grammarAccess.getQPREFRule()); } 
	 EOF 
;

// Rule QPREF
ruleQPREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQPREFAccess().getGroup()); }
(rule__QPREF__Group__0)
{ after(grammarAccess.getQPREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQCREF
entryRuleQCREF 
:
{ before(grammarAccess.getQCREFRule()); }
	 ruleQCREF
{ after(grammarAccess.getQCREFRule()); } 
	 EOF 
;

// Rule QCREF
ruleQCREF 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getQCREFAccess().getGroup()); }
(rule__QCREF__Group__0)
{ after(grammarAccess.getQCREFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTAR
entryRuleSTAR 
:
{ before(grammarAccess.getSTARRule()); }
	 ruleSTAR
{ after(grammarAccess.getSTARRule()); } 
	 EOF 
;

// Rule STAR
ruleSTAR 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getSTARAccess().getAsteriskKeyword()); }

	KEYWORD_3 

{ after(grammarAccess.getSTARAccess().getAsteriskKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AlisaModel__ContentAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlisaModelAccess().getContentStakeholderParserRuleCall_0_0()); }
	ruleStakeholder
{ after(grammarAccess.getAlisaModelAccess().getContentStakeholderParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getAlisaModelAccess().getContentRequirementParserRuleCall_0_1()); }
	ruleRequirement
{ after(grammarAccess.getAlisaModelAccess().getContentRequirementParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getAlisaModelAccess().getContentVerificationActivityParserRuleCall_0_2()); }
	ruleVerificationActivity
{ after(grammarAccess.getAlisaModelAccess().getContentVerificationActivityParserRuleCall_0_2()); }
)

    |(
{ before(grammarAccess.getAlisaModelAccess().getContentVerificationResultParserRuleCall_0_3()); }
	ruleVerificationResult
{ after(grammarAccess.getAlisaModelAccess().getContentVerificationResultParserRuleCall_0_3()); }
)

    |(
{ before(grammarAccess.getAlisaModelAccess().getContentElementTypeParserRuleCall_0_4()); }
	ruleElementType
{ after(grammarAccess.getAlisaModelAccess().getContentElementTypeParserRuleCall_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getElementAssignment_0()); }
(rule__RequirementDecomposition__ElementAssignment_0)
{ after(grammarAccess.getRequirementDecompositionAccess().getElementAssignment_0()); }
)

    |(
{ before(grammarAccess.getRequirementDecompositionAccess().getGroup_1()); }
(rule__RequirementDecomposition__Group_1__0)
{ after(grammarAccess.getRequirementDecompositionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__TypeAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getTypeAndKeyword_1_1_0_0()); }

	KEYWORD_24 

{ after(grammarAccess.getRequirementDecompositionAccess().getTypeAndKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getRequirementDecompositionAccess().getTypeOrKeyword_1_1_0_1()); }

	KEYWORD_21 

{ after(grammarAccess.getRequirementDecompositionAccess().getTypeOrKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getElementAssignment_0()); }
(rule__VerificationDecomposition__ElementAssignment_0)
{ after(grammarAccess.getVerificationDecompositionAccess().getElementAssignment_0()); }
)

    |(
{ before(grammarAccess.getVerificationDecompositionAccess().getGroup_1()); }
(rule__VerificationDecomposition__Group_1__0)
{ after(grammarAccess.getVerificationDecompositionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__TypeAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getTypeAndKeyword_1_1_0_0()); }

	KEYWORD_24 

{ after(grammarAccess.getVerificationDecompositionAccess().getTypeAndKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getVerificationDecompositionAccess().getTypeOrKeyword_1_1_0_1()); }

	KEYWORD_21 

{ after(grammarAccess.getVerificationDecompositionAccess().getTypeOrKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationMethod__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationMethodAccess().getManualKeyword_0()); }

	KEYWORD_35 

{ after(grammarAccess.getVerificationMethodAccess().getManualKeyword_0()); }
)

    |(
{ before(grammarAccess.getVerificationMethodAccess().getAutomaticKeyword_1()); }

	KEYWORD_54 

{ after(grammarAccess.getVerificationMethodAccess().getAutomaticKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResultState__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultStateAccess().getScheduledKeyword_0()); }

	KEYWORD_56 

{ after(grammarAccess.getVerificationResultStateAccess().getScheduledKeyword_0()); }
)

    |(
{ before(grammarAccess.getVerificationResultStateAccess().getPassedKeyword_1()); }

	KEYWORD_38 

{ after(grammarAccess.getVerificationResultStateAccess().getPassedKeyword_1()); }
)

    |(
{ before(grammarAccess.getVerificationResultStateAccess().getInprogressKeyword_2()); }

	KEYWORD_59 

{ after(grammarAccess.getVerificationResultStateAccess().getInprogressKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResultStatus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultStatusAccess().getOkKeyword_0()); }

	KEYWORD_20 

{ after(grammarAccess.getVerificationResultStatusAccess().getOkKeyword_0()); }
)

    |(
{ before(grammarAccess.getVerificationResultStatusAccess().getUnknownKeyword_1()); }

	KEYWORD_48 

{ after(grammarAccess.getVerificationResultStatusAccess().getUnknownKeyword_1()); }
)

    |(
{ before(grammarAccess.getVerificationResultStatusAccess().getTbdKeyword_2()); }

	KEYWORD_26 

{ after(grammarAccess.getVerificationResultStatusAccess().getTbdKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }

	KEYWORD_16 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
(rule__ContainedPropertyAssociation__AppendAssignment_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
	ruleRecordTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); }
	ruleReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); }
	ruleComponentClassifierTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
	ruleComputedTerm
{ after(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
	ruleStringTerm
{ after(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); }
	ruleNumericRangeTerm
{ after(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); }
	ruleRealTerm
{ after(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); }
	ruleIntegerTerm
{ after(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
	ruleListTerm
{ after(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); }
	ruleBooleanLiteral
{ after(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
	ruleLiteralorReferenceTerm
{ after(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
(rule__BooleanLiteral__ValueAssignment_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }

	KEYWORD_31 

{ after(grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }

	KEYWORD_4 

{ after(grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }

	KEYWORD_6 

{ after(grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }

	KEYWORD_4 

{ after(grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }

	KEYWORD_6 

{ after(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }

	KEYWORD_4 

{ after(grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }

	KEYWORD_6 

{ after(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumAlt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); }
	ruleRealTerm
{ after(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); }
	ruleIntegerTerm
{ after(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); }
	ruleSignedConstant
{ after(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); }
	ruleConstantValue
{ after(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stakeholder__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__0__Impl
	rule__Stakeholder__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getStakeholderKeyword_0()); }

	KEYWORD_64 

{ after(grammarAccess.getStakeholderAccess().getStakeholderKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__1__Impl
	rule__Stakeholder__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getNameAssignment_1()); }
(rule__Stakeholder__NameAssignment_1)
{ after(grammarAccess.getStakeholderAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__2__Impl
	rule__Stakeholder__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getGroup_2()); }
(rule__Stakeholder__Group_2__0)?
{ after(grammarAccess.getStakeholderAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__3__Impl
	rule__Stakeholder__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getGroup_3()); }
(rule__Stakeholder__Group_3__0)?
{ after(grammarAccess.getStakeholderAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__4__Impl
	rule__Stakeholder__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getGroup_4()); }
(rule__Stakeholder__Group_4__0)?
{ after(grammarAccess.getStakeholderAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__5__Impl
	rule__Stakeholder__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getEndKeyword_5()); }

	KEYWORD_25 

{ after(grammarAccess.getStakeholderAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__6__Impl
	rule__Stakeholder__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getStakeholderKeyword_6()); }

	KEYWORD_64 

{ after(grammarAccess.getStakeholderAccess().getStakeholderKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getSemicolonKeyword_7()); }

	KEYWORD_9 

{ after(grammarAccess.getStakeholderAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Stakeholder__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_2__0__Impl
	rule__Stakeholder__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getTitleKeyword_2_0()); }

	KEYWORD_34 

{ after(grammarAccess.getStakeholderAccess().getTitleKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_2__1__Impl
	rule__Stakeholder__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getColonKeyword_2_1()); }

	KEYWORD_8 

{ after(grammarAccess.getStakeholderAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getTitleAssignment_2_2()); }
(rule__Stakeholder__TitleAssignment_2_2)
{ after(grammarAccess.getStakeholderAccess().getTitleAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Stakeholder__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_3__0__Impl
	rule__Stakeholder__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getDescriptionKeyword_3_0()); }

	KEYWORD_62 

{ after(grammarAccess.getStakeholderAccess().getDescriptionKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_3__1__Impl
	rule__Stakeholder__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getColonKeyword_3_1()); }

	KEYWORD_8 

{ after(grammarAccess.getStakeholderAccess().getColonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getDescriptionAssignment_3_2()); }
(rule__Stakeholder__DescriptionAssignment_3_2)
{ after(grammarAccess.getStakeholderAccess().getDescriptionAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Stakeholder__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_4__0__Impl
	rule__Stakeholder__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getRoleKeyword_4_0()); }

	KEYWORD_28 

{ after(grammarAccess.getStakeholderAccess().getRoleKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_4__1__Impl
	rule__Stakeholder__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getColonKeyword_4_1()); }

	KEYWORD_8 

{ after(grammarAccess.getStakeholderAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stakeholder__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stakeholder__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getRoleAssignment_4_2()); }
(rule__Stakeholder__RoleAssignment_4_2)
{ after(grammarAccess.getStakeholderAccess().getRoleAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Requirement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__0__Impl
	rule__Requirement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRequirementKeyword_0()); }

	KEYWORD_63 

{ after(grammarAccess.getRequirementAccess().getRequirementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__1__Impl
	rule__Requirement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNameAssignment_1()); }
(rule__Requirement__NameAssignment_1)
{ after(grammarAccess.getRequirementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__2__Impl
	rule__Requirement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_2()); }
(rule__Requirement__Group_2__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__3__Impl
	rule__Requirement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_3()); }
(rule__Requirement__Group_3__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__4__Impl
	rule__Requirement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_4()); }
(rule__Requirement__Group_4__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__5__Impl
	rule__Requirement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_5()); }
(rule__Requirement__Group_5__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__6__Impl
	rule__Requirement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_6()); }
(rule__Requirement__Group_6__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__7__Impl
	rule__Requirement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_7()); }
(rule__Requirement__Group_7__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__8__Impl
	rule__Requirement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getGroup_8()); }
(rule__Requirement__Group_8__0)?
{ after(grammarAccess.getRequirementAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__9__Impl
	rule__Requirement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getEndKeyword_9()); }

	KEYWORD_25 

{ after(grammarAccess.getRequirementAccess().getEndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__10__Impl
	rule__Requirement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getRequirementKeyword_10()); }

	KEYWORD_63 

{ after(grammarAccess.getRequirementAccess().getRequirementKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getSemicolonKeyword_11()); }

	KEYWORD_9 

{ after(grammarAccess.getRequirementAccess().getSemicolonKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Requirement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__0__Impl
	rule__Requirement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getTitleKeyword_2_0()); }

	KEYWORD_34 

{ after(grammarAccess.getRequirementAccess().getTitleKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__1__Impl
	rule__Requirement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_2_1()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getTitleAssignment_2_2()); }
(rule__Requirement__TitleAssignment_2_2)
{ after(grammarAccess.getRequirementAccess().getTitleAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Requirement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_3__0__Impl
	rule__Requirement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDescriptionKeyword_3_0()); }

	KEYWORD_62 

{ after(grammarAccess.getRequirementAccess().getDescriptionKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_3__1__Impl
	rule__Requirement__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_3_1()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDescriptionAssignment_3_2()); }
(rule__Requirement__DescriptionAssignment_3_2)
{ after(grammarAccess.getRequirementAccess().getDescriptionAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Requirement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_4__0__Impl
	rule__Requirement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getCommentKeyword_4_0()); }

	KEYWORD_44 

{ after(grammarAccess.getRequirementAccess().getCommentKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_4__1__Impl
	rule__Requirement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_4_1()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getCommentAssignment_4_2()); }
(rule__Requirement__CommentAssignment_4_2)
{ after(grammarAccess.getRequirementAccess().getCommentAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Requirement__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_5__0__Impl
	rule__Requirement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getAssignedKeyword_5_0()); }

	KEYWORD_51 

{ after(grammarAccess.getRequirementAccess().getAssignedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_5__1__Impl
	rule__Requirement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getToKeyword_5_1()); }

	KEYWORD_22 

{ after(grammarAccess.getRequirementAccess().getToKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_5__2__Impl
	rule__Requirement__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_5_2()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getAssignedToAssignment_5_3()); }
(rule__Requirement__AssignedToAssignment_5_3)*
{ after(grammarAccess.getRequirementAccess().getAssignedToAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Requirement__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_6__0__Impl
	rule__Requirement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getReferencedKeyword_6_0()); }

	KEYWORD_61 

{ after(grammarAccess.getRequirementAccess().getReferencedKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_6__1__Impl
	rule__Requirement__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getByKeyword_6_1()); }

	KEYWORD_17 

{ after(grammarAccess.getRequirementAccess().getByKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_6__2__Impl
	rule__Requirement__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_6_2()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getReferencedByAssignment_6_3()); }
(rule__Requirement__ReferencedByAssignment_6_3)*
{ after(grammarAccess.getRequirementAccess().getReferencedByAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Requirement__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_7__0__Impl
	rule__Requirement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getVerifiedKeyword_7_0()); }

	KEYWORD_53 

{ after(grammarAccess.getRequirementAccess().getVerifiedKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_7__1__Impl
	rule__Requirement__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getByKeyword_7_1()); }

	KEYWORD_17 

{ after(grammarAccess.getRequirementAccess().getByKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_7__2__Impl
	rule__Requirement__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_7_2()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getVerifiedByAssignment_7_3()); }
(rule__Requirement__VerifiedByAssignment_7_3)*
{ after(grammarAccess.getRequirementAccess().getVerifiedByAssignment_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Requirement__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_8__0__Impl
	rule__Requirement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDecomposedKeyword_8_0()); }

	KEYWORD_58 

{ after(grammarAccess.getRequirementAccess().getDecomposedKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_8__1__Impl
	rule__Requirement__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getByKeyword_8_1()); }

	KEYWORD_17 

{ after(grammarAccess.getRequirementAccess().getByKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_8__2__Impl
	rule__Requirement__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getColonKeyword_8_2()); }

	KEYWORD_8 

{ after(grammarAccess.getRequirementAccess().getColonKeyword_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Requirement__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Requirement__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDecomposedByAssignment_8_3()); }
(rule__Requirement__DecomposedByAssignment_8_3)*
{ after(grammarAccess.getRequirementAccess().getDecomposedByAssignment_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RequirementDecomposition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementDecomposition__Group_1__0__Impl
	rule__RequirementDecomposition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getLeftAssignment_1_0()); }
(rule__RequirementDecomposition__LeftAssignment_1_0)
{ after(grammarAccess.getRequirementDecompositionAccess().getLeftAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementDecomposition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementDecomposition__Group_1__1__Impl
	rule__RequirementDecomposition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getTypeAssignment_1_1()); }
(rule__RequirementDecomposition__TypeAssignment_1_1)
{ after(grammarAccess.getRequirementDecompositionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RequirementDecomposition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RequirementDecomposition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getRightAssignment_1_2()); }
(rule__RequirementDecomposition__RightAssignment_1_2)
{ after(grammarAccess.getRequirementDecompositionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationDecomposition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationDecomposition__Group_1__0__Impl
	rule__VerificationDecomposition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getLeftAssignment_1_0()); }
(rule__VerificationDecomposition__LeftAssignment_1_0)
{ after(grammarAccess.getVerificationDecompositionAccess().getLeftAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationDecomposition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationDecomposition__Group_1__1__Impl
	rule__VerificationDecomposition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getTypeAssignment_1_1()); }
(rule__VerificationDecomposition__TypeAssignment_1_1)
{ after(grammarAccess.getVerificationDecompositionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationDecomposition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationDecomposition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getRightAssignment_1_2()); }
(rule__VerificationDecomposition__RightAssignment_1_2)
{ after(grammarAccess.getVerificationDecompositionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__0__Impl
	rule__ElementType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getSystemKeyword_0()); }

	KEYWORD_41 

{ after(grammarAccess.getElementTypeAccess().getSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__1__Impl
	rule__ElementType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getElementKeyword_1()); }

	KEYWORD_46 

{ after(grammarAccess.getElementTypeAccess().getElementKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__2__Impl
	rule__ElementType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getNameAssignment_2()); }
(rule__ElementType__NameAssignment_2)
{ after(grammarAccess.getElementTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__3__Impl
	rule__ElementType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getGroup_3()); }
(rule__ElementType__Group_3__0)?
{ after(grammarAccess.getElementTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__4__Impl
	rule__ElementType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getGroup_4()); }
(rule__ElementType__Group_4__0)?
{ after(grammarAccess.getElementTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__5__Impl
	rule__ElementType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getGroup_5()); }
(rule__ElementType__Group_5__0)?
{ after(grammarAccess.getElementTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__6__Impl
	rule__ElementType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getGroup_6()); }
(rule__ElementType__Group_6__0)?
{ after(grammarAccess.getElementTypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__7__Impl
	rule__ElementType__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getGroup_7()); }
(rule__ElementType__Group_7__0)?
{ after(grammarAccess.getElementTypeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__8__Impl
	rule__ElementType__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getEndKeyword_8()); }

	KEYWORD_25 

{ after(grammarAccess.getElementTypeAccess().getEndKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__9__Impl
	rule__ElementType__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getSystemKeyword_9()); }

	KEYWORD_41 

{ after(grammarAccess.getElementTypeAccess().getSystemKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__10__Impl
	rule__ElementType__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getElementKeyword_10()); }

	KEYWORD_46 

{ after(grammarAccess.getElementTypeAccess().getElementKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getSemicolonKeyword_11()); }

	KEYWORD_9 

{ after(grammarAccess.getElementTypeAccess().getSemicolonKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__ElementType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_3__0__Impl
	rule__ElementType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getReferenceKeyword_3_0()); }

	KEYWORD_55 

{ after(grammarAccess.getElementTypeAccess().getReferenceKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_3__1__Impl
	rule__ElementType__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getColonKeyword_3_1()); }

	KEYWORD_8 

{ after(grammarAccess.getElementTypeAccess().getColonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getReferenceAssignment_3_2()); }
(rule__ElementType__ReferenceAssignment_3_2)
{ after(grammarAccess.getElementTypeAccess().getReferenceAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_4__0__Impl
	rule__ElementType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getElementTypeKeyword_4_0()); }

	KEYWORD_65 

{ after(grammarAccess.getElementTypeAccess().getElementTypeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_4__1__Impl
	rule__ElementType__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getColonKeyword_4_1()); }

	KEYWORD_8 

{ after(grammarAccess.getElementTypeAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getElementTypeAssignment_4_2()); }
(rule__ElementType__ElementTypeAssignment_4_2)
{ after(grammarAccess.getElementTypeAccess().getElementTypeAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_5__0__Impl
	rule__ElementType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getModelTypeKeyword_5_0()); }

	KEYWORD_60 

{ after(grammarAccess.getElementTypeAccess().getModelTypeKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_5__1__Impl
	rule__ElementType__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getColonKeyword_5_1()); }

	KEYWORD_8 

{ after(grammarAccess.getElementTypeAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getModelTypeAssignment_5_2()); }
(rule__ElementType__ModelTypeAssignment_5_2)
{ after(grammarAccess.getElementTypeAccess().getModelTypeAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_6__0__Impl
	rule__ElementType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getDocumentDetailsKeyword_6_0()); }

	KEYWORD_67 

{ after(grammarAccess.getElementTypeAccess().getDocumentDetailsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_6__1__Impl
	rule__ElementType__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getColonKeyword_6_1()); }

	KEYWORD_8 

{ after(grammarAccess.getElementTypeAccess().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getDetailsAssignment_6_2()); }
(rule__ElementType__DetailsAssignment_6_2)
{ after(grammarAccess.getElementTypeAccess().getDetailsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementType__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_7__0__Impl
	rule__ElementType__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getVersionKeyword_7_0()); }

	KEYWORD_49 

{ after(grammarAccess.getElementTypeAccess().getVersionKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_7__1__Impl
	rule__ElementType__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getColonKeyword_7_1()); }

	KEYWORD_8 

{ after(grammarAccess.getElementTypeAccess().getColonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementType__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementType__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getVersionAssignment_7_2()); }
(rule__ElementType__VersionAssignment_7_2)*
{ after(grammarAccess.getElementTypeAccess().getVersionAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationActivity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__0__Impl
	rule__VerificationActivity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0()); }

	KEYWORD_66 

{ after(grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__1__Impl
	rule__VerificationActivity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getActivityKeyword_1()); }

	KEYWORD_50 

{ after(grammarAccess.getVerificationActivityAccess().getActivityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__2__Impl
	rule__VerificationActivity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getNameAssignment_2()); }
(rule__VerificationActivity__NameAssignment_2)
{ after(grammarAccess.getVerificationActivityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__3__Impl
	rule__VerificationActivity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getGroup_3()); }
(rule__VerificationActivity__Group_3__0)?
{ after(grammarAccess.getVerificationActivityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__4__Impl
	rule__VerificationActivity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getGroup_4()); }
(rule__VerificationActivity__Group_4__0)?
{ after(grammarAccess.getVerificationActivityAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__5__Impl
	rule__VerificationActivity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getGroup_5()); }
(rule__VerificationActivity__Group_5__0)?
{ after(grammarAccess.getVerificationActivityAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__6__Impl
	rule__VerificationActivity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getGroup_6()); }
(rule__VerificationActivity__Group_6__0)?
{ after(grammarAccess.getVerificationActivityAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__7__Impl
	rule__VerificationActivity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getEndKeyword_7()); }

	KEYWORD_25 

{ after(grammarAccess.getVerificationActivityAccess().getEndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__8__Impl
	rule__VerificationActivity__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getVerificationKeyword_8()); }

	KEYWORD_66 

{ after(grammarAccess.getVerificationActivityAccess().getVerificationKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__9__Impl
	rule__VerificationActivity__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getActivityKeyword_9()); }

	KEYWORD_50 

{ after(grammarAccess.getVerificationActivityAccess().getActivityKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_10()); }

	KEYWORD_9 

{ after(grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__VerificationActivity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_3__0__Impl
	rule__VerificationActivity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getTitleKeyword_3_0()); }

	KEYWORD_34 

{ after(grammarAccess.getVerificationActivityAccess().getTitleKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_3__1__Impl
	rule__VerificationActivity__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getColonKeyword_3_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationActivityAccess().getColonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getTitleAssignment_3_2()); }
(rule__VerificationActivity__TitleAssignment_3_2)
{ after(grammarAccess.getVerificationActivityAccess().getTitleAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationActivity__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4__0__Impl
	rule__VerificationActivity__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_0()); }

	KEYWORD_62 

{ after(grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4__1__Impl
	rule__VerificationActivity__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getColonKeyword_4_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationActivityAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getDescriptionAssignment_4_2()); }
(rule__VerificationActivity__DescriptionAssignment_4_2)
{ after(grammarAccess.getVerificationActivityAccess().getDescriptionAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationActivity__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_5__0__Impl
	rule__VerificationActivity__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getMethodKeyword_5_0()); }

	KEYWORD_36 

{ after(grammarAccess.getVerificationActivityAccess().getMethodKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_5__1__Impl
	rule__VerificationActivity__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getColonKeyword_5_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationActivityAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getMethodAssignment_5_2()); }
(rule__VerificationActivity__MethodAssignment_5_2)
{ after(grammarAccess.getVerificationActivityAccess().getMethodAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationActivity__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_6__0__Impl
	rule__VerificationActivity__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getAssignedKeyword_6_0()); }

	KEYWORD_51 

{ after(grammarAccess.getVerificationActivityAccess().getAssignedKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_6__1__Impl
	rule__VerificationActivity__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getToKeyword_6_1()); }

	KEYWORD_22 

{ after(grammarAccess.getVerificationActivityAccess().getToKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_6__2__Impl
	rule__VerificationActivity__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getColonKeyword_6_2()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationActivityAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationActivity__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationActivity__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getAssignedToAssignment_6_3()); }
(rule__VerificationActivity__AssignedToAssignment_6_3)*
{ after(grammarAccess.getVerificationActivityAccess().getAssignedToAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VerificationResult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__0__Impl
	rule__VerificationResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getVerificationKeyword_0()); }

	KEYWORD_66 

{ after(grammarAccess.getVerificationResultAccess().getVerificationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__1__Impl
	rule__VerificationResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getResultKeyword_1()); }

	KEYWORD_39 

{ after(grammarAccess.getVerificationResultAccess().getResultKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__2__Impl
	rule__VerificationResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getNameAssignment_2()); }
(rule__VerificationResult__NameAssignment_2)
{ after(grammarAccess.getVerificationResultAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__3__Impl
	rule__VerificationResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getOfKeyword_3()); }

	KEYWORD_19 

{ after(grammarAccess.getVerificationResultAccess().getOfKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__4__Impl
	rule__VerificationResult__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodAssignment_4()); }
(rule__VerificationResult__ReferencedVerificationMethodAssignment_4)*
{ after(grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__5__Impl
	rule__VerificationResult__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getGroup_5()); }
(rule__VerificationResult__Group_5__0)?
{ after(grammarAccess.getVerificationResultAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__6__Impl
	rule__VerificationResult__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getGroup_6()); }
(rule__VerificationResult__Group_6__0)?
{ after(grammarAccess.getVerificationResultAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__7__Impl
	rule__VerificationResult__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getGroup_7()); }
(rule__VerificationResult__Group_7__0)?
{ after(grammarAccess.getVerificationResultAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__8__Impl
	rule__VerificationResult__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getGroup_8()); }
(rule__VerificationResult__Group_8__0)?
{ after(grammarAccess.getVerificationResultAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__9__Impl
	rule__VerificationResult__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getGroup_9()); }
(rule__VerificationResult__Group_9__0)?
{ after(grammarAccess.getVerificationResultAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__10__Impl
	rule__VerificationResult__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getEndKeyword_10()); }

	KEYWORD_25 

{ after(grammarAccess.getVerificationResultAccess().getEndKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__11__Impl
	rule__VerificationResult__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getVerificationKeyword_11()); }

	KEYWORD_66 

{ after(grammarAccess.getVerificationResultAccess().getVerificationKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__12__Impl
	rule__VerificationResult__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getResultKeyword_12()); }

	KEYWORD_39 

{ after(grammarAccess.getVerificationResultAccess().getResultKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group__13__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getSemicolonKeyword_13()); }

	KEYWORD_9 

{ after(grammarAccess.getVerificationResultAccess().getSemicolonKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}






























rule__VerificationResult__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_5__0__Impl
	rule__VerificationResult__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getOutputKeyword_5_0()); }

	KEYWORD_37 

{ after(grammarAccess.getVerificationResultAccess().getOutputKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_5__1__Impl
	rule__VerificationResult__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getColonKeyword_5_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationResultAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getTitleAssignment_5_2()); }
(rule__VerificationResult__TitleAssignment_5_2)
{ after(grammarAccess.getVerificationResultAccess().getTitleAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationResult__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_6__0__Impl
	rule__VerificationResult__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getLogfileKeyword_6_0()); }

	KEYWORD_47 

{ after(grammarAccess.getVerificationResultAccess().getLogfileKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_6__1__Impl
	rule__VerificationResult__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getColonKeyword_6_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationResultAccess().getColonKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getDescriptionAssignment_6_2()); }
(rule__VerificationResult__DescriptionAssignment_6_2)
{ after(grammarAccess.getVerificationResultAccess().getDescriptionAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationResult__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_7__0__Impl
	rule__VerificationResult__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getDateKeyword_7_0()); }

	KEYWORD_27 

{ after(grammarAccess.getVerificationResultAccess().getDateKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_7__1__Impl
	rule__VerificationResult__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getColonKeyword_7_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationResultAccess().getColonKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getMethodAssignment_7_2()); }
(rule__VerificationResult__MethodAssignment_7_2)
{ after(grammarAccess.getVerificationResultAccess().getMethodAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationResult__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_8__0__Impl
	rule__VerificationResult__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getStateKeyword_8_0()); }

	KEYWORD_33 

{ after(grammarAccess.getVerificationResultAccess().getStateKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_8__1__Impl
	rule__VerificationResult__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getColonKeyword_8_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationResultAccess().getColonKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getStateAssignment_8_2()); }
(rule__VerificationResult__StateAssignment_8_2)
{ after(grammarAccess.getVerificationResultAccess().getStateAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VerificationResult__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_9__0__Impl
	rule__VerificationResult__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getStatusKeyword_9_0()); }

	KEYWORD_40 

{ after(grammarAccess.getVerificationResultAccess().getStatusKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_9__1__Impl
	rule__VerificationResult__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getColonKeyword_9_1()); }

	KEYWORD_8 

{ after(grammarAccess.getVerificationResultAccess().getColonKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VerificationResult__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VerificationResult__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getStatusAssignment_9_2()); }
(rule__VerificationResult__StatusAssignment_9_2)
{ after(grammarAccess.getVerificationResultAccess().getStatusAssignment_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContainedPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__0__Impl
	rule__ContainedPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__ContainedPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__1__Impl
	rule__ContainedPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
(rule__ContainedPropertyAssociation__Alternatives_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__2__Impl
	rule__ContainedPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
(rule__ContainedPropertyAssociation__ConstantAssignment_2)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__3__Impl
	rule__ContainedPropertyAssociation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3()); }
(rule__ContainedPropertyAssociation__Group_3__0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__4__Impl
	rule__ContainedPropertyAssociation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
(rule__ContainedPropertyAssociation__Group_4__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__5__Impl
	rule__ContainedPropertyAssociation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_5()); }
(rule__ContainedPropertyAssociation__Group_5__0)?
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6()); }

	KEYWORD_9 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ContainedPropertyAssociation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3__0__Impl
	rule__ContainedPropertyAssociation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_1()); }
(rule__ContainedPropertyAssociation__Group_3_1__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_1__0__Impl
	rule__ContainedPropertyAssociation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0()); }

	KEYWORD_5 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1_1()); }
(rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__0__Impl
	rule__ContainedPropertyAssociation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_4_0()); }

	KEYWORD_42 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__1__Impl
	rule__ContainedPropertyAssociation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_4_1()); }

	KEYWORD_22 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getToKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__2__Impl
	rule__ContainedPropertyAssociation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_2)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_3()); }
(rule__ContainedPropertyAssociation__Group_4_3__0)*
{ after(grammarAccess.getContainedPropertyAssociationAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainedPropertyAssociation__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_3__0__Impl
	rule__ContainedPropertyAssociation__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_3_0()); }

	KEYWORD_5 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_3_1()); }
(rule__ContainedPropertyAssociation__AppliesToAssignment_4_3_1)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContainedPropertyAssociation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__0__Impl
	rule__ContainedPropertyAssociation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInKeyword_5_0()); }

	KEYWORD_18 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getInKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__1__Impl
	rule__ContainedPropertyAssociation__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getBindingKeyword_5_1()); }

	KEYWORD_43 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getBindingKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__2__Impl
	rule__ContainedPropertyAssociation__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_2()); }

	KEYWORD_1 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__3__Impl
	rule__ContainedPropertyAssociation__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingAssignment_5_3()); }
(rule__ContainedPropertyAssociation__InBindingAssignment_5_3)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainedPropertyAssociation__Group_5__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainedPropertyAssociation__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__Group_5__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_4()); }

	KEYWORD_2 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















rule__ContainmentPath__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group__0__Impl
	rule__ContainmentPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainedNamedElementAction_0()); }
(

)
{ after(grammarAccess.getContainmentPathAccess().getContainedNamedElementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPath__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group__1__Impl
	rule__ContainmentPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_1()); }
(rule__ContainmentPath__ContainmentPathElementAssignment_1)
{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPath__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getGroup_2()); }
(rule__ContainmentPath__Group_2__0)*
{ after(grammarAccess.getContainmentPathAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ContainmentPath__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group_2__0__Impl
	rule__ContainmentPath__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getFullStopKeyword_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getContainmentPathAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPath__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPath__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_2_1()); }
(rule__ContainmentPath__ContainmentPathElementAssignment_2_1)
{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OptionalModalPropertyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__0__Impl
	rule__OptionalModalPropertyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
(rule__OptionalModalPropertyValue__OwnedValueAssignment_0)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
(rule__OptionalModalPropertyValue__Group_1__0)?
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalModalPropertyValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__0__Impl
	rule__OptionalModalPropertyValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInKeyword_1_0()); }

	KEYWORD_18 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__1__Impl
	rule__OptionalModalPropertyValue__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getModesKeyword_1_1()); }

	KEYWORD_32 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getModesKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__2__Impl
	rule__OptionalModalPropertyValue__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_2()); }

	KEYWORD_1 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__3__Impl
	rule__OptionalModalPropertyValue__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_3)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__4__Impl
	rule__OptionalModalPropertyValue__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_4()); }
(rule__OptionalModalPropertyValue__Group_1_4__0)*
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_5()); }

	KEYWORD_2 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__OptionalModalPropertyValue__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_4__0__Impl
	rule__OptionalModalPropertyValue__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_4_0()); }

	KEYWORD_5 

{ after(grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalModalPropertyValue__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalModalPropertyValue__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_4_1()); }
(rule__OptionalModalPropertyValue__InModeAssignment_1_4_1)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
(rule__BooleanLiteral__Alternatives_1)
{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__0__Impl
	rule__ReferenceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }

	KEYWORD_55 

{ after(grammarAccess.getReferenceTermAccess().getReferenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__1__Impl
	rule__ReferenceTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__2__Impl
	rule__ReferenceTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getGroup_2()); }
(rule__ReferenceTerm__Group_2__0)?
{ after(grammarAccess.getReferenceTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__3__Impl
	rule__ReferenceTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_3()); }
(rule__ReferenceTerm__ContainmentPathElementAssignment_3)
{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__4__Impl
	rule__ReferenceTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getGroup_4()); }
(rule__ReferenceTerm__Group_4__0)*
{ after(grammarAccess.getReferenceTermAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_5()); }

	KEYWORD_2 

{ after(grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ReferenceTerm__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group_2__0__Impl
	rule__ReferenceTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_2_0()); }
(rule__ReferenceTerm__ContainmentPathElementAssignment_2_0)
{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getFullStopKeyword_2_1()); }

	KEYWORD_7 

{ after(grammarAccess.getReferenceTermAccess().getFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceTerm__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group_4__0__Impl
	rule__ReferenceTerm__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getFullStopKeyword_4_0()); }

	KEYWORD_7 

{ after(grammarAccess.getReferenceTermAccess().getFullStopKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceTerm__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceTerm__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_4_1()); }
(rule__ReferenceTerm__ContainmentPathElementAssignment_4_1)
{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RecordTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__0__Impl
	rule__RecordTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }

	KEYWORD_10 

{ after(grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__1__Impl
	rule__RecordTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
(rule__RecordTerm__OwnedFieldValueAssignment_1)*
{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2()); }

	KEYWORD_11 

{ after(grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ComputedTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__0__Impl
	rule__ComputedTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }

	KEYWORD_45 

{ after(grammarAccess.getComputedTermAccess().getComputeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__1__Impl
	rule__ComputedTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__2__Impl
	rule__ComputedTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
(rule__ComputedTerm__FunctionAssignment_2)
{ after(grammarAccess.getComputedTermAccess().getFunctionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComputedTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComponentClassifierTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__0__Impl
	rule__ComponentClassifierTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }

	KEYWORD_57 

{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__1__Impl
	rule__ComponentClassifierTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__2__Impl
	rule__ComponentClassifierTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
(rule__ComponentClassifierTerm__ClassifierAssignment_2)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentClassifierTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentClassifierTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__0__Impl
	rule__ListTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getListValueAction_0()); }
(

)
{ after(grammarAccess.getListTermAccess().getListValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__1__Impl
	rule__ListTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1()); }

	KEYWORD_1 

{ after(grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__2__Impl
	rule__ListTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2()); }
(rule__ListTerm__Group_2__0)?
{ after(grammarAccess.getListTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }

	KEYWORD_2 

{ after(grammarAccess.getListTermAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListTerm__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__0__Impl
	rule__ListTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_0()); }
(rule__ListTerm__OwnedListElementAssignment_2_0)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getGroup_2_1()); }
(rule__ListTerm__Group_2_1__0)*
{ after(grammarAccess.getListTermAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ListTerm__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2_1__0__Impl
	rule__ListTerm__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getCommaKeyword_2_1_0()); }

	KEYWORD_5 

{ after(grammarAccess.getListTermAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListTerm__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListTerm__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1_1()); }
(rule__ListTerm__OwnedListElementAssignment_2_1_1)
{ after(grammarAccess.getListTermAccess().getOwnedListElementAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FieldPropertyAssociation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__0__Impl
	rule__FieldPropertyAssociation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
(rule__FieldPropertyAssociation__PropertyAssignment_0)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__1__Impl
	rule__FieldPropertyAssociation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	KEYWORD_16 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__2__Impl
	rule__FieldPropertyAssociation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
(rule__FieldPropertyAssociation__OwnedValueAssignment_2)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPropertyAssociation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldPropertyAssociation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }

	KEYWORD_9 

{ after(grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ContainmentPathElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__0__Impl
	rule__ContainmentPathElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0()); }
(rule__ContainmentPathElement__NamedElementAssignment_0)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContainmentPathElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContainmentPathElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_1()); }
(rule__ContainmentPathElement__ArrayRangeAssignment_1)?
{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ArrayRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__0__Impl
	rule__ArrayRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
(

)
{ after(grammarAccess.getArrayRangeAccess().getArrayRangeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__1__Impl
	rule__ArrayRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }

	KEYWORD_10 

{ after(grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__2__Impl
	rule__ArrayRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
(rule__ArrayRange__LowerBoundAssignment_2)
{ after(grammarAccess.getArrayRangeAccess().getLowerBoundAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__3__Impl
	rule__ArrayRange__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getGroup_3()); }
(rule__ArrayRange__Group_3__0)?
{ after(grammarAccess.getArrayRangeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }

	KEYWORD_11 

{ after(grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArrayRange__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__0__Impl
	rule__ArrayRange__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }

	KEYWORD_14 

{ after(grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayRange__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayRange__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
(rule__ArrayRange__UpperBoundAssignment_3_1)
{ after(grammarAccess.getArrayRangeAccess().getUpperBoundAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__0__Impl
	rule__SignedConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
(rule__SignedConstant__OpAssignment_0)
{ after(grammarAccess.getSignedConstantAccess().getOpAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
(rule__SignedConstant__OwnedPropertyExpressionAssignment_1)
{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__0__Impl
	rule__IntegerTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
(rule__IntegerTerm__ValueAssignment_0)
{ after(grammarAccess.getIntegerTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
(rule__IntegerTerm__UnitAssignment_1)?
{ after(grammarAccess.getIntegerTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__0__Impl
	rule__SignedInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
(rule__SignedInt__Alternatives_0)?
{ after(grammarAccess.getSignedIntAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); }
	RULE_INTEGER_LIT
{ after(grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__0__Impl
	rule__RealTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
(rule__RealTerm__ValueAssignment_0)
{ after(grammarAccess.getRealTermAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTerm__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
(rule__RealTerm__UnitAssignment_1)?
{ after(grammarAccess.getRealTermAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignedReal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__0__Impl
	rule__SignedReal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
(rule__SignedReal__Alternatives_0)?
{ after(grammarAccess.getSignedRealAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignedReal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignedReal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); }
	RULE_REAL_LIT
{ after(grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericRangeTerm__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__0__Impl
	rule__NumericRangeTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
(rule__NumericRangeTerm__MinimumAssignment_0)
{ after(grammarAccess.getNumericRangeTermAccess().getMinimumAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__1__Impl
	rule__NumericRangeTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }

	KEYWORD_14 

{ after(grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__2__Impl
	rule__NumericRangeTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
(rule__NumericRangeTerm__MaximumAssignment_2)
{ after(grammarAccess.getNumericRangeTermAccess().getMaximumAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
(rule__NumericRangeTerm__Group_3__0)?
{ after(grammarAccess.getNumericRangeTermAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NumericRangeTerm__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__0__Impl
	rule__NumericRangeTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }

	KEYWORD_30 

{ after(grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericRangeTerm__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericRangeTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
(rule__NumericRangeTerm__DeltaAssignment_3_1)
{ after(grammarAccess.getNumericRangeTermAccess().getDeltaAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCLREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCLREF__Group__0__Impl
	rule__QCLREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCLREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCLREF__Group__1__Impl
	rule__QCLREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCLREFAccess().getColonColonKeyword_1()); }

	KEYWORD_15 

{ after(grammarAccess.getQCLREFAccess().getColonColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCLREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCLREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCLREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QPREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__0__Impl
	rule__QPREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getGroup_1()); }
(rule__QPREF__Group_1__0)?
{ after(grammarAccess.getQPREFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QPREF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__0__Impl
	rule__QPREF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }

	KEYWORD_15 

{ after(grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QPREF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QPREF__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QPREF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__0__Impl
	rule__QCREF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_0()); }
(rule__QCREF__Group_0__0)*
{ after(grammarAccess.getQCREFAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__1__Impl
	rule__QCREF__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getGroup_2()); }
(rule__QCREF__Group_2__0)?
{ after(grammarAccess.getQCREFAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QCREF__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__0__Impl
	rule__QCREF__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }

	KEYWORD_15 

{ after(grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QCREF__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__0__Impl
	rule__QCREF__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }

	KEYWORD_7 

{ after(grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QCREF__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QCREF__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QCREF__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__AlisaModel__ContentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlisaModelAccess().getContentAlternatives_0()); }
(rule__AlisaModel__ContentAlternatives_0)
{ after(grammarAccess.getAlisaModelAccess().getContentAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__TitleAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getTitleValueStringParserRuleCall_2_2_0()); }
	ruleValueString{ after(grammarAccess.getStakeholderAccess().getTitleValueStringParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__DescriptionAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getDescriptionValueStringParserRuleCall_3_2_0()); }
	ruleValueString{ after(grammarAccess.getStakeholderAccess().getDescriptionValueStringParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stakeholder__RoleAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStakeholderAccess().getRoleValueStringParserRuleCall_4_2_0()); }
	ruleValueString{ after(grammarAccess.getStakeholderAccess().getRoleValueStringParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__TitleAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getTitleValueStringParserRuleCall_2_2_0()); }
	ruleValueString{ after(grammarAccess.getRequirementAccess().getTitleValueStringParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__DescriptionAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDescriptionValueStringParserRuleCall_3_2_0()); }
	ruleValueString{ after(grammarAccess.getRequirementAccess().getDescriptionValueStringParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__CommentAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getCommentValueStringParserRuleCall_4_2_0()); }
	ruleValueString{ after(grammarAccess.getRequirementAccess().getCommentValueStringParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__AssignedToAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getAssignedToStakeholderCrossReference_5_3_0()); }
(
{ before(grammarAccess.getRequirementAccess().getAssignedToStakeholderIDTerminalRuleCall_5_3_0_1()); }
	RULE_ID{ after(grammarAccess.getRequirementAccess().getAssignedToStakeholderIDTerminalRuleCall_5_3_0_1()); }
)
{ after(grammarAccess.getRequirementAccess().getAssignedToStakeholderCrossReference_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__ReferencedByAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getReferencedByElementTypeCrossReference_6_3_0()); }
(
{ before(grammarAccess.getRequirementAccess().getReferencedByElementTypeIDTerminalRuleCall_6_3_0_1()); }
	RULE_ID{ after(grammarAccess.getRequirementAccess().getReferencedByElementTypeIDTerminalRuleCall_6_3_0_1()); }
)
{ after(grammarAccess.getRequirementAccess().getReferencedByElementTypeCrossReference_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__VerifiedByAssignment_7_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getVerifiedByVerificationDecompositionParserRuleCall_7_3_0()); }
	ruleVerificationDecomposition{ after(grammarAccess.getRequirementAccess().getVerifiedByVerificationDecompositionParserRuleCall_7_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Requirement__DecomposedByAssignment_8_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementAccess().getDecomposedByRequirementDecompositionParserRuleCall_8_3_0()); }
	ruleRequirementDecomposition{ after(grammarAccess.getRequirementAccess().getDecomposedByRequirementDecompositionParserRuleCall_8_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getElementRequirementCrossReference_0_0()); }
(
{ before(grammarAccess.getRequirementDecompositionAccess().getElementRequirementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRequirementDecompositionAccess().getElementRequirementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRequirementDecompositionAccess().getElementRequirementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__LeftAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getLeftRequirementCrossReference_1_0_0()); }
(
{ before(grammarAccess.getRequirementDecompositionAccess().getLeftRequirementIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRequirementDecompositionAccess().getLeftRequirementIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getRequirementDecompositionAccess().getLeftRequirementCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getTypeAlternatives_1_1_0()); }
(rule__RequirementDecomposition__TypeAlternatives_1_1_0)
{ after(grammarAccess.getRequirementDecompositionAccess().getTypeAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RequirementDecomposition__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRequirementDecompositionAccess().getRightRequirementDecompositionParserRuleCall_1_2_0()); }
	ruleRequirementDecomposition{ after(grammarAccess.getRequirementDecompositionAccess().getRightRequirementDecompositionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityCrossReference_0_0()); }
(
{ before(grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__LeftAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityCrossReference_1_0_0()); }
(
{ before(grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getTypeAlternatives_1_1_0()); }
(rule__VerificationDecomposition__TypeAlternatives_1_1_0)
{ after(grammarAccess.getVerificationDecompositionAccess().getTypeAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationDecomposition__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationDecompositionAccess().getRightVerificationDecompositionParserRuleCall_1_2_0()); }
	ruleVerificationDecomposition{ after(grammarAccess.getVerificationDecompositionAccess().getRightVerificationDecompositionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getElementTypeAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__ReferenceAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getReferenceValueStringParserRuleCall_3_2_0()); }
	ruleValueString{ after(grammarAccess.getElementTypeAccess().getReferenceValueStringParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__ElementTypeAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getElementTypeValueStringParserRuleCall_4_2_0()); }
	ruleValueString{ after(grammarAccess.getElementTypeAccess().getElementTypeValueStringParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__ModelTypeAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getModelTypeValueStringParserRuleCall_5_2_0()); }
	ruleValueString{ after(grammarAccess.getElementTypeAccess().getModelTypeValueStringParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__DetailsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getDetailsValueStringParserRuleCall_6_2_0()); }
	ruleValueString{ after(grammarAccess.getElementTypeAccess().getDetailsValueStringParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementType__VersionAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementTypeAccess().getVersionValueStringParserRuleCall_7_2_0()); }
	ruleValueString{ after(grammarAccess.getElementTypeAccess().getVersionValueStringParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__TitleAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_3_2_0()); }
	ruleValueString{ after(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__DescriptionAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_2_0()); }
	ruleValueString{ after(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__MethodAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_5_2_0()); }
	ruleVerificationMethod{ after(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationActivity__AssignedToAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderCrossReference_6_3_0()); }
(
{ before(grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderIDTerminalRuleCall_6_3_0_1()); }
	RULE_ID{ after(grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderIDTerminalRuleCall_6_3_0_1()); }
)
{ after(grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderCrossReference_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getVerificationResultAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__ReferencedVerificationMethodAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityCrossReference_4_0()); }
(
{ before(grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__TitleAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getTitleValueStringParserRuleCall_5_2_0()); }
	ruleValueString{ after(grammarAccess.getVerificationResultAccess().getTitleValueStringParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__DescriptionAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getDescriptionValueStringParserRuleCall_6_2_0()); }
	ruleValueString{ after(grammarAccess.getVerificationResultAccess().getDescriptionValueStringParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__MethodAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getMethodValueStringParserRuleCall_7_2_0()); }
	ruleValueString{ after(grammarAccess.getVerificationResultAccess().getMethodValueStringParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__StateAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getStateVerificationResultStateParserRuleCall_8_2_0()); }
	ruleVerificationResultState{ after(grammarAccess.getVerificationResultAccess().getStateVerificationResultStateParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VerificationResult__StatusAssignment_9_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVerificationResultAccess().getStatusVerificationResultStatusParserRuleCall_9_2_0()); }
	ruleVerificationResultStatus{ after(grammarAccess.getVerificationResultAccess().getStatusVerificationResultStatusParserRuleCall_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
	ruleQPREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyQPREFParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppendAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }

	KEYWORD_23 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__ConstantAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }

	KEYWORD_52 

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

{ after(grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__OwnedValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); }
	ruleOptionalModalPropertyValue{ after(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__AppliesToAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_3_1_0()); }
	ruleContainmentPath{ after(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainedPropertyAssociation__InBindingAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_3_0()); }
(
{ before(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierQCREFParserRuleCall_5_3_0_1()); }
	ruleQCREF{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierQCREFParserRuleCall_5_3_0_1()); }
)
{ after(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ContainmentPath__ContainmentPathElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPath__ContainmentPathElementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getContainmentPathAccess().getContainmentPathElementContainmentPathElementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__OptionalModalPropertyValue__OwnedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_3_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalModalPropertyValue__InModeAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_4_1_0()); }
(
{ before(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_4_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeIDTerminalRuleCall_1_4_1_0_1()); }
)
{ after(grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyValue__OwnedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
	rulePropertyExpression{ after(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralorReferenceTerm__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
(
{ before(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }

	KEYWORD_29 

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__NamedValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
(
{ before(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
	ruleQPREF{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantQPREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__ContainmentPathElementAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementQualifiedContainmentPathElementParserRuleCall_2_0_0()); }
	ruleQualifiedContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementQualifiedContainmentPathElementParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__ContainmentPathElementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_3_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceTerm__ContainmentPathElementAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_4_1_0()); }
	ruleContainmentPathElement{ after(grammarAccess.getReferenceTermAccess().getContainmentPathElementContainmentPathElementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordTerm__OwnedFieldValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
	ruleFieldPropertyAssociation{ after(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedTerm__FunctionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentClassifierTerm__ClassifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
(
{ before(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
	ruleQCREF{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierQCREFParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListTerm__OwnedListElementAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); }
	rulePropertyExpression{ after(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__PropertyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPropertyAssociation__OwnedValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
	rulePropertyExpression{ after(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__NamedElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0()); }
(
{ before(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContainmentPathElement__ArrayRangeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_1_0()); }
	ruleArrayRange{ after(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedContainmentPathElement__NamedElementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0()); }
(
{ before(grammarAccess.getQualifiedContainmentPathElementAccess().getNamedElementNamedElementQCLREFParserRuleCall_0_1()); }
	ruleQCLREF{ after(grammarAccess.getQualifiedContainmentPathElementAccess().getNamedElementNamedElementQCLREFParserRuleCall_0_1()); }
)
{ after(grammarAccess.getQualifiedContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTerm__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
	ruleNoQuoteString{ after(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__LowerBoundAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayRange__UpperBoundAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
	ruleINTVALUE{ after(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OpAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
	rulePlusMinus{ after(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignedConstant__OwnedPropertyExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
	ruleConstantValue{ after(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); }
	ruleSignedInt{ after(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); }
	ruleSignedReal{ after(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
(
{ before(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MinimumAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__MaximumAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericRangeTerm__DeltaAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); }
	ruleNumAlt{ after(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


