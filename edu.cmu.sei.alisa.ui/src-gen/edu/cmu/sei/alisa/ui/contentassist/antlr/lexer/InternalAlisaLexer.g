
/*
* generated by Xtext
*/
lexer grammar InternalAlisaLexer;


@header {
package edu.cmu.sei.alisa.ui.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}




Organization : ('O'|'o')('R'|'r')('G'|'g')('A'|'a')('N'|'n')('I'|'i')('Z'|'z')('A'|'a')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Verification : ('V'|'v')('E'|'e')('R'|'r')('I'|'i')('F'|'f')('I'|'i')('C'|'c')('A'|'a')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Description : ('D'|'d')('E'|'e')('S'|'s')('C'|'c')('R'|'r')('I'|'i')('P'|'p')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Requirement : ('R'|'r')('E'|'e')('Q'|'q')('U'|'u')('I'|'i')('R'|'r')('E'|'e')('M'|'m')('E'|'e')('N'|'n')('T'|'t');

Stakeholder : ('S'|'s')('T'|'t')('A'|'a')('K'|'k')('E'|'e')('H'|'h')('O'|'o')('L'|'l')('D'|'d')('E'|'e')('R'|'r');

Assumption : ('A'|'a')('S'|'s')('S'|'s')('U'|'u')('M'|'m')('P'|'p')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Categories : ('C'|'c')('A'|'a')('T'|'t')('E'|'e')('G'|'g')('O'|'o')('R'|'r')('I'|'i')('E'|'e')('S'|'s');

Decomposed : ('D'|'d')('E'|'e')('C'|'c')('O'|'o')('M'|'m')('P'|'p')('O'|'o')('S'|'s')('E'|'e')('D'|'d');

Decomposes : ('D'|'d')('E'|'e')('C'|'c')('O'|'o')('M'|'m')('P'|'p')('O'|'o')('S'|'s')('E'|'e')('S'|'s');

Inprogress : ('I'|'i')('N'|'n')('P'|'p')('R'|'r')('O'|'o')('G'|'g')('R'|'r')('E'|'e')('S'|'s')('S'|'s');

Assertion : ('A'|'a')('S'|'s')('S'|'s')('E'|'e')('R'|'r')('T'|'t')('I'|'i')('O'|'o')('N'|'n');

Assurance : ('A'|'a')('S'|'s')('S'|'s')('U'|'u')('R'|'r')('A'|'a')('N'|'n')('C'|'c')('E'|'e');

Completed : ('C'|'c')('O'|'o')('M'|'m')('P'|'p')('L'|'l')('E'|'e')('T'|'t')('E'|'e')('D'|'d');

Conflicts : ('C'|'c')('O'|'o')('N'|'n')('F'|'f')('L'|'l')('I'|'i')('C'|'c')('T'|'t')('S'|'s');

Container : ('C'|'c')('O'|'o')('N'|'n')('T'|'t')('A'|'a')('I'|'i')('N'|'n')('E'|'e')('R'|'r');

Mitigated : ('M'|'m')('I'|'i')('T'|'t')('I'|'i')('G'|'g')('A'|'a')('T'|'t')('E'|'e')('D'|'d');

Rationale : ('R'|'r')('A'|'a')('T'|'t')('I'|'i')('O'|'o')('N'|'n')('A'|'a')('L'|'l')('E'|'e');

Scheduled : ('S'|'s')('C'|'c')('H'|'h')('E'|'e')('D'|'d')('U'|'u')('L'|'l')('E'|'e')('D'|'d');

Activity : ('A'|'a')('C'|'c')('T'|'t')('I'|'i')('V'|'v')('I'|'i')('T'|'t')('Y'|'y');

Argument : ('A'|'a')('R'|'r')('G'|'g')('U'|'u')('M'|'m')('E'|'e')('N'|'n')('T'|'t');

Asserted : ('A'|'a')('S'|'s')('S'|'s')('E'|'e')('R'|'r')('T'|'t')('E'|'e')('D'|'d');

Category : ('C'|'c')('A'|'a')('T'|'t')('E'|'e')('G'|'g')('O'|'o')('R'|'r')('Y'|'y');

Document : ('D'|'d')('O'|'o')('C'|'c')('U'|'u')('M'|'m')('E'|'e')('N'|'n')('T'|'t');

Evolves : ('E'|'e')('V'|'v')('O'|'o')('L'|'l')('V'|'v')('E'|'e')('S'|'s');

Extends : ('E'|'e')('X'|'x')('T'|'t')('E'|'e')('N'|'n')('D'|'d')('S'|'s');

Logfile : ('L'|'l')('O'|'o')('G'|'g')('F'|'f')('I'|'i')('L'|'l')('E'|'e');

Neutral : ('N'|'n')('E'|'e')('U'|'u')('T'|'t')('R'|'r')('A'|'a')('L'|'l');

Refined : ('R'|'r')('E'|'e')('F'|'f')('I'|'i')('N'|'n')('E'|'e')('D'|'d');

Refines : ('R'|'r')('E'|'e')('F'|'f')('I'|'i')('N'|'n')('E'|'e')('S'|'s');

Unknown : ('U'|'u')('N'|'n')('K'|'k')('N'|'n')('O'|'o')('W'|'w')('N'|'n');

Hazard : ('H'|'h')('A'|'a')('Z'|'z')('A'|'a')('R'|'r')('D'|'d');

Issues : ('I'|'i')('S'|'s')('S'|'s')('U'|'u')('E'|'e')('S'|'s');

Method : ('M'|'m')('E'|'e')('T'|'t')('H'|'h')('O'|'o')('D'|'d');

Output : ('O'|'o')('U'|'u')('T'|'t')('P'|'p')('U'|'u')('T'|'t');

Result : ('R'|'r')('E'|'e')('S'|'s')('U'|'u')('L'|'l')('T'|'t');

Status : ('S'|'s')('T'|'t')('A'|'a')('T'|'t')('U'|'u')('S'|'s');

Agree : ('A'|'a')('G'|'g')('R'|'r')('E'|'e')('E'|'e');

Email : ('E'|'e')('M'|'m')('A'|'a')('I'|'i')('L'|'l');

Phone : ('P'|'p')('H'|'h')('O'|'o')('N'|'n')('E'|'e');

State : ('S'|'s')('T'|'t')('A'|'a')('T'|'t')('E'|'e');

Title : ('T'|'t')('I'|'i')('T'|'t')('L'|'l')('E'|'e');

Case : ('C'|'c')('A'|'a')('S'|'s')('E'|'e');

Date : ('D'|'d')('A'|'a')('T'|'t')('E'|'e');

Fail : ('F'|'f')('A'|'a')('I'|'i')('L'|'l');

Goal : ('G'|'g')('O'|'o')('A'|'a')('L'|'l');

Lute : ('L'|'l')('U'|'u')('T'|'t')('E'|'e');

Pass : ('P'|'p')('A'|'a')('S'|'s')('S'|'s');

Role : ('R'|'r')('O'|'o')('L'|'l')('E'|'e');

And : ('A'|'a')('N'|'n')('D'|'d');

End : ('E'|'e')('N'|'n')('D'|'d');

For : ('F'|'f')('O'|'o')('R'|'r');

See : ('S'|'s')('E'|'e')('E'|'e');

Val : ('V'|'v')('A'|'a')('L'|'l');

ColonColon : ':'':';

EqualsSignGreaterThanSign : '=''>';

By : ('B'|'b')('Y'|'y');

Of : ('O'|'o')('F'|'f');

Or : ('O'|'o')('R'|'r');

To : ('T'|'t')('O'|'o');

NumberSign : '#';

LeftParenthesis : '(';

RightParenthesis : ')';

Asterisk : '*';

Comma : ',';

FullStop : '.';

Solidus : '/';

Semicolon : ';';

EqualsSign : '=';



RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ID : ('a'..'z'|'A'..'Z') ('_'? ('a'..'z'|'A'..'Z'|'0'..'9'))*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;



