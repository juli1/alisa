/*
* generated by Xtext
*/
package edu.cmu.sei.alisa.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AlisaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AlisaModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AlisaModel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRSALContainerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOrganizationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRequirementCategoriesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cVerificationCategoriesParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAssuranceCaseParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//AlisaModel:
		//	RSALContainer | Organization | RequirementCategories | VerificationCategories | AssuranceCase;
		public ParserRule getRule() { return rule; }

		//RSALContainer | Organization | RequirementCategories | VerificationCategories | AssuranceCase
		public Alternatives getAlternatives() { return cAlternatives; }

		//RSALContainer
		public RuleCall getRSALContainerParserRuleCall_0() { return cRSALContainerParserRuleCall_0; }

		//Organization
		public RuleCall getOrganizationParserRuleCall_1() { return cOrganizationParserRuleCall_1; }

		//RequirementCategories
		public RuleCall getRequirementCategoriesParserRuleCall_2() { return cRequirementCategoriesParserRuleCall_2; }

		//VerificationCategories
		public RuleCall getVerificationCategoriesParserRuleCall_3() { return cVerificationCategoriesParserRuleCall_3; }

		//AssuranceCase
		public RuleCall getAssuranceCaseParserRuleCall_4() { return cAssuranceCaseParserRuleCall_4; }
	}

	public class ContractualElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContractualElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGoalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRequirementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cVerificationAssumptionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ContractualElement:
		//	Goal | Requirement | VerificationAssumption;
		public ParserRule getRule() { return rule; }

		//Goal | Requirement | VerificationAssumption
		public Alternatives getAlternatives() { return cAlternatives; }

		//Goal
		public RuleCall getGoalParserRuleCall_0() { return cGoalParserRuleCall_0; }

		//Requirement
		public RuleCall getRequirementParserRuleCall_1() { return cRequirementParserRuleCall_1; }

		//VerificationAssumption
		public RuleCall getVerificationAssumptionParserRuleCall_2() { return cVerificationAssumptionParserRuleCall_2; }
	}

	public class RSALContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RSALContainer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cForKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTargetAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cTargetNamedElementCrossReference_2_1_0 = (CrossReference)cTargetAssignment_2_1.eContents().get(0);
		private final RuleCall cTargetNamedElementQNEREFParserRuleCall_2_1_0_1 = (RuleCall)cTargetNamedElementCrossReference_2_1_0.eContents().get(1);
		private final Assignment cContentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Alternatives cContentAlternatives_3_0 = (Alternatives)cContentAssignment_3.eContents().get(0);
		private final RuleCall cContentGoalParserRuleCall_3_0_0 = (RuleCall)cContentAlternatives_3_0.eContents().get(0);
		private final RuleCall cContentRequirementParserRuleCall_3_0_1 = (RuleCall)cContentAlternatives_3_0.eContents().get(1);
		private final RuleCall cContentVerificationActivityParserRuleCall_3_0_2 = (RuleCall)cContentAlternatives_3_0.eContents().get(2);
		private final RuleCall cContentRSALContainerParserRuleCall_3_0_3 = (RuleCall)cContentAlternatives_3_0.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIssuesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIssueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_4_1_0 = (RuleCall)cIssueAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cIssueAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_4_2_1_0 = (RuleCall)cIssueAssignment_4_2_1.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RSALContainer:
		//	"container" name=ID ("for" target=[aadl2::NamedElement|QNEREF])? content+=(Goal | Requirement | VerificationActivity
		//	| RSALContainer) ("issues" issue+=ValueString ("," issue+=ValueString)*)? "end";
		public ParserRule getRule() { return rule; }

		//"container" name=ID ("for" target=[aadl2::NamedElement|QNEREF])? content+=(Goal | Requirement | VerificationActivity |
		//RSALContainer) ("issues" issue+=ValueString ("," issue+=ValueString)*)? "end"
		public Group getGroup() { return cGroup; }

		//"container"
		public Keyword getContainerKeyword_0() { return cContainerKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("for" target=[aadl2::NamedElement|QNEREF])?
		public Group getGroup_2() { return cGroup_2; }

		//"for"
		public Keyword getForKeyword_2_0() { return cForKeyword_2_0; }

		//target=[aadl2::NamedElement|QNEREF]
		public Assignment getTargetAssignment_2_1() { return cTargetAssignment_2_1; }

		//[aadl2::NamedElement|QNEREF]
		public CrossReference getTargetNamedElementCrossReference_2_1_0() { return cTargetNamedElementCrossReference_2_1_0; }

		//QNEREF
		public RuleCall getTargetNamedElementQNEREFParserRuleCall_2_1_0_1() { return cTargetNamedElementQNEREFParserRuleCall_2_1_0_1; }

		//content+=(Goal | Requirement | VerificationActivity | RSALContainer)
		public Assignment getContentAssignment_3() { return cContentAssignment_3; }

		//Goal | Requirement | VerificationActivity | RSALContainer
		public Alternatives getContentAlternatives_3_0() { return cContentAlternatives_3_0; }

		//Goal
		public RuleCall getContentGoalParserRuleCall_3_0_0() { return cContentGoalParserRuleCall_3_0_0; }

		//Requirement
		public RuleCall getContentRequirementParserRuleCall_3_0_1() { return cContentRequirementParserRuleCall_3_0_1; }

		//VerificationActivity
		public RuleCall getContentVerificationActivityParserRuleCall_3_0_2() { return cContentVerificationActivityParserRuleCall_3_0_2; }

		//RSALContainer
		public RuleCall getContentRSALContainerParserRuleCall_3_0_3() { return cContentRSALContainerParserRuleCall_3_0_3; }

		//("issues" issue+=ValueString ("," issue+=ValueString)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"issues"
		public Keyword getIssuesKeyword_4_0() { return cIssuesKeyword_4_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_4_1() { return cIssueAssignment_4_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_4_1_0() { return cIssueValueStringParserRuleCall_4_1_0; }

		//("," issue+=ValueString)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_4_2_1() { return cIssueAssignment_4_2_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_4_2_1_0() { return cIssueValueStringParserRuleCall_4_2_1_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }
	}

	public class OrganizationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Organization");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrganizationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cStakeholderAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStakeholderStakeholderParserRuleCall_2_0 = (RuleCall)cStakeholderAssignment_2.eContents().get(0);
		private final Keyword cEndKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Organization:
		//	"organization" name=ID stakeholder+=Stakeholder+ "end";
		public ParserRule getRule() { return rule; }

		//"organization" name=ID stakeholder+=Stakeholder+ "end"
		public Group getGroup() { return cGroup; }

		//"organization"
		public Keyword getOrganizationKeyword_0() { return cOrganizationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//stakeholder+=Stakeholder+
		public Assignment getStakeholderAssignment_2() { return cStakeholderAssignment_2; }

		//Stakeholder
		public RuleCall getStakeholderStakeholderParserRuleCall_2_0() { return cStakeholderStakeholderParserRuleCall_2_0; }

		//"end"
		public Keyword getEndKeyword_3() { return cEndKeyword_3; }
	}

	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Description");
		private final Assignment cDescriptionAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cDescriptionDescriptionElementParserRuleCall_0 = (RuleCall)cDescriptionAssignment.eContents().get(0);
		
		//Description:
		//	description+=DescriptionElement+;
		public ParserRule getRule() { return rule; }

		//description+=DescriptionElement+
		public Assignment getDescriptionAssignment() { return cDescriptionAssignment; }

		//DescriptionElement
		public RuleCall getDescriptionDescriptionElementParserRuleCall_0() { return cDescriptionDescriptionElementParserRuleCall_0; }
	}

	public class DescriptionElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DescriptionElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cTextAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cTextSTRINGTerminalRuleCall_0_0 = (RuleCall)cTextAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final CrossReference cRefRSALVariableCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefRSALVariableIDTerminalRuleCall_1_0_1 = (RuleCall)cRefRSALVariableCrossReference_1_0.eContents().get(1);
		
		//DescriptionElement:
		//	text=STRING | ref=[RSALVariable];
		public ParserRule getRule() { return rule; }

		//text=STRING | ref=[RSALVariable]
		public Alternatives getAlternatives() { return cAlternatives; }

		//text=STRING
		public Assignment getTextAssignment_0() { return cTextAssignment_0; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_0_0() { return cTextSTRINGTerminalRuleCall_0_0; }

		//ref=[RSALVariable]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[RSALVariable]
		public CrossReference getRefRSALVariableCrossReference_1_0() { return cRefRSALVariableCrossReference_1_0; }

		//ID
		public RuleCall getRefRSALVariableIDTerminalRuleCall_1_0_1() { return cRefRSALVariableIDTerminalRuleCall_1_0_1; }
	}

	public class RSALVariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RSALVariable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueValueStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//RSALVariable:
		//	"val" name=ID "=" value=ValueString;
		public ParserRule getRule() { return rule; }

		//"val" name=ID "=" value=ValueString
		public Group getGroup() { return cGroup; }

		//"val"
		public Keyword getValKeyword_0() { return cValKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=ValueString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//ValueString
		public RuleCall getValueValueStringParserRuleCall_3_0() { return cValueValueStringParserRuleCall_3_0; }
	}

	public class GoalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Goal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGoalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cForKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cTargetAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cTargetNamedElementCrossReference_2_0_1_0 = (CrossReference)cTargetAssignment_2_0_1.eContents().get(0);
		private final RuleCall cTargetNamedElementQNEREFParserRuleCall_2_0_1_0_1 = (RuleCall)cTargetNamedElementCrossReference_2_0_1_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cCategoryKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cCategoryAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cCategoryRequirementCategoryCrossReference_2_1_1_0 = (CrossReference)cCategoryAssignment_2_1_1.eContents().get(0);
		private final RuleCall cCategoryRequirementCategoryCATREFParserRuleCall_2_1_1_0_1 = (RuleCall)cCategoryRequirementCategoryCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cCategoryAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cCategoryRequirementCategoryCrossReference_2_1_2_1_0 = (CrossReference)cCategoryAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cCategoryRequirementCategoryCATREFParserRuleCall_2_1_2_1_0_1 = (RuleCall)cCategoryRequirementCategoryCrossReference_2_1_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cTitleKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTitleAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_2_2_1_0 = (RuleCall)cTitleAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cDescriptionKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_2_3_1_0 = (RuleCall)cDescriptionAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cAssertionKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cAssertAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cAssertValueStringParserRuleCall_2_4_1_0 = (RuleCall)cAssertAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cRationaleKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cRationaleAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cRationaleValueStringParserRuleCall_2_5_1_0 = (RuleCall)cRationaleAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_6 = (Group)cUnorderedGroup_2.eContents().get(6);
		private final Keyword cIssuesKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cIssueAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_2_6_1_0 = (RuleCall)cIssueAssignment_2_6_1.eContents().get(0);
		private final Group cGroup_2_6_2 = (Group)cGroup_2_6.eContents().get(2);
		private final Keyword cCommaKeyword_2_6_2_0 = (Keyword)cGroup_2_6_2.eContents().get(0);
		private final Assignment cIssueAssignment_2_6_2_1 = (Assignment)cGroup_2_6_2.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_2_6_2_1_0 = (RuleCall)cIssueAssignment_2_6_2_1.eContents().get(0);
		private final Group cGroup_2_7 = (Group)cUnorderedGroup_2.eContents().get(7);
		private final Keyword cRefinedKeyword_2_7_0 = (Keyword)cGroup_2_7.eContents().get(0);
		private final Keyword cToKeyword_2_7_1 = (Keyword)cGroup_2_7.eContents().get(1);
		private final Assignment cRefinesReferenceAssignment_2_7_2 = (Assignment)cGroup_2_7.eContents().get(2);
		private final CrossReference cRefinesReferenceGoalCrossReference_2_7_2_0 = (CrossReference)cRefinesReferenceAssignment_2_7_2.eContents().get(0);
		private final RuleCall cRefinesReferenceGoalDOTTEDREFParserRuleCall_2_7_2_0_1 = (RuleCall)cRefinesReferenceGoalCrossReference_2_7_2_0.eContents().get(1);
		private final Group cGroup_2_7_3 = (Group)cGroup_2_7.eContents().get(3);
		private final Keyword cCommaKeyword_2_7_3_0 = (Keyword)cGroup_2_7_3.eContents().get(0);
		private final Assignment cRefinesReferenceAssignment_2_7_3_1 = (Assignment)cGroup_2_7_3.eContents().get(1);
		private final CrossReference cRefinesReferenceGoalCrossReference_2_7_3_1_0 = (CrossReference)cRefinesReferenceAssignment_2_7_3_1.eContents().get(0);
		private final RuleCall cRefinesReferenceGoalDOTTEDREFParserRuleCall_2_7_3_1_0_1 = (RuleCall)cRefinesReferenceGoalCrossReference_2_7_3_1_0.eContents().get(1);
		private final Assignment cSubgoalAssignment_2_8 = (Assignment)cUnorderedGroup_2.eContents().get(8);
		private final RuleCall cSubgoalGoalParserRuleCall_2_8_0 = (RuleCall)cSubgoalAssignment_2_8.eContents().get(0);
		private final Group cGroup_2_9 = (Group)cUnorderedGroup_2.eContents().get(9);
		private final Keyword cDecomposedKeyword_2_9_0 = (Keyword)cGroup_2_9.eContents().get(0);
		private final Keyword cToKeyword_2_9_1 = (Keyword)cGroup_2_9.eContents().get(1);
		private final Assignment cDecomposesReferenceAssignment_2_9_2 = (Assignment)cGroup_2_9.eContents().get(2);
		private final CrossReference cDecomposesReferenceGoalCrossReference_2_9_2_0 = (CrossReference)cDecomposesReferenceAssignment_2_9_2.eContents().get(0);
		private final RuleCall cDecomposesReferenceGoalDOTTEDREFParserRuleCall_2_9_2_0_1 = (RuleCall)cDecomposesReferenceGoalCrossReference_2_9_2_0.eContents().get(1);
		private final Group cGroup_2_9_3 = (Group)cGroup_2_9.eContents().get(3);
		private final Keyword cCommaKeyword_2_9_3_0 = (Keyword)cGroup_2_9_3.eContents().get(0);
		private final Assignment cDecomposesReferenceAssignment_2_9_3_1 = (Assignment)cGroup_2_9_3.eContents().get(1);
		private final CrossReference cDecomposesReferenceGoalCrossReference_2_9_3_1_0 = (CrossReference)cDecomposesReferenceAssignment_2_9_3_1.eContents().get(0);
		private final RuleCall cDecomposesReferenceGoalDOTTEDREFParserRuleCall_2_9_3_1_0_1 = (RuleCall)cDecomposesReferenceGoalCrossReference_2_9_3_1_0.eContents().get(1);
		private final Group cGroup_2_10 = (Group)cUnorderedGroup_2.eContents().get(10);
		private final Keyword cEvolvesKeyword_2_10_0 = (Keyword)cGroup_2_10.eContents().get(0);
		private final Assignment cEvolvesReferenceAssignment_2_10_1 = (Assignment)cGroup_2_10.eContents().get(1);
		private final CrossReference cEvolvesReferenceGoalCrossReference_2_10_1_0 = (CrossReference)cEvolvesReferenceAssignment_2_10_1.eContents().get(0);
		private final RuleCall cEvolvesReferenceGoalDOTTEDREFParserRuleCall_2_10_1_0_1 = (RuleCall)cEvolvesReferenceGoalCrossReference_2_10_1_0.eContents().get(1);
		private final Group cGroup_2_10_2 = (Group)cGroup_2_10.eContents().get(2);
		private final Keyword cCommaKeyword_2_10_2_0 = (Keyword)cGroup_2_10_2.eContents().get(0);
		private final Assignment cEvolvesReferenceAssignment_2_10_2_1 = (Assignment)cGroup_2_10_2.eContents().get(1);
		private final CrossReference cEvolvesReferenceGoalCrossReference_2_10_2_1_0 = (CrossReference)cEvolvesReferenceAssignment_2_10_2_1.eContents().get(0);
		private final RuleCall cEvolvesReferenceGoalDOTTEDREFParserRuleCall_2_10_2_1_0_1 = (RuleCall)cEvolvesReferenceGoalCrossReference_2_10_2_1_0.eContents().get(1);
		private final Group cGroup_2_11 = (Group)cUnorderedGroup_2.eContents().get(11);
		private final Keyword cConflictsKeyword_2_11_0 = (Keyword)cGroup_2_11.eContents().get(0);
		private final Assignment cConflictsReferenceAssignment_2_11_1 = (Assignment)cGroup_2_11.eContents().get(1);
		private final CrossReference cConflictsReferenceGoalCrossReference_2_11_1_0 = (CrossReference)cConflictsReferenceAssignment_2_11_1.eContents().get(0);
		private final RuleCall cConflictsReferenceGoalDOTTEDREFParserRuleCall_2_11_1_0_1 = (RuleCall)cConflictsReferenceGoalCrossReference_2_11_1_0.eContents().get(1);
		private final Group cGroup_2_11_2 = (Group)cGroup_2_11.eContents().get(2);
		private final Keyword cCommaKeyword_2_11_2_0 = (Keyword)cGroup_2_11_2.eContents().get(0);
		private final Assignment cConflictsReferenceAssignment_2_11_2_1 = (Assignment)cGroup_2_11_2.eContents().get(1);
		private final CrossReference cConflictsReferenceGoalCrossReference_2_11_2_1_0 = (CrossReference)cConflictsReferenceAssignment_2_11_2_1.eContents().get(0);
		private final RuleCall cConflictsReferenceGoalDOTTEDREFParserRuleCall_2_11_2_1_0_1 = (RuleCall)cConflictsReferenceGoalCrossReference_2_11_2_1_0.eContents().get(1);
		private final Group cGroup_2_12 = (Group)cUnorderedGroup_2.eContents().get(12);
		private final Keyword cStakeholderKeyword_2_12_0 = (Keyword)cGroup_2_12.eContents().get(0);
		private final Assignment cStakeholderReferenceAssignment_2_12_1 = (Assignment)cGroup_2_12.eContents().get(1);
		private final CrossReference cStakeholderReferenceStakeholderCrossReference_2_12_1_0 = (CrossReference)cStakeholderReferenceAssignment_2_12_1.eContents().get(0);
		private final RuleCall cStakeholderReferenceStakeholderDOTTEDREFParserRuleCall_2_12_1_0_1 = (RuleCall)cStakeholderReferenceStakeholderCrossReference_2_12_1_0.eContents().get(1);
		private final Group cGroup_2_12_2 = (Group)cGroup_2_12.eContents().get(2);
		private final Keyword cCommaKeyword_2_12_2_0 = (Keyword)cGroup_2_12_2.eContents().get(0);
		private final Assignment cStakeholderReferenceAssignment_2_12_2_1 = (Assignment)cGroup_2_12_2.eContents().get(1);
		private final CrossReference cStakeholderReferenceStakeholderCrossReference_2_12_2_1_0 = (CrossReference)cStakeholderReferenceAssignment_2_12_2_1.eContents().get(0);
		private final RuleCall cStakeholderReferenceStakeholderDOTTEDREFParserRuleCall_2_12_2_1_0_1 = (RuleCall)cStakeholderReferenceStakeholderCrossReference_2_12_2_1_0.eContents().get(1);
		private final Group cGroup_2_13 = (Group)cUnorderedGroup_2.eContents().get(13);
		private final Keyword cSeeKeyword_2_13_0 = (Keyword)cGroup_2_13.eContents().get(0);
		private final Keyword cGoalKeyword_2_13_1 = (Keyword)cGroup_2_13.eContents().get(1);
		private final Assignment cStakeholderRequirementReferenceAssignment_2_13_2 = (Assignment)cGroup_2_13.eContents().get(2);
		private final CrossReference cStakeholderRequirementReferenceGoalCrossReference_2_13_2_0 = (CrossReference)cStakeholderRequirementReferenceAssignment_2_13_2.eContents().get(0);
		private final RuleCall cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_13_2_0_1 = (RuleCall)cStakeholderRequirementReferenceGoalCrossReference_2_13_2_0.eContents().get(1);
		private final Group cGroup_2_13_3 = (Group)cGroup_2_13.eContents().get(3);
		private final Keyword cCommaKeyword_2_13_3_0 = (Keyword)cGroup_2_13_3.eContents().get(0);
		private final Assignment cStakeholderRequirementReferenceAssignment_2_13_3_1 = (Assignment)cGroup_2_13_3.eContents().get(1);
		private final CrossReference cStakeholderRequirementReferenceGoalCrossReference_2_13_3_1_0 = (CrossReference)cStakeholderRequirementReferenceAssignment_2_13_3_1.eContents().get(0);
		private final RuleCall cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_13_3_1_0_1 = (RuleCall)cStakeholderRequirementReferenceGoalCrossReference_2_13_3_1_0.eContents().get(1);
		private final Group cGroup_2_14 = (Group)cUnorderedGroup_2.eContents().get(14);
		private final Keyword cSeeKeyword_2_14_0 = (Keyword)cGroup_2_14.eContents().get(0);
		private final Keyword cRequirementKeyword_2_14_1 = (Keyword)cGroup_2_14.eContents().get(1);
		private final Assignment cSystemRequirementReferenceAssignment_2_14_2 = (Assignment)cGroup_2_14.eContents().get(2);
		private final CrossReference cSystemRequirementReferenceContractualElementCrossReference_2_14_2_0 = (CrossReference)cSystemRequirementReferenceAssignment_2_14_2.eContents().get(0);
		private final RuleCall cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_14_2_0_1 = (RuleCall)cSystemRequirementReferenceContractualElementCrossReference_2_14_2_0.eContents().get(1);
		private final Group cGroup_2_14_3 = (Group)cGroup_2_14.eContents().get(3);
		private final Keyword cCommaKeyword_2_14_3_0 = (Keyword)cGroup_2_14_3.eContents().get(0);
		private final Assignment cSystemRequirementReferenceAssignment_2_14_3_1 = (Assignment)cGroup_2_14_3.eContents().get(1);
		private final CrossReference cSystemRequirementReferenceContractualElementCrossReference_2_14_3_1_0 = (CrossReference)cSystemRequirementReferenceAssignment_2_14_3_1.eContents().get(0);
		private final RuleCall cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_14_3_1_0_1 = (RuleCall)cSystemRequirementReferenceContractualElementCrossReference_2_14_3_1_0.eContents().get(1);
		private final Group cGroup_2_15 = (Group)cUnorderedGroup_2.eContents().get(15);
		private final Keyword cSeeKeyword_2_15_0 = (Keyword)cGroup_2_15.eContents().get(0);
		private final Keyword cDocumentKeyword_2_15_1 = (Keyword)cGroup_2_15.eContents().get(1);
		private final Assignment cDocReferenceAssignment_2_15_2 = (Assignment)cGroup_2_15.eContents().get(2);
		private final RuleCall cDocReferenceExternalDocumentParserRuleCall_2_15_2_0 = (RuleCall)cDocReferenceAssignment_2_15_2.eContents().get(0);
		private final Group cGroup_2_15_3 = (Group)cGroup_2_15.eContents().get(3);
		private final Keyword cCommaKeyword_2_15_3_0 = (Keyword)cGroup_2_15_3.eContents().get(0);
		private final Assignment cDocReferenceAssignment_2_15_3_1 = (Assignment)cGroup_2_15_3.eContents().get(1);
		private final RuleCall cDocReferenceExternalDocumentParserRuleCall_2_15_3_1_0 = (RuleCall)cDocReferenceAssignment_2_15_3_1.eContents().get(0);
		private final Group cGroup_2_16 = (Group)cUnorderedGroup_2.eContents().get(16);
		private final Keyword cSeeKeyword_2_16_0 = (Keyword)cGroup_2_16.eContents().get(0);
		private final Assignment cModelReferenceAssignment_2_16_1 = (Assignment)cGroup_2_16.eContents().get(1);
		private final RuleCall cModelReferenceQDOTTEDPAREFParserRuleCall_2_16_1_0 = (RuleCall)cModelReferenceAssignment_2_16_1.eContents().get(0);
		private final Group cGroup_2_16_2 = (Group)cGroup_2_16.eContents().get(2);
		private final Keyword cCommaKeyword_2_16_2_0 = (Keyword)cGroup_2_16_2.eContents().get(0);
		private final Assignment cModelReferenceAssignment_2_16_2_1 = (Assignment)cGroup_2_16_2.eContents().get(1);
		private final RuleCall cModelReferenceQDOTTEDPAREFParserRuleCall_2_16_2_1_0 = (RuleCall)cModelReferenceAssignment_2_16_2_1.eContents().get(0);
		private final Keyword cEndKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Goal:
		//	"goal" name=ID (("for" target=[aadl2::NamedElement|QNEREF])? & ("category" category+=[RequirementCategory|CATREF]
		//	("," category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)? & ("description"
		//	description=Description)? & ("assertion" assert=ValueString)? & ("rationale" rationale=ValueString)? & ("issues"
		//	issue+=ValueString ("," issue+=ValueString)*)? & ("refined" "to" refinesReference+=[Goal|DOTTEDREF] (","
		//	refinesReference+=[Goal|DOTTEDREF])*)? & subgoal+=Goal* & ("decomposed" "to" decomposesReference+=[Goal|DOTTEDREF]
		//	("," decomposesReference+=[Goal|DOTTEDREF])*)? & ("evolves" evolvesReference+=[Goal|DOTTEDREF] (","
		//	evolvesReference+=[Goal|DOTTEDREF])*)? & ("conflicts" conflictsReference+=[Goal|DOTTEDREF] (","
		//	conflictsReference+=[Goal|DOTTEDREF])*)? & ("stakeholder" stakeholderReference+=[Stakeholder|DOTTEDREF] (","
		//	stakeholderReference+=[Stakeholder|DOTTEDREF])*)? & ("see" "goal" stakeholderRequirementReference+=[Goal|DOTTEDREF]
		//	("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see" "requirement"
		//	systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//	systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & ("see" "document" docReference+=ExternalDocument
		//	("," docReference+=ExternalDocument)*)? & ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?)
		//	"end";
		public ParserRule getRule() { return rule; }

		//"goal" name=ID (("for" target=[aadl2::NamedElement|QNEREF])? & ("category" category+=[RequirementCategory|CATREF] (","
		//category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=Description)? &
		//("assertion" assert=ValueString)? & ("rationale" rationale=ValueString)? & ("issues" issue+=ValueString (","
		//issue+=ValueString)*)? & ("refined" "to" refinesReference+=[Goal|DOTTEDREF] (","
		//refinesReference+=[Goal|DOTTEDREF])*)? & subgoal+=Goal* & ("decomposed" "to" decomposesReference+=[Goal|DOTTEDREF]
		//("," decomposesReference+=[Goal|DOTTEDREF])*)? & ("evolves" evolvesReference+=[Goal|DOTTEDREF] (","
		//evolvesReference+=[Goal|DOTTEDREF])*)? & ("conflicts" conflictsReference+=[Goal|DOTTEDREF] (","
		//conflictsReference+=[Goal|DOTTEDREF])*)? & ("stakeholder" stakeholderReference+=[Stakeholder|DOTTEDREF] (","
		//stakeholderReference+=[Stakeholder|DOTTEDREF])*)? & ("see" "goal" stakeholderRequirementReference+=[Goal|DOTTEDREF]
		//("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see" "requirement"
		//systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & ("see" "document" docReference+=ExternalDocument (","
		//docReference+=ExternalDocument)*)? & ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?) "end"
		public Group getGroup() { return cGroup; }

		//"goal"
		public Keyword getGoalKeyword_0() { return cGoalKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("for" target=[aadl2::NamedElement|QNEREF])? & ("category" category+=[RequirementCategory|CATREF] (","
		//category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=Description)? &
		//("assertion" assert=ValueString)? & ("rationale" rationale=ValueString)? & ("issues" issue+=ValueString (","
		//issue+=ValueString)*)? & ("refined" "to" refinesReference+=[Goal|DOTTEDREF] (","
		//refinesReference+=[Goal|DOTTEDREF])*)? & subgoal+=Goal* & ("decomposed" "to" decomposesReference+=[Goal|DOTTEDREF]
		//("," decomposesReference+=[Goal|DOTTEDREF])*)? & ("evolves" evolvesReference+=[Goal|DOTTEDREF] (","
		//evolvesReference+=[Goal|DOTTEDREF])*)? & ("conflicts" conflictsReference+=[Goal|DOTTEDREF] (","
		//conflictsReference+=[Goal|DOTTEDREF])*)? & ("stakeholder" stakeholderReference+=[Stakeholder|DOTTEDREF] (","
		//stakeholderReference+=[Stakeholder|DOTTEDREF])*)? & ("see" "goal" stakeholderRequirementReference+=[Goal|DOTTEDREF]
		//("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see" "requirement"
		//systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & ("see" "document" docReference+=ExternalDocument (","
		//docReference+=ExternalDocument)*)? & ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//("for" target=[aadl2::NamedElement|QNEREF])?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"for"
		public Keyword getForKeyword_2_0_0() { return cForKeyword_2_0_0; }

		//target=[aadl2::NamedElement|QNEREF]
		public Assignment getTargetAssignment_2_0_1() { return cTargetAssignment_2_0_1; }

		//[aadl2::NamedElement|QNEREF]
		public CrossReference getTargetNamedElementCrossReference_2_0_1_0() { return cTargetNamedElementCrossReference_2_0_1_0; }

		//QNEREF
		public RuleCall getTargetNamedElementQNEREFParserRuleCall_2_0_1_0_1() { return cTargetNamedElementQNEREFParserRuleCall_2_0_1_0_1; }

		//("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"category"
		public Keyword getCategoryKeyword_2_1_0() { return cCategoryKeyword_2_1_0; }

		//category+=[RequirementCategory|CATREF]
		public Assignment getCategoryAssignment_2_1_1() { return cCategoryAssignment_2_1_1; }

		//[RequirementCategory|CATREF]
		public CrossReference getCategoryRequirementCategoryCrossReference_2_1_1_0() { return cCategoryRequirementCategoryCrossReference_2_1_1_0; }

		//CATREF
		public RuleCall getCategoryRequirementCategoryCATREFParserRuleCall_2_1_1_0_1() { return cCategoryRequirementCategoryCATREFParserRuleCall_2_1_1_0_1; }

		//("," category+=[RequirementCategory|CATREF])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//category+=[RequirementCategory|CATREF]
		public Assignment getCategoryAssignment_2_1_2_1() { return cCategoryAssignment_2_1_2_1; }

		//[RequirementCategory|CATREF]
		public CrossReference getCategoryRequirementCategoryCrossReference_2_1_2_1_0() { return cCategoryRequirementCategoryCrossReference_2_1_2_1_0; }

		//CATREF
		public RuleCall getCategoryRequirementCategoryCATREFParserRuleCall_2_1_2_1_0_1() { return cCategoryRequirementCategoryCATREFParserRuleCall_2_1_2_1_0_1; }

		//("title" title=ValueString)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"title"
		public Keyword getTitleKeyword_2_2_0() { return cTitleKeyword_2_2_0; }

		//title=ValueString
		public Assignment getTitleAssignment_2_2_1() { return cTitleAssignment_2_2_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_2_2_1_0() { return cTitleValueStringParserRuleCall_2_2_1_0; }

		//("description" description=Description)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"description"
		public Keyword getDescriptionKeyword_2_3_0() { return cDescriptionKeyword_2_3_0; }

		//description=Description
		public Assignment getDescriptionAssignment_2_3_1() { return cDescriptionAssignment_2_3_1; }

		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_2_3_1_0() { return cDescriptionDescriptionParserRuleCall_2_3_1_0; }

		//("assertion" assert=ValueString)?
		public Group getGroup_2_4() { return cGroup_2_4; }

		//"assertion"
		public Keyword getAssertionKeyword_2_4_0() { return cAssertionKeyword_2_4_0; }

		//assert=ValueString
		public Assignment getAssertAssignment_2_4_1() { return cAssertAssignment_2_4_1; }

		//ValueString
		public RuleCall getAssertValueStringParserRuleCall_2_4_1_0() { return cAssertValueStringParserRuleCall_2_4_1_0; }

		//("rationale" rationale=ValueString)?
		public Group getGroup_2_5() { return cGroup_2_5; }

		//"rationale"
		public Keyword getRationaleKeyword_2_5_0() { return cRationaleKeyword_2_5_0; }

		//rationale=ValueString
		public Assignment getRationaleAssignment_2_5_1() { return cRationaleAssignment_2_5_1; }

		//ValueString
		public RuleCall getRationaleValueStringParserRuleCall_2_5_1_0() { return cRationaleValueStringParserRuleCall_2_5_1_0; }

		//("issues" issue+=ValueString ("," issue+=ValueString)*)?
		public Group getGroup_2_6() { return cGroup_2_6; }

		//"issues"
		public Keyword getIssuesKeyword_2_6_0() { return cIssuesKeyword_2_6_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_2_6_1() { return cIssueAssignment_2_6_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_2_6_1_0() { return cIssueValueStringParserRuleCall_2_6_1_0; }

		//("," issue+=ValueString)*
		public Group getGroup_2_6_2() { return cGroup_2_6_2; }

		//","
		public Keyword getCommaKeyword_2_6_2_0() { return cCommaKeyword_2_6_2_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_2_6_2_1() { return cIssueAssignment_2_6_2_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_2_6_2_1_0() { return cIssueValueStringParserRuleCall_2_6_2_1_0; }

		//("refined" "to" refinesReference+=[Goal|DOTTEDREF] ("," refinesReference+=[Goal|DOTTEDREF])*)?
		public Group getGroup_2_7() { return cGroup_2_7; }

		//"refined"
		public Keyword getRefinedKeyword_2_7_0() { return cRefinedKeyword_2_7_0; }

		//"to"
		public Keyword getToKeyword_2_7_1() { return cToKeyword_2_7_1; }

		//refinesReference+=[Goal|DOTTEDREF]
		public Assignment getRefinesReferenceAssignment_2_7_2() { return cRefinesReferenceAssignment_2_7_2; }

		//[Goal|DOTTEDREF]
		public CrossReference getRefinesReferenceGoalCrossReference_2_7_2_0() { return cRefinesReferenceGoalCrossReference_2_7_2_0; }

		//DOTTEDREF
		public RuleCall getRefinesReferenceGoalDOTTEDREFParserRuleCall_2_7_2_0_1() { return cRefinesReferenceGoalDOTTEDREFParserRuleCall_2_7_2_0_1; }

		//("," refinesReference+=[Goal|DOTTEDREF])*
		public Group getGroup_2_7_3() { return cGroup_2_7_3; }

		//","
		public Keyword getCommaKeyword_2_7_3_0() { return cCommaKeyword_2_7_3_0; }

		//refinesReference+=[Goal|DOTTEDREF]
		public Assignment getRefinesReferenceAssignment_2_7_3_1() { return cRefinesReferenceAssignment_2_7_3_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getRefinesReferenceGoalCrossReference_2_7_3_1_0() { return cRefinesReferenceGoalCrossReference_2_7_3_1_0; }

		//DOTTEDREF
		public RuleCall getRefinesReferenceGoalDOTTEDREFParserRuleCall_2_7_3_1_0_1() { return cRefinesReferenceGoalDOTTEDREFParserRuleCall_2_7_3_1_0_1; }

		//subgoal+=Goal*
		public Assignment getSubgoalAssignment_2_8() { return cSubgoalAssignment_2_8; }

		//Goal
		public RuleCall getSubgoalGoalParserRuleCall_2_8_0() { return cSubgoalGoalParserRuleCall_2_8_0; }

		//("decomposed" "to" decomposesReference+=[Goal|DOTTEDREF] ("," decomposesReference+=[Goal|DOTTEDREF])*)?
		public Group getGroup_2_9() { return cGroup_2_9; }

		//"decomposed"
		public Keyword getDecomposedKeyword_2_9_0() { return cDecomposedKeyword_2_9_0; }

		//"to"
		public Keyword getToKeyword_2_9_1() { return cToKeyword_2_9_1; }

		//decomposesReference+=[Goal|DOTTEDREF]
		public Assignment getDecomposesReferenceAssignment_2_9_2() { return cDecomposesReferenceAssignment_2_9_2; }

		//[Goal|DOTTEDREF]
		public CrossReference getDecomposesReferenceGoalCrossReference_2_9_2_0() { return cDecomposesReferenceGoalCrossReference_2_9_2_0; }

		//DOTTEDREF
		public RuleCall getDecomposesReferenceGoalDOTTEDREFParserRuleCall_2_9_2_0_1() { return cDecomposesReferenceGoalDOTTEDREFParserRuleCall_2_9_2_0_1; }

		//("," decomposesReference+=[Goal|DOTTEDREF])*
		public Group getGroup_2_9_3() { return cGroup_2_9_3; }

		//","
		public Keyword getCommaKeyword_2_9_3_0() { return cCommaKeyword_2_9_3_0; }

		//decomposesReference+=[Goal|DOTTEDREF]
		public Assignment getDecomposesReferenceAssignment_2_9_3_1() { return cDecomposesReferenceAssignment_2_9_3_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getDecomposesReferenceGoalCrossReference_2_9_3_1_0() { return cDecomposesReferenceGoalCrossReference_2_9_3_1_0; }

		//DOTTEDREF
		public RuleCall getDecomposesReferenceGoalDOTTEDREFParserRuleCall_2_9_3_1_0_1() { return cDecomposesReferenceGoalDOTTEDREFParserRuleCall_2_9_3_1_0_1; }

		//("evolves" evolvesReference+=[Goal|DOTTEDREF] ("," evolvesReference+=[Goal|DOTTEDREF])*)?
		public Group getGroup_2_10() { return cGroup_2_10; }

		//"evolves"
		public Keyword getEvolvesKeyword_2_10_0() { return cEvolvesKeyword_2_10_0; }

		//evolvesReference+=[Goal|DOTTEDREF]
		public Assignment getEvolvesReferenceAssignment_2_10_1() { return cEvolvesReferenceAssignment_2_10_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getEvolvesReferenceGoalCrossReference_2_10_1_0() { return cEvolvesReferenceGoalCrossReference_2_10_1_0; }

		//DOTTEDREF
		public RuleCall getEvolvesReferenceGoalDOTTEDREFParserRuleCall_2_10_1_0_1() { return cEvolvesReferenceGoalDOTTEDREFParserRuleCall_2_10_1_0_1; }

		//("," evolvesReference+=[Goal|DOTTEDREF])*
		public Group getGroup_2_10_2() { return cGroup_2_10_2; }

		//","
		public Keyword getCommaKeyword_2_10_2_0() { return cCommaKeyword_2_10_2_0; }

		//evolvesReference+=[Goal|DOTTEDREF]
		public Assignment getEvolvesReferenceAssignment_2_10_2_1() { return cEvolvesReferenceAssignment_2_10_2_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getEvolvesReferenceGoalCrossReference_2_10_2_1_0() { return cEvolvesReferenceGoalCrossReference_2_10_2_1_0; }

		//DOTTEDREF
		public RuleCall getEvolvesReferenceGoalDOTTEDREFParserRuleCall_2_10_2_1_0_1() { return cEvolvesReferenceGoalDOTTEDREFParserRuleCall_2_10_2_1_0_1; }

		//("conflicts" conflictsReference+=[Goal|DOTTEDREF] ("," conflictsReference+=[Goal|DOTTEDREF])*)?
		public Group getGroup_2_11() { return cGroup_2_11; }

		//"conflicts"
		public Keyword getConflictsKeyword_2_11_0() { return cConflictsKeyword_2_11_0; }

		//conflictsReference+=[Goal|DOTTEDREF]
		public Assignment getConflictsReferenceAssignment_2_11_1() { return cConflictsReferenceAssignment_2_11_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getConflictsReferenceGoalCrossReference_2_11_1_0() { return cConflictsReferenceGoalCrossReference_2_11_1_0; }

		//DOTTEDREF
		public RuleCall getConflictsReferenceGoalDOTTEDREFParserRuleCall_2_11_1_0_1() { return cConflictsReferenceGoalDOTTEDREFParserRuleCall_2_11_1_0_1; }

		//("," conflictsReference+=[Goal|DOTTEDREF])*
		public Group getGroup_2_11_2() { return cGroup_2_11_2; }

		//","
		public Keyword getCommaKeyword_2_11_2_0() { return cCommaKeyword_2_11_2_0; }

		//conflictsReference+=[Goal|DOTTEDREF]
		public Assignment getConflictsReferenceAssignment_2_11_2_1() { return cConflictsReferenceAssignment_2_11_2_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getConflictsReferenceGoalCrossReference_2_11_2_1_0() { return cConflictsReferenceGoalCrossReference_2_11_2_1_0; }

		//DOTTEDREF
		public RuleCall getConflictsReferenceGoalDOTTEDREFParserRuleCall_2_11_2_1_0_1() { return cConflictsReferenceGoalDOTTEDREFParserRuleCall_2_11_2_1_0_1; }

		//("stakeholder" stakeholderReference+=[Stakeholder|DOTTEDREF] ("," stakeholderReference+=[Stakeholder|DOTTEDREF])*)?
		public Group getGroup_2_12() { return cGroup_2_12; }

		//"stakeholder"
		public Keyword getStakeholderKeyword_2_12_0() { return cStakeholderKeyword_2_12_0; }

		//stakeholderReference+=[Stakeholder|DOTTEDREF]
		public Assignment getStakeholderReferenceAssignment_2_12_1() { return cStakeholderReferenceAssignment_2_12_1; }

		//[Stakeholder|DOTTEDREF]
		public CrossReference getStakeholderReferenceStakeholderCrossReference_2_12_1_0() { return cStakeholderReferenceStakeholderCrossReference_2_12_1_0; }

		//DOTTEDREF
		public RuleCall getStakeholderReferenceStakeholderDOTTEDREFParserRuleCall_2_12_1_0_1() { return cStakeholderReferenceStakeholderDOTTEDREFParserRuleCall_2_12_1_0_1; }

		//("," stakeholderReference+=[Stakeholder|DOTTEDREF])*
		public Group getGroup_2_12_2() { return cGroup_2_12_2; }

		//","
		public Keyword getCommaKeyword_2_12_2_0() { return cCommaKeyword_2_12_2_0; }

		//stakeholderReference+=[Stakeholder|DOTTEDREF]
		public Assignment getStakeholderReferenceAssignment_2_12_2_1() { return cStakeholderReferenceAssignment_2_12_2_1; }

		//[Stakeholder|DOTTEDREF]
		public CrossReference getStakeholderReferenceStakeholderCrossReference_2_12_2_1_0() { return cStakeholderReferenceStakeholderCrossReference_2_12_2_1_0; }

		//DOTTEDREF
		public RuleCall getStakeholderReferenceStakeholderDOTTEDREFParserRuleCall_2_12_2_1_0_1() { return cStakeholderReferenceStakeholderDOTTEDREFParserRuleCall_2_12_2_1_0_1; }

		//("see" "goal" stakeholderRequirementReference+=[Goal|DOTTEDREF] (","
		//stakeholderRequirementReference+=[Goal|DOTTEDREF])*)?
		public Group getGroup_2_13() { return cGroup_2_13; }

		//"see"
		public Keyword getSeeKeyword_2_13_0() { return cSeeKeyword_2_13_0; }

		//"goal"
		public Keyword getGoalKeyword_2_13_1() { return cGoalKeyword_2_13_1; }

		//stakeholderRequirementReference+=[Goal|DOTTEDREF]
		public Assignment getStakeholderRequirementReferenceAssignment_2_13_2() { return cStakeholderRequirementReferenceAssignment_2_13_2; }

		//[Goal|DOTTEDREF]
		public CrossReference getStakeholderRequirementReferenceGoalCrossReference_2_13_2_0() { return cStakeholderRequirementReferenceGoalCrossReference_2_13_2_0; }

		//DOTTEDREF
		public RuleCall getStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_13_2_0_1() { return cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_13_2_0_1; }

		//("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*
		public Group getGroup_2_13_3() { return cGroup_2_13_3; }

		//","
		public Keyword getCommaKeyword_2_13_3_0() { return cCommaKeyword_2_13_3_0; }

		//stakeholderRequirementReference+=[Goal|DOTTEDREF]
		public Assignment getStakeholderRequirementReferenceAssignment_2_13_3_1() { return cStakeholderRequirementReferenceAssignment_2_13_3_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getStakeholderRequirementReferenceGoalCrossReference_2_13_3_1_0() { return cStakeholderRequirementReferenceGoalCrossReference_2_13_3_1_0; }

		//DOTTEDREF
		public RuleCall getStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_13_3_1_0_1() { return cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_13_3_1_0_1; }

		//("see" "requirement" systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//systemRequirementReference+=[ContractualElement|DOTTEDREF])*)?
		public Group getGroup_2_14() { return cGroup_2_14; }

		//"see"
		public Keyword getSeeKeyword_2_14_0() { return cSeeKeyword_2_14_0; }

		//"requirement"
		public Keyword getRequirementKeyword_2_14_1() { return cRequirementKeyword_2_14_1; }

		//systemRequirementReference+=[ContractualElement|DOTTEDREF]
		public Assignment getSystemRequirementReferenceAssignment_2_14_2() { return cSystemRequirementReferenceAssignment_2_14_2; }

		//[ContractualElement|DOTTEDREF]
		public CrossReference getSystemRequirementReferenceContractualElementCrossReference_2_14_2_0() { return cSystemRequirementReferenceContractualElementCrossReference_2_14_2_0; }

		//DOTTEDREF
		public RuleCall getSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_14_2_0_1() { return cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_14_2_0_1; }

		//("," systemRequirementReference+=[ContractualElement|DOTTEDREF])*
		public Group getGroup_2_14_3() { return cGroup_2_14_3; }

		//","
		public Keyword getCommaKeyword_2_14_3_0() { return cCommaKeyword_2_14_3_0; }

		//systemRequirementReference+=[ContractualElement|DOTTEDREF]
		public Assignment getSystemRequirementReferenceAssignment_2_14_3_1() { return cSystemRequirementReferenceAssignment_2_14_3_1; }

		//[ContractualElement|DOTTEDREF]
		public CrossReference getSystemRequirementReferenceContractualElementCrossReference_2_14_3_1_0() { return cSystemRequirementReferenceContractualElementCrossReference_2_14_3_1_0; }

		//DOTTEDREF
		public RuleCall getSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_14_3_1_0_1() { return cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_14_3_1_0_1; }

		//("see" "document" docReference+=ExternalDocument ("," docReference+=ExternalDocument)*)?
		public Group getGroup_2_15() { return cGroup_2_15; }

		//"see"
		public Keyword getSeeKeyword_2_15_0() { return cSeeKeyword_2_15_0; }

		//"document"
		public Keyword getDocumentKeyword_2_15_1() { return cDocumentKeyword_2_15_1; }

		//docReference+=ExternalDocument
		public Assignment getDocReferenceAssignment_2_15_2() { return cDocReferenceAssignment_2_15_2; }

		//ExternalDocument
		public RuleCall getDocReferenceExternalDocumentParserRuleCall_2_15_2_0() { return cDocReferenceExternalDocumentParserRuleCall_2_15_2_0; }

		//("," docReference+=ExternalDocument)*
		public Group getGroup_2_15_3() { return cGroup_2_15_3; }

		//","
		public Keyword getCommaKeyword_2_15_3_0() { return cCommaKeyword_2_15_3_0; }

		//docReference+=ExternalDocument
		public Assignment getDocReferenceAssignment_2_15_3_1() { return cDocReferenceAssignment_2_15_3_1; }

		//ExternalDocument
		public RuleCall getDocReferenceExternalDocumentParserRuleCall_2_15_3_1_0() { return cDocReferenceExternalDocumentParserRuleCall_2_15_3_1_0; }

		//("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?
		public Group getGroup_2_16() { return cGroup_2_16; }

		//"see"
		public Keyword getSeeKeyword_2_16_0() { return cSeeKeyword_2_16_0; }

		//modelReference+=QDOTTEDPAREF
		public Assignment getModelReferenceAssignment_2_16_1() { return cModelReferenceAssignment_2_16_1; }

		//QDOTTEDPAREF
		public RuleCall getModelReferenceQDOTTEDPAREFParserRuleCall_2_16_1_0() { return cModelReferenceQDOTTEDPAREFParserRuleCall_2_16_1_0; }

		//("," modelReference+=QDOTTEDPAREF)*
		public Group getGroup_2_16_2() { return cGroup_2_16_2; }

		//","
		public Keyword getCommaKeyword_2_16_2_0() { return cCommaKeyword_2_16_2_0; }

		//modelReference+=QDOTTEDPAREF
		public Assignment getModelReferenceAssignment_2_16_2_1() { return cModelReferenceAssignment_2_16_2_1; }

		//QDOTTEDPAREF
		public RuleCall getModelReferenceQDOTTEDPAREFParserRuleCall_2_16_2_1_0() { return cModelReferenceQDOTTEDPAREFParserRuleCall_2_16_2_1_0; }

		//"end"
		public Keyword getEndKeyword_3() { return cEndKeyword_3; }
	}

	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Requirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cForKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cTargetAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cTargetNamedElementCrossReference_2_0_1_0 = (CrossReference)cTargetAssignment_2_0_1.eContents().get(0);
		private final RuleCall cTargetNamedElementQNEREFParserRuleCall_2_0_1_0_1 = (RuleCall)cTargetNamedElementCrossReference_2_0_1_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cCategoryKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cCategoryAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cCategoryRequirementCategoryCrossReference_2_1_1_0 = (CrossReference)cCategoryAssignment_2_1_1.eContents().get(0);
		private final RuleCall cCategoryRequirementCategoryCATREFParserRuleCall_2_1_1_0_1 = (RuleCall)cCategoryRequirementCategoryCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cCategoryAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cCategoryRequirementCategoryCrossReference_2_1_2_1_0 = (CrossReference)cCategoryAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cCategoryRequirementCategoryCATREFParserRuleCall_2_1_2_1_0_1 = (RuleCall)cCategoryRequirementCategoryCrossReference_2_1_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cTitleKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTitleAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_2_2_1_0 = (RuleCall)cTitleAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cDescriptionKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_2_3_1_0 = (RuleCall)cDescriptionAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cAssertionKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cAssertAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cAssertValueStringParserRuleCall_2_4_1_0 = (RuleCall)cAssertAssignment_2_4_1.eContents().get(0);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cRationaleKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cRationaleAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cRationaleValueStringParserRuleCall_2_5_1_0 = (RuleCall)cRationaleAssignment_2_5_1.eContents().get(0);
		private final Assignment cReqValueAssignment_2_6 = (Assignment)cUnorderedGroup_2.eContents().get(6);
		private final RuleCall cReqValueRSALVariableParserRuleCall_2_6_0 = (RuleCall)cReqValueAssignment_2_6.eContents().get(0);
		private final Group cGroup_2_7 = (Group)cUnorderedGroup_2.eContents().get(7);
		private final Keyword cIssuesKeyword_2_7_0 = (Keyword)cGroup_2_7.eContents().get(0);
		private final Assignment cIssueAssignment_2_7_1 = (Assignment)cGroup_2_7.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_2_7_1_0 = (RuleCall)cIssueAssignment_2_7_1.eContents().get(0);
		private final Group cGroup_2_7_2 = (Group)cGroup_2_7.eContents().get(2);
		private final Keyword cCommaKeyword_2_7_2_0 = (Keyword)cGroup_2_7_2.eContents().get(0);
		private final Assignment cIssueAssignment_2_7_2_1 = (Assignment)cGroup_2_7_2.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_2_7_2_1_0 = (RuleCall)cIssueAssignment_2_7_2_1.eContents().get(0);
		private final Group cGroup_2_8 = (Group)cUnorderedGroup_2.eContents().get(8);
		private final Keyword cSeeKeyword_2_8_0 = (Keyword)cGroup_2_8.eContents().get(0);
		private final Keyword cGoalKeyword_2_8_1 = (Keyword)cGroup_2_8.eContents().get(1);
		private final Assignment cGoalReferenceAssignment_2_8_2 = (Assignment)cGroup_2_8.eContents().get(2);
		private final CrossReference cGoalReferenceGoalCrossReference_2_8_2_0 = (CrossReference)cGoalReferenceAssignment_2_8_2.eContents().get(0);
		private final RuleCall cGoalReferenceGoalIDTerminalRuleCall_2_8_2_0_1 = (RuleCall)cGoalReferenceGoalCrossReference_2_8_2_0.eContents().get(1);
		private final Group cGroup_2_8_3 = (Group)cGroup_2_8.eContents().get(3);
		private final Keyword cCommaKeyword_2_8_3_0 = (Keyword)cGroup_2_8_3.eContents().get(0);
		private final Assignment cGoalReferenceAssignment_2_8_3_1 = (Assignment)cGroup_2_8_3.eContents().get(1);
		private final CrossReference cGoalReferenceGoalCrossReference_2_8_3_1_0 = (CrossReference)cGoalReferenceAssignment_2_8_3_1.eContents().get(0);
		private final RuleCall cGoalReferenceGoalIDTerminalRuleCall_2_8_3_1_0_1 = (RuleCall)cGoalReferenceGoalCrossReference_2_8_3_1_0.eContents().get(1);
		private final Group cGroup_2_9 = (Group)cUnorderedGroup_2.eContents().get(9);
		private final Keyword cSeeKeyword_2_9_0 = (Keyword)cGroup_2_9.eContents().get(0);
		private final Keyword cHazardKeyword_2_9_1 = (Keyword)cGroup_2_9.eContents().get(1);
		private final Assignment cHazardReferenceAssignment_2_9_2 = (Assignment)cGroup_2_9.eContents().get(2);
		private final RuleCall cHazardReferenceQNEREFParserRuleCall_2_9_2_0 = (RuleCall)cHazardReferenceAssignment_2_9_2.eContents().get(0);
		private final Group cGroup_2_9_3 = (Group)cGroup_2_9.eContents().get(3);
		private final Keyword cCommaKeyword_2_9_3_0 = (Keyword)cGroup_2_9_3.eContents().get(0);
		private final Assignment cHazardReferenceAssignment_2_9_3_1 = (Assignment)cGroup_2_9_3.eContents().get(1);
		private final RuleCall cHazardReferenceQNEREFParserRuleCall_2_9_3_1_0 = (RuleCall)cHazardReferenceAssignment_2_9_3_1.eContents().get(0);
		private final Group cGroup_2_10 = (Group)cUnorderedGroup_2.eContents().get(10);
		private final Keyword cRefinesKeyword_2_10_0 = (Keyword)cGroup_2_10.eContents().get(0);
		private final Assignment cRefinesReferenceAssignment_2_10_1 = (Assignment)cGroup_2_10.eContents().get(1);
		private final CrossReference cRefinesReferenceRequirementCrossReference_2_10_1_0 = (CrossReference)cRefinesReferenceAssignment_2_10_1.eContents().get(0);
		private final RuleCall cRefinesReferenceRequirementDOTTEDREFParserRuleCall_2_10_1_0_1 = (RuleCall)cRefinesReferenceRequirementCrossReference_2_10_1_0.eContents().get(1);
		private final Group cGroup_2_10_2 = (Group)cGroup_2_10.eContents().get(2);
		private final Keyword cCommaKeyword_2_10_2_0 = (Keyword)cGroup_2_10_2.eContents().get(0);
		private final Assignment cRefinesReferenceAssignment_2_10_2_1 = (Assignment)cGroup_2_10_2.eContents().get(1);
		private final CrossReference cRefinesReferenceRequirementCrossReference_2_10_2_1_0 = (CrossReference)cRefinesReferenceAssignment_2_10_2_1.eContents().get(0);
		private final RuleCall cRefinesReferenceRequirementDOTTEDREFParserRuleCall_2_10_2_1_0_1 = (RuleCall)cRefinesReferenceRequirementCrossReference_2_10_2_1_0.eContents().get(1);
		private final Assignment cSubrequirementAssignment_2_11 = (Assignment)cUnorderedGroup_2.eContents().get(11);
		private final RuleCall cSubrequirementRequirementParserRuleCall_2_11_0 = (RuleCall)cSubrequirementAssignment_2_11.eContents().get(0);
		private final Group cGroup_2_12 = (Group)cUnorderedGroup_2.eContents().get(12);
		private final Keyword cDecomposesKeyword_2_12_0 = (Keyword)cGroup_2_12.eContents().get(0);
		private final Assignment cDecomposesReferenceAssignment_2_12_1 = (Assignment)cGroup_2_12.eContents().get(1);
		private final CrossReference cDecomposesReferenceRequirementCrossReference_2_12_1_0 = (CrossReference)cDecomposesReferenceAssignment_2_12_1.eContents().get(0);
		private final RuleCall cDecomposesReferenceRequirementDOTTEDREFParserRuleCall_2_12_1_0_1 = (RuleCall)cDecomposesReferenceRequirementCrossReference_2_12_1_0.eContents().get(1);
		private final Group cGroup_2_12_2 = (Group)cGroup_2_12.eContents().get(2);
		private final Keyword cCommaKeyword_2_12_2_0 = (Keyword)cGroup_2_12_2.eContents().get(0);
		private final Assignment cDecomposesReferenceAssignment_2_12_2_1 = (Assignment)cGroup_2_12_2.eContents().get(1);
		private final CrossReference cDecomposesReferenceRequirementCrossReference_2_12_2_1_0 = (CrossReference)cDecomposesReferenceAssignment_2_12_2_1.eContents().get(0);
		private final RuleCall cDecomposesReferenceRequirementDOTTEDREFParserRuleCall_2_12_2_1_0_1 = (RuleCall)cDecomposesReferenceRequirementCrossReference_2_12_2_1_0.eContents().get(1);
		private final Group cGroup_2_13 = (Group)cUnorderedGroup_2.eContents().get(13);
		private final Keyword cEvolvesKeyword_2_13_0 = (Keyword)cGroup_2_13.eContents().get(0);
		private final Assignment cEvolvesReferenceAssignment_2_13_1 = (Assignment)cGroup_2_13.eContents().get(1);
		private final CrossReference cEvolvesReferenceRequirementCrossReference_2_13_1_0 = (CrossReference)cEvolvesReferenceAssignment_2_13_1.eContents().get(0);
		private final RuleCall cEvolvesReferenceRequirementDOTTEDREFParserRuleCall_2_13_1_0_1 = (RuleCall)cEvolvesReferenceRequirementCrossReference_2_13_1_0.eContents().get(1);
		private final Group cGroup_2_13_2 = (Group)cGroup_2_13.eContents().get(2);
		private final Keyword cCommaKeyword_2_13_2_0 = (Keyword)cGroup_2_13_2.eContents().get(0);
		private final Assignment cEvolvesReferenceAssignment_2_13_2_1 = (Assignment)cGroup_2_13_2.eContents().get(1);
		private final CrossReference cEvolvesReferenceRequirementCrossReference_2_13_2_1_0 = (CrossReference)cEvolvesReferenceAssignment_2_13_2_1.eContents().get(0);
		private final RuleCall cEvolvesReferenceRequirementDOTTEDREFParserRuleCall_2_13_2_1_0_1 = (RuleCall)cEvolvesReferenceRequirementCrossReference_2_13_2_1_0.eContents().get(1);
		private final Group cGroup_2_14 = (Group)cUnorderedGroup_2.eContents().get(14);
		private final Keyword cSeeKeyword_2_14_0 = (Keyword)cGroup_2_14.eContents().get(0);
		private final Keyword cGoalKeyword_2_14_1 = (Keyword)cGroup_2_14.eContents().get(1);
		private final Assignment cStakeholderRequirementReferenceAssignment_2_14_2 = (Assignment)cGroup_2_14.eContents().get(2);
		private final CrossReference cStakeholderRequirementReferenceGoalCrossReference_2_14_2_0 = (CrossReference)cStakeholderRequirementReferenceAssignment_2_14_2.eContents().get(0);
		private final RuleCall cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_14_2_0_1 = (RuleCall)cStakeholderRequirementReferenceGoalCrossReference_2_14_2_0.eContents().get(1);
		private final Group cGroup_2_14_3 = (Group)cGroup_2_14.eContents().get(3);
		private final Keyword cCommaKeyword_2_14_3_0 = (Keyword)cGroup_2_14_3.eContents().get(0);
		private final Assignment cStakeholderRequirementReferenceAssignment_2_14_3_1 = (Assignment)cGroup_2_14_3.eContents().get(1);
		private final CrossReference cStakeholderRequirementReferenceGoalCrossReference_2_14_3_1_0 = (CrossReference)cStakeholderRequirementReferenceAssignment_2_14_3_1.eContents().get(0);
		private final RuleCall cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_14_3_1_0_1 = (RuleCall)cStakeholderRequirementReferenceGoalCrossReference_2_14_3_1_0.eContents().get(1);
		private final Group cGroup_2_15 = (Group)cUnorderedGroup_2.eContents().get(15);
		private final Keyword cSeeKeyword_2_15_0 = (Keyword)cGroup_2_15.eContents().get(0);
		private final Keyword cRequirementKeyword_2_15_1 = (Keyword)cGroup_2_15.eContents().get(1);
		private final Assignment cSystemRequirementReferenceAssignment_2_15_2 = (Assignment)cGroup_2_15.eContents().get(2);
		private final CrossReference cSystemRequirementReferenceContractualElementCrossReference_2_15_2_0 = (CrossReference)cSystemRequirementReferenceAssignment_2_15_2.eContents().get(0);
		private final RuleCall cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_15_2_0_1 = (RuleCall)cSystemRequirementReferenceContractualElementCrossReference_2_15_2_0.eContents().get(1);
		private final Group cGroup_2_15_3 = (Group)cGroup_2_15.eContents().get(3);
		private final Keyword cCommaKeyword_2_15_3_0 = (Keyword)cGroup_2_15_3.eContents().get(0);
		private final Assignment cSystemRequirementReferenceAssignment_2_15_3_1 = (Assignment)cGroup_2_15_3.eContents().get(1);
		private final CrossReference cSystemRequirementReferenceContractualElementCrossReference_2_15_3_1_0 = (CrossReference)cSystemRequirementReferenceAssignment_2_15_3_1.eContents().get(0);
		private final RuleCall cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_15_3_1_0_1 = (RuleCall)cSystemRequirementReferenceContractualElementCrossReference_2_15_3_1_0.eContents().get(1);
		private final Assignment cVerifiedByAssignment_2_16 = (Assignment)cUnorderedGroup_2.eContents().get(16);
		private final RuleCall cVerifiedByVerificationActivityParserRuleCall_2_16_0 = (RuleCall)cVerifiedByAssignment_2_16.eContents().get(0);
		private final Assignment cArgumentAssignment_2_17 = (Assignment)cUnorderedGroup_2.eContents().get(17);
		private final RuleCall cArgumentAssuranceArgumentParserRuleCall_2_17_0 = (RuleCall)cArgumentAssignment_2_17.eContents().get(0);
		private final Group cGroup_2_18 = (Group)cUnorderedGroup_2.eContents().get(18);
		private final Keyword cSeeKeyword_2_18_0 = (Keyword)cGroup_2_18.eContents().get(0);
		private final Keyword cDocumentKeyword_2_18_1 = (Keyword)cGroup_2_18.eContents().get(1);
		private final Assignment cDocReferenceAssignment_2_18_2 = (Assignment)cGroup_2_18.eContents().get(2);
		private final RuleCall cDocReferenceExternalDocumentParserRuleCall_2_18_2_0 = (RuleCall)cDocReferenceAssignment_2_18_2.eContents().get(0);
		private final Group cGroup_2_18_3 = (Group)cGroup_2_18.eContents().get(3);
		private final Keyword cCommaKeyword_2_18_3_0 = (Keyword)cGroup_2_18_3.eContents().get(0);
		private final Assignment cDocReferenceAssignment_2_18_3_1 = (Assignment)cGroup_2_18_3.eContents().get(1);
		private final RuleCall cDocReferenceExternalDocumentParserRuleCall_2_18_3_1_0 = (RuleCall)cDocReferenceAssignment_2_18_3_1.eContents().get(0);
		private final Group cGroup_2_19 = (Group)cUnorderedGroup_2.eContents().get(19);
		private final Keyword cSeeKeyword_2_19_0 = (Keyword)cGroup_2_19.eContents().get(0);
		private final Assignment cModelReferenceAssignment_2_19_1 = (Assignment)cGroup_2_19.eContents().get(1);
		private final RuleCall cModelReferenceQDOTTEDPAREFParserRuleCall_2_19_1_0 = (RuleCall)cModelReferenceAssignment_2_19_1.eContents().get(0);
		private final Group cGroup_2_19_2 = (Group)cGroup_2_19.eContents().get(2);
		private final Keyword cCommaKeyword_2_19_2_0 = (Keyword)cGroup_2_19_2.eContents().get(0);
		private final Assignment cModelReferenceAssignment_2_19_2_1 = (Assignment)cGroup_2_19_2.eContents().get(1);
		private final RuleCall cModelReferenceQDOTTEDPAREFParserRuleCall_2_19_2_1_0 = (RuleCall)cModelReferenceAssignment_2_19_2_1.eContents().get(0);
		private final Keyword cEndKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Requirement:
		//	"requirement" name=ID (("for" target=[aadl2::NamedElement|QNEREF])? // predicate expression 
		//	// hazardReference+=[aadl2::NamedElement|QNEREF]
		//	& ("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title"
		//	title=ValueString)? & ("description" description=Description)? & ("assertion" assert=ValueString)? & ("rationale"
		//	rationale=ValueString)? & reqValue+=RSALVariable* & ("issues" issue+=ValueString ("," issue+=ValueString)*)? & ("see"
		//	"goal" goalReference+=[Goal] ("," goalReference+=[Goal])*)? & ("see" "hazard" hazardReference+=QNEREF (","
		//	hazardReference+=QNEREF)*)? & ("refines" refinesReference+=[Requirement|DOTTEDREF] (","
		//	refinesReference+=[Requirement|DOTTEDREF])*)? & subrequirement+=Requirement* & ("decomposes"
		//	decomposesReference+=[Requirement|DOTTEDREF] ("," decomposesReference+=[Requirement|DOTTEDREF])*)? & ("evolves"
		//	evolvesReference+=[Requirement|DOTTEDREF] ("," evolvesReference+=[Requirement|DOTTEDREF])*)? & ("see" "goal"
		//	stakeholderRequirementReference+=[Goal|DOTTEDREF] ("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see"
		//	"requirement" systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//	systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & verifiedBy+=VerificationActivity* &
		//	argument=AssuranceArgument? & ("see" "document" docReference+=ExternalDocument (","
		//	docReference+=ExternalDocument)*)? & ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?)
		//	"end";
		public ParserRule getRule() { return rule; }

		//"requirement" name=ID (("for" target=[aadl2::NamedElement|QNEREF])? // predicate expression 
		//// hazardReference+=[aadl2::NamedElement|QNEREF]
		//& ("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title"
		//title=ValueString)? & ("description" description=Description)? & ("assertion" assert=ValueString)? & ("rationale"
		//rationale=ValueString)? & reqValue+=RSALVariable* & ("issues" issue+=ValueString ("," issue+=ValueString)*)? & ("see"
		//"goal" goalReference+=[Goal] ("," goalReference+=[Goal])*)? & ("see" "hazard" hazardReference+=QNEREF (","
		//hazardReference+=QNEREF)*)? & ("refines" refinesReference+=[Requirement|DOTTEDREF] (","
		//refinesReference+=[Requirement|DOTTEDREF])*)? & subrequirement+=Requirement* & ("decomposes"
		//decomposesReference+=[Requirement|DOTTEDREF] ("," decomposesReference+=[Requirement|DOTTEDREF])*)? & ("evolves"
		//evolvesReference+=[Requirement|DOTTEDREF] ("," evolvesReference+=[Requirement|DOTTEDREF])*)? & ("see" "goal"
		//stakeholderRequirementReference+=[Goal|DOTTEDREF] ("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see"
		//"requirement" systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & verifiedBy+=VerificationActivity* &
		//argument=AssuranceArgument? & ("see" "document" docReference+=ExternalDocument ("," docReference+=ExternalDocument)*)?
		//& ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?) "end"
		public Group getGroup() { return cGroup; }

		//"requirement"
		public Keyword getRequirementKeyword_0() { return cRequirementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("for" target=[aadl2::NamedElement|QNEREF])? // predicate expression 
		//// hazardReference+=[aadl2::NamedElement|QNEREF]
		//& ("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title"
		//title=ValueString)? & ("description" description=Description)? & ("assertion" assert=ValueString)? & ("rationale"
		//rationale=ValueString)? & reqValue+=RSALVariable* & ("issues" issue+=ValueString ("," issue+=ValueString)*)? & ("see"
		//"goal" goalReference+=[Goal] ("," goalReference+=[Goal])*)? & ("see" "hazard" hazardReference+=QNEREF (","
		//hazardReference+=QNEREF)*)? & ("refines" refinesReference+=[Requirement|DOTTEDREF] (","
		//refinesReference+=[Requirement|DOTTEDREF])*)? & subrequirement+=Requirement* & ("decomposes"
		//decomposesReference+=[Requirement|DOTTEDREF] ("," decomposesReference+=[Requirement|DOTTEDREF])*)? & ("evolves"
		//evolvesReference+=[Requirement|DOTTEDREF] ("," evolvesReference+=[Requirement|DOTTEDREF])*)? & ("see" "goal"
		//stakeholderRequirementReference+=[Goal|DOTTEDREF] ("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see"
		//"requirement" systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & verifiedBy+=VerificationActivity* &
		//argument=AssuranceArgument? & ("see" "document" docReference+=ExternalDocument ("," docReference+=ExternalDocument)*)?
		//& ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//("for" target=[aadl2::NamedElement|QNEREF])?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"for"
		public Keyword getForKeyword_2_0_0() { return cForKeyword_2_0_0; }

		//target=[aadl2::NamedElement|QNEREF]
		public Assignment getTargetAssignment_2_0_1() { return cTargetAssignment_2_0_1; }

		//[aadl2::NamedElement|QNEREF]
		public CrossReference getTargetNamedElementCrossReference_2_0_1_0() { return cTargetNamedElementCrossReference_2_0_1_0; }

		//QNEREF
		public RuleCall getTargetNamedElementQNEREFParserRuleCall_2_0_1_0_1() { return cTargetNamedElementQNEREFParserRuleCall_2_0_1_0_1; }

		//("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"category"
		public Keyword getCategoryKeyword_2_1_0() { return cCategoryKeyword_2_1_0; }

		//category+=[RequirementCategory|CATREF]
		public Assignment getCategoryAssignment_2_1_1() { return cCategoryAssignment_2_1_1; }

		//[RequirementCategory|CATREF]
		public CrossReference getCategoryRequirementCategoryCrossReference_2_1_1_0() { return cCategoryRequirementCategoryCrossReference_2_1_1_0; }

		//CATREF
		public RuleCall getCategoryRequirementCategoryCATREFParserRuleCall_2_1_1_0_1() { return cCategoryRequirementCategoryCATREFParserRuleCall_2_1_1_0_1; }

		//("," category+=[RequirementCategory|CATREF])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//category+=[RequirementCategory|CATREF]
		public Assignment getCategoryAssignment_2_1_2_1() { return cCategoryAssignment_2_1_2_1; }

		//[RequirementCategory|CATREF]
		public CrossReference getCategoryRequirementCategoryCrossReference_2_1_2_1_0() { return cCategoryRequirementCategoryCrossReference_2_1_2_1_0; }

		//CATREF
		public RuleCall getCategoryRequirementCategoryCATREFParserRuleCall_2_1_2_1_0_1() { return cCategoryRequirementCategoryCATREFParserRuleCall_2_1_2_1_0_1; }

		//("title" title=ValueString)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"title"
		public Keyword getTitleKeyword_2_2_0() { return cTitleKeyword_2_2_0; }

		//title=ValueString
		public Assignment getTitleAssignment_2_2_1() { return cTitleAssignment_2_2_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_2_2_1_0() { return cTitleValueStringParserRuleCall_2_2_1_0; }

		//("description" description=Description)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"description"
		public Keyword getDescriptionKeyword_2_3_0() { return cDescriptionKeyword_2_3_0; }

		//description=Description
		public Assignment getDescriptionAssignment_2_3_1() { return cDescriptionAssignment_2_3_1; }

		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_2_3_1_0() { return cDescriptionDescriptionParserRuleCall_2_3_1_0; }

		//("assertion" assert=ValueString)?
		public Group getGroup_2_4() { return cGroup_2_4; }

		//"assertion"
		public Keyword getAssertionKeyword_2_4_0() { return cAssertionKeyword_2_4_0; }

		//assert=ValueString
		public Assignment getAssertAssignment_2_4_1() { return cAssertAssignment_2_4_1; }

		//ValueString
		public RuleCall getAssertValueStringParserRuleCall_2_4_1_0() { return cAssertValueStringParserRuleCall_2_4_1_0; }

		//("rationale" rationale=ValueString)?
		public Group getGroup_2_5() { return cGroup_2_5; }

		//"rationale"
		public Keyword getRationaleKeyword_2_5_0() { return cRationaleKeyword_2_5_0; }

		//rationale=ValueString
		public Assignment getRationaleAssignment_2_5_1() { return cRationaleAssignment_2_5_1; }

		//ValueString
		public RuleCall getRationaleValueStringParserRuleCall_2_5_1_0() { return cRationaleValueStringParserRuleCall_2_5_1_0; }

		//reqValue+=RSALVariable*
		public Assignment getReqValueAssignment_2_6() { return cReqValueAssignment_2_6; }

		//RSALVariable
		public RuleCall getReqValueRSALVariableParserRuleCall_2_6_0() { return cReqValueRSALVariableParserRuleCall_2_6_0; }

		//("issues" issue+=ValueString ("," issue+=ValueString)*)?
		public Group getGroup_2_7() { return cGroup_2_7; }

		//"issues"
		public Keyword getIssuesKeyword_2_7_0() { return cIssuesKeyword_2_7_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_2_7_1() { return cIssueAssignment_2_7_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_2_7_1_0() { return cIssueValueStringParserRuleCall_2_7_1_0; }

		//("," issue+=ValueString)*
		public Group getGroup_2_7_2() { return cGroup_2_7_2; }

		//","
		public Keyword getCommaKeyword_2_7_2_0() { return cCommaKeyword_2_7_2_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_2_7_2_1() { return cIssueAssignment_2_7_2_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_2_7_2_1_0() { return cIssueValueStringParserRuleCall_2_7_2_1_0; }

		//("see" "goal" goalReference+=[Goal] ("," goalReference+=[Goal])*)?
		public Group getGroup_2_8() { return cGroup_2_8; }

		//"see"
		public Keyword getSeeKeyword_2_8_0() { return cSeeKeyword_2_8_0; }

		//"goal"
		public Keyword getGoalKeyword_2_8_1() { return cGoalKeyword_2_8_1; }

		//goalReference+=[Goal]
		public Assignment getGoalReferenceAssignment_2_8_2() { return cGoalReferenceAssignment_2_8_2; }

		//[Goal]
		public CrossReference getGoalReferenceGoalCrossReference_2_8_2_0() { return cGoalReferenceGoalCrossReference_2_8_2_0; }

		//ID
		public RuleCall getGoalReferenceGoalIDTerminalRuleCall_2_8_2_0_1() { return cGoalReferenceGoalIDTerminalRuleCall_2_8_2_0_1; }

		//("," goalReference+=[Goal])*
		public Group getGroup_2_8_3() { return cGroup_2_8_3; }

		//","
		public Keyword getCommaKeyword_2_8_3_0() { return cCommaKeyword_2_8_3_0; }

		//goalReference+=[Goal]
		public Assignment getGoalReferenceAssignment_2_8_3_1() { return cGoalReferenceAssignment_2_8_3_1; }

		//[Goal]
		public CrossReference getGoalReferenceGoalCrossReference_2_8_3_1_0() { return cGoalReferenceGoalCrossReference_2_8_3_1_0; }

		//ID
		public RuleCall getGoalReferenceGoalIDTerminalRuleCall_2_8_3_1_0_1() { return cGoalReferenceGoalIDTerminalRuleCall_2_8_3_1_0_1; }

		//("see" "hazard" hazardReference+=QNEREF ("," hazardReference+=QNEREF)*)?
		public Group getGroup_2_9() { return cGroup_2_9; }

		//"see"
		public Keyword getSeeKeyword_2_9_0() { return cSeeKeyword_2_9_0; }

		//"hazard"
		public Keyword getHazardKeyword_2_9_1() { return cHazardKeyword_2_9_1; }

		//hazardReference+=QNEREF
		public Assignment getHazardReferenceAssignment_2_9_2() { return cHazardReferenceAssignment_2_9_2; }

		//QNEREF
		public RuleCall getHazardReferenceQNEREFParserRuleCall_2_9_2_0() { return cHazardReferenceQNEREFParserRuleCall_2_9_2_0; }

		//("," hazardReference+=QNEREF)*
		public Group getGroup_2_9_3() { return cGroup_2_9_3; }

		//","
		public Keyword getCommaKeyword_2_9_3_0() { return cCommaKeyword_2_9_3_0; }

		//hazardReference+=QNEREF
		public Assignment getHazardReferenceAssignment_2_9_3_1() { return cHazardReferenceAssignment_2_9_3_1; }

		//QNEREF
		public RuleCall getHazardReferenceQNEREFParserRuleCall_2_9_3_1_0() { return cHazardReferenceQNEREFParserRuleCall_2_9_3_1_0; }

		//("refines" refinesReference+=[Requirement|DOTTEDREF] ("," refinesReference+=[Requirement|DOTTEDREF])*)?
		public Group getGroup_2_10() { return cGroup_2_10; }

		//"refines"
		public Keyword getRefinesKeyword_2_10_0() { return cRefinesKeyword_2_10_0; }

		//refinesReference+=[Requirement|DOTTEDREF]
		public Assignment getRefinesReferenceAssignment_2_10_1() { return cRefinesReferenceAssignment_2_10_1; }

		//[Requirement|DOTTEDREF]
		public CrossReference getRefinesReferenceRequirementCrossReference_2_10_1_0() { return cRefinesReferenceRequirementCrossReference_2_10_1_0; }

		//DOTTEDREF
		public RuleCall getRefinesReferenceRequirementDOTTEDREFParserRuleCall_2_10_1_0_1() { return cRefinesReferenceRequirementDOTTEDREFParserRuleCall_2_10_1_0_1; }

		//("," refinesReference+=[Requirement|DOTTEDREF])*
		public Group getGroup_2_10_2() { return cGroup_2_10_2; }

		//","
		public Keyword getCommaKeyword_2_10_2_0() { return cCommaKeyword_2_10_2_0; }

		//refinesReference+=[Requirement|DOTTEDREF]
		public Assignment getRefinesReferenceAssignment_2_10_2_1() { return cRefinesReferenceAssignment_2_10_2_1; }

		//[Requirement|DOTTEDREF]
		public CrossReference getRefinesReferenceRequirementCrossReference_2_10_2_1_0() { return cRefinesReferenceRequirementCrossReference_2_10_2_1_0; }

		//DOTTEDREF
		public RuleCall getRefinesReferenceRequirementDOTTEDREFParserRuleCall_2_10_2_1_0_1() { return cRefinesReferenceRequirementDOTTEDREFParserRuleCall_2_10_2_1_0_1; }

		//subrequirement+=Requirement*
		public Assignment getSubrequirementAssignment_2_11() { return cSubrequirementAssignment_2_11; }

		//Requirement
		public RuleCall getSubrequirementRequirementParserRuleCall_2_11_0() { return cSubrequirementRequirementParserRuleCall_2_11_0; }

		//("decomposes" decomposesReference+=[Requirement|DOTTEDREF] ("," decomposesReference+=[Requirement|DOTTEDREF])*)?
		public Group getGroup_2_12() { return cGroup_2_12; }

		//"decomposes"
		public Keyword getDecomposesKeyword_2_12_0() { return cDecomposesKeyword_2_12_0; }

		//decomposesReference+=[Requirement|DOTTEDREF]
		public Assignment getDecomposesReferenceAssignment_2_12_1() { return cDecomposesReferenceAssignment_2_12_1; }

		//[Requirement|DOTTEDREF]
		public CrossReference getDecomposesReferenceRequirementCrossReference_2_12_1_0() { return cDecomposesReferenceRequirementCrossReference_2_12_1_0; }

		//DOTTEDREF
		public RuleCall getDecomposesReferenceRequirementDOTTEDREFParserRuleCall_2_12_1_0_1() { return cDecomposesReferenceRequirementDOTTEDREFParserRuleCall_2_12_1_0_1; }

		//("," decomposesReference+=[Requirement|DOTTEDREF])*
		public Group getGroup_2_12_2() { return cGroup_2_12_2; }

		//","
		public Keyword getCommaKeyword_2_12_2_0() { return cCommaKeyword_2_12_2_0; }

		//decomposesReference+=[Requirement|DOTTEDREF]
		public Assignment getDecomposesReferenceAssignment_2_12_2_1() { return cDecomposesReferenceAssignment_2_12_2_1; }

		//[Requirement|DOTTEDREF]
		public CrossReference getDecomposesReferenceRequirementCrossReference_2_12_2_1_0() { return cDecomposesReferenceRequirementCrossReference_2_12_2_1_0; }

		//DOTTEDREF
		public RuleCall getDecomposesReferenceRequirementDOTTEDREFParserRuleCall_2_12_2_1_0_1() { return cDecomposesReferenceRequirementDOTTEDREFParserRuleCall_2_12_2_1_0_1; }

		//("evolves" evolvesReference+=[Requirement|DOTTEDREF] ("," evolvesReference+=[Requirement|DOTTEDREF])*)?
		public Group getGroup_2_13() { return cGroup_2_13; }

		//"evolves"
		public Keyword getEvolvesKeyword_2_13_0() { return cEvolvesKeyword_2_13_0; }

		//evolvesReference+=[Requirement|DOTTEDREF]
		public Assignment getEvolvesReferenceAssignment_2_13_1() { return cEvolvesReferenceAssignment_2_13_1; }

		//[Requirement|DOTTEDREF]
		public CrossReference getEvolvesReferenceRequirementCrossReference_2_13_1_0() { return cEvolvesReferenceRequirementCrossReference_2_13_1_0; }

		//DOTTEDREF
		public RuleCall getEvolvesReferenceRequirementDOTTEDREFParserRuleCall_2_13_1_0_1() { return cEvolvesReferenceRequirementDOTTEDREFParserRuleCall_2_13_1_0_1; }

		//("," evolvesReference+=[Requirement|DOTTEDREF])*
		public Group getGroup_2_13_2() { return cGroup_2_13_2; }

		//","
		public Keyword getCommaKeyword_2_13_2_0() { return cCommaKeyword_2_13_2_0; }

		//evolvesReference+=[Requirement|DOTTEDREF]
		public Assignment getEvolvesReferenceAssignment_2_13_2_1() { return cEvolvesReferenceAssignment_2_13_2_1; }

		//[Requirement|DOTTEDREF]
		public CrossReference getEvolvesReferenceRequirementCrossReference_2_13_2_1_0() { return cEvolvesReferenceRequirementCrossReference_2_13_2_1_0; }

		//DOTTEDREF
		public RuleCall getEvolvesReferenceRequirementDOTTEDREFParserRuleCall_2_13_2_1_0_1() { return cEvolvesReferenceRequirementDOTTEDREFParserRuleCall_2_13_2_1_0_1; }

		//("see" "goal" stakeholderRequirementReference+=[Goal|DOTTEDREF] (","
		//stakeholderRequirementReference+=[Goal|DOTTEDREF])*)?
		public Group getGroup_2_14() { return cGroup_2_14; }

		//"see"
		public Keyword getSeeKeyword_2_14_0() { return cSeeKeyword_2_14_0; }

		//"goal"
		public Keyword getGoalKeyword_2_14_1() { return cGoalKeyword_2_14_1; }

		//stakeholderRequirementReference+=[Goal|DOTTEDREF]
		public Assignment getStakeholderRequirementReferenceAssignment_2_14_2() { return cStakeholderRequirementReferenceAssignment_2_14_2; }

		//[Goal|DOTTEDREF]
		public CrossReference getStakeholderRequirementReferenceGoalCrossReference_2_14_2_0() { return cStakeholderRequirementReferenceGoalCrossReference_2_14_2_0; }

		//DOTTEDREF
		public RuleCall getStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_14_2_0_1() { return cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_14_2_0_1; }

		//("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*
		public Group getGroup_2_14_3() { return cGroup_2_14_3; }

		//","
		public Keyword getCommaKeyword_2_14_3_0() { return cCommaKeyword_2_14_3_0; }

		//stakeholderRequirementReference+=[Goal|DOTTEDREF]
		public Assignment getStakeholderRequirementReferenceAssignment_2_14_3_1() { return cStakeholderRequirementReferenceAssignment_2_14_3_1; }

		//[Goal|DOTTEDREF]
		public CrossReference getStakeholderRequirementReferenceGoalCrossReference_2_14_3_1_0() { return cStakeholderRequirementReferenceGoalCrossReference_2_14_3_1_0; }

		//DOTTEDREF
		public RuleCall getStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_14_3_1_0_1() { return cStakeholderRequirementReferenceGoalDOTTEDREFParserRuleCall_2_14_3_1_0_1; }

		//("see" "requirement" systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
		//systemRequirementReference+=[ContractualElement|DOTTEDREF])*)?
		public Group getGroup_2_15() { return cGroup_2_15; }

		//"see"
		public Keyword getSeeKeyword_2_15_0() { return cSeeKeyword_2_15_0; }

		//"requirement"
		public Keyword getRequirementKeyword_2_15_1() { return cRequirementKeyword_2_15_1; }

		//systemRequirementReference+=[ContractualElement|DOTTEDREF]
		public Assignment getSystemRequirementReferenceAssignment_2_15_2() { return cSystemRequirementReferenceAssignment_2_15_2; }

		//[ContractualElement|DOTTEDREF]
		public CrossReference getSystemRequirementReferenceContractualElementCrossReference_2_15_2_0() { return cSystemRequirementReferenceContractualElementCrossReference_2_15_2_0; }

		//DOTTEDREF
		public RuleCall getSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_15_2_0_1() { return cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_15_2_0_1; }

		//("," systemRequirementReference+=[ContractualElement|DOTTEDREF])*
		public Group getGroup_2_15_3() { return cGroup_2_15_3; }

		//","
		public Keyword getCommaKeyword_2_15_3_0() { return cCommaKeyword_2_15_3_0; }

		//systemRequirementReference+=[ContractualElement|DOTTEDREF]
		public Assignment getSystemRequirementReferenceAssignment_2_15_3_1() { return cSystemRequirementReferenceAssignment_2_15_3_1; }

		//[ContractualElement|DOTTEDREF]
		public CrossReference getSystemRequirementReferenceContractualElementCrossReference_2_15_3_1_0() { return cSystemRequirementReferenceContractualElementCrossReference_2_15_3_1_0; }

		//DOTTEDREF
		public RuleCall getSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_15_3_1_0_1() { return cSystemRequirementReferenceContractualElementDOTTEDREFParserRuleCall_2_15_3_1_0_1; }

		//verifiedBy+=VerificationActivity*
		public Assignment getVerifiedByAssignment_2_16() { return cVerifiedByAssignment_2_16; }

		//VerificationActivity
		public RuleCall getVerifiedByVerificationActivityParserRuleCall_2_16_0() { return cVerifiedByVerificationActivityParserRuleCall_2_16_0; }

		//argument=AssuranceArgument?
		public Assignment getArgumentAssignment_2_17() { return cArgumentAssignment_2_17; }

		//AssuranceArgument
		public RuleCall getArgumentAssuranceArgumentParserRuleCall_2_17_0() { return cArgumentAssuranceArgumentParserRuleCall_2_17_0; }

		//("see" "document" docReference+=ExternalDocument ("," docReference+=ExternalDocument)*)?
		public Group getGroup_2_18() { return cGroup_2_18; }

		//"see"
		public Keyword getSeeKeyword_2_18_0() { return cSeeKeyword_2_18_0; }

		//"document"
		public Keyword getDocumentKeyword_2_18_1() { return cDocumentKeyword_2_18_1; }

		//docReference+=ExternalDocument
		public Assignment getDocReferenceAssignment_2_18_2() { return cDocReferenceAssignment_2_18_2; }

		//ExternalDocument
		public RuleCall getDocReferenceExternalDocumentParserRuleCall_2_18_2_0() { return cDocReferenceExternalDocumentParserRuleCall_2_18_2_0; }

		//("," docReference+=ExternalDocument)*
		public Group getGroup_2_18_3() { return cGroup_2_18_3; }

		//","
		public Keyword getCommaKeyword_2_18_3_0() { return cCommaKeyword_2_18_3_0; }

		//docReference+=ExternalDocument
		public Assignment getDocReferenceAssignment_2_18_3_1() { return cDocReferenceAssignment_2_18_3_1; }

		//ExternalDocument
		public RuleCall getDocReferenceExternalDocumentParserRuleCall_2_18_3_1_0() { return cDocReferenceExternalDocumentParserRuleCall_2_18_3_1_0; }

		//("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?
		public Group getGroup_2_19() { return cGroup_2_19; }

		//"see"
		public Keyword getSeeKeyword_2_19_0() { return cSeeKeyword_2_19_0; }

		//modelReference+=QDOTTEDPAREF
		public Assignment getModelReferenceAssignment_2_19_1() { return cModelReferenceAssignment_2_19_1; }

		//QDOTTEDPAREF
		public RuleCall getModelReferenceQDOTTEDPAREFParserRuleCall_2_19_1_0() { return cModelReferenceQDOTTEDPAREFParserRuleCall_2_19_1_0; }

		//("," modelReference+=QDOTTEDPAREF)*
		public Group getGroup_2_19_2() { return cGroup_2_19_2; }

		//","
		public Keyword getCommaKeyword_2_19_2_0() { return cCommaKeyword_2_19_2_0; }

		//modelReference+=QDOTTEDPAREF
		public Assignment getModelReferenceAssignment_2_19_2_1() { return cModelReferenceAssignment_2_19_2_1; }

		//QDOTTEDPAREF
		public RuleCall getModelReferenceQDOTTEDPAREFParserRuleCall_2_19_2_1_0() { return cModelReferenceQDOTTEDPAREFParserRuleCall_2_19_2_1_0; }

		//"end"
		public Keyword getEndKeyword_3() { return cEndKeyword_3; }
	}

	public class VerificationAssumptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationAssumption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cAssumptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cForKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cTargetAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cTargetVerificationActivityCrossReference_3_0_1_0 = (CrossReference)cTargetAssignment_3_0_1.eContents().get(0);
		private final RuleCall cTargetVerificationActivityDOTTEDREFParserRuleCall_3_0_1_0_1 = (RuleCall)cTargetVerificationActivityCrossReference_3_0_1_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cCategoryKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cCategoryAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final CrossReference cCategoryRequirementCategoryCrossReference_3_1_1_0 = (CrossReference)cCategoryAssignment_3_1_1.eContents().get(0);
		private final RuleCall cCategoryRequirementCategoryCATREFParserRuleCall_3_1_1_0_1 = (RuleCall)cCategoryRequirementCategoryCrossReference_3_1_1_0.eContents().get(1);
		private final Group cGroup_3_1_2 = (Group)cGroup_3_1.eContents().get(2);
		private final Keyword cCommaKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cCategoryAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final CrossReference cCategoryRequirementCategoryCrossReference_3_1_2_1_0 = (CrossReference)cCategoryAssignment_3_1_2_1.eContents().get(0);
		private final RuleCall cCategoryRequirementCategoryCATREFParserRuleCall_3_1_2_1_0_1 = (RuleCall)cCategoryRequirementCategoryCrossReference_3_1_2_1_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cTitleKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cTitleAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_3_2_1_0 = (RuleCall)cTitleAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cDescriptionDescriptionParserRuleCall_3_3_1_0 = (RuleCall)cDescriptionAssignment_3_3_1.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cUnorderedGroup_3.eContents().get(4);
		private final Keyword cAssertedKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cByKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Assignment cAssertAssignment_3_4_2 = (Assignment)cGroup_3_4.eContents().get(2);
		private final CrossReference cAssertRequirementCrossReference_3_4_2_0 = (CrossReference)cAssertAssignment_3_4_2.eContents().get(0);
		private final RuleCall cAssertRequirementDOTTEDREFParserRuleCall_3_4_2_0_1 = (RuleCall)cAssertRequirementCrossReference_3_4_2_0.eContents().get(1);
		private final Assignment cVerifiedByAssignment_3_5 = (Assignment)cUnorderedGroup_3.eContents().get(5);
		private final RuleCall cVerifiedByVerificationActivityParserRuleCall_3_5_0 = (RuleCall)cVerifiedByAssignment_3_5.eContents().get(0);
		private final Assignment cArgumentAssignment_3_6 = (Assignment)cUnorderedGroup_3.eContents().get(6);
		private final RuleCall cArgumentAssuranceArgumentParserRuleCall_3_6_0 = (RuleCall)cArgumentAssignment_3_6.eContents().get(0);
		private final Group cGroup_3_7 = (Group)cUnorderedGroup_3.eContents().get(7);
		private final Keyword cRationaleKeyword_3_7_0 = (Keyword)cGroup_3_7.eContents().get(0);
		private final Assignment cRationaleAssignment_3_7_1 = (Assignment)cGroup_3_7.eContents().get(1);
		private final RuleCall cRationaleValueStringParserRuleCall_3_7_1_0 = (RuleCall)cRationaleAssignment_3_7_1.eContents().get(0);
		private final Group cGroup_3_8 = (Group)cUnorderedGroup_3.eContents().get(8);
		private final Keyword cIssuesKeyword_3_8_0 = (Keyword)cGroup_3_8.eContents().get(0);
		private final Assignment cIssueAssignment_3_8_1 = (Assignment)cGroup_3_8.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_3_8_1_0 = (RuleCall)cIssueAssignment_3_8_1.eContents().get(0);
		private final Group cGroup_3_8_2 = (Group)cGroup_3_8.eContents().get(2);
		private final Keyword cCommaKeyword_3_8_2_0 = (Keyword)cGroup_3_8_2.eContents().get(0);
		private final Assignment cIssueAssignment_3_8_2_1 = (Assignment)cGroup_3_8_2.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_3_8_2_1_0 = (RuleCall)cIssueAssignment_3_8_2_1.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//VerificationAssumption:
		//	"verification" "assumption" name=ID (("for" target=[VerificationActivity|DOTTEDREF])? & ("category"
		//	category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)?
		//	& ("description" description=Description)? & ("asserted" "by" assert=[Requirement|DOTTEDREF])? &
		//	verifiedBy+=VerificationActivity* & argument=AssuranceArgument? & ("rationale" rationale=ValueString)? & ("issues"
		//	issue+=ValueString ("," issue+=ValueString)*)?) "end";
		public ParserRule getRule() { return rule; }

		//"verification" "assumption" name=ID (("for" target=[VerificationActivity|DOTTEDREF])? & ("category"
		//category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)?
		//& ("description" description=Description)? & ("asserted" "by" assert=[Requirement|DOTTEDREF])? &
		//verifiedBy+=VerificationActivity* & argument=AssuranceArgument? & ("rationale" rationale=ValueString)? & ("issues"
		//issue+=ValueString ("," issue+=ValueString)*)?) "end"
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"assumption"
		public Keyword getAssumptionKeyword_1() { return cAssumptionKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("for" target=[VerificationActivity|DOTTEDREF])? & ("category" category+=[RequirementCategory|CATREF] (","
		//category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=Description)? &
		//("asserted" "by" assert=[Requirement|DOTTEDREF])? & verifiedBy+=VerificationActivity* & argument=AssuranceArgument? &
		//("rationale" rationale=ValueString)? & ("issues" issue+=ValueString ("," issue+=ValueString)*)?
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//("for" target=[VerificationActivity|DOTTEDREF])?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"for"
		public Keyword getForKeyword_3_0_0() { return cForKeyword_3_0_0; }

		//target=[VerificationActivity|DOTTEDREF]
		public Assignment getTargetAssignment_3_0_1() { return cTargetAssignment_3_0_1; }

		//[VerificationActivity|DOTTEDREF]
		public CrossReference getTargetVerificationActivityCrossReference_3_0_1_0() { return cTargetVerificationActivityCrossReference_3_0_1_0; }

		//DOTTEDREF
		public RuleCall getTargetVerificationActivityDOTTEDREFParserRuleCall_3_0_1_0_1() { return cTargetVerificationActivityDOTTEDREFParserRuleCall_3_0_1_0_1; }

		//("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"category"
		public Keyword getCategoryKeyword_3_1_0() { return cCategoryKeyword_3_1_0; }

		//category+=[RequirementCategory|CATREF]
		public Assignment getCategoryAssignment_3_1_1() { return cCategoryAssignment_3_1_1; }

		//[RequirementCategory|CATREF]
		public CrossReference getCategoryRequirementCategoryCrossReference_3_1_1_0() { return cCategoryRequirementCategoryCrossReference_3_1_1_0; }

		//CATREF
		public RuleCall getCategoryRequirementCategoryCATREFParserRuleCall_3_1_1_0_1() { return cCategoryRequirementCategoryCATREFParserRuleCall_3_1_1_0_1; }

		//("," category+=[RequirementCategory|CATREF])*
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }

		//","
		public Keyword getCommaKeyword_3_1_2_0() { return cCommaKeyword_3_1_2_0; }

		//category+=[RequirementCategory|CATREF]
		public Assignment getCategoryAssignment_3_1_2_1() { return cCategoryAssignment_3_1_2_1; }

		//[RequirementCategory|CATREF]
		public CrossReference getCategoryRequirementCategoryCrossReference_3_1_2_1_0() { return cCategoryRequirementCategoryCrossReference_3_1_2_1_0; }

		//CATREF
		public RuleCall getCategoryRequirementCategoryCATREFParserRuleCall_3_1_2_1_0_1() { return cCategoryRequirementCategoryCATREFParserRuleCall_3_1_2_1_0_1; }

		//("title" title=ValueString)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"title"
		public Keyword getTitleKeyword_3_2_0() { return cTitleKeyword_3_2_0; }

		//title=ValueString
		public Assignment getTitleAssignment_3_2_1() { return cTitleAssignment_3_2_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_3_2_1_0() { return cTitleValueStringParserRuleCall_3_2_1_0; }

		//("description" description=Description)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_3_0() { return cDescriptionKeyword_3_3_0; }

		//description=Description
		public Assignment getDescriptionAssignment_3_3_1() { return cDescriptionAssignment_3_3_1; }

		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_3_3_1_0() { return cDescriptionDescriptionParserRuleCall_3_3_1_0; }

		//("asserted" "by" assert=[Requirement|DOTTEDREF])?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//"asserted"
		public Keyword getAssertedKeyword_3_4_0() { return cAssertedKeyword_3_4_0; }

		//"by"
		public Keyword getByKeyword_3_4_1() { return cByKeyword_3_4_1; }

		//assert=[Requirement|DOTTEDREF]
		public Assignment getAssertAssignment_3_4_2() { return cAssertAssignment_3_4_2; }

		//[Requirement|DOTTEDREF]
		public CrossReference getAssertRequirementCrossReference_3_4_2_0() { return cAssertRequirementCrossReference_3_4_2_0; }

		//DOTTEDREF
		public RuleCall getAssertRequirementDOTTEDREFParserRuleCall_3_4_2_0_1() { return cAssertRequirementDOTTEDREFParserRuleCall_3_4_2_0_1; }

		//verifiedBy+=VerificationActivity*
		public Assignment getVerifiedByAssignment_3_5() { return cVerifiedByAssignment_3_5; }

		//VerificationActivity
		public RuleCall getVerifiedByVerificationActivityParserRuleCall_3_5_0() { return cVerifiedByVerificationActivityParserRuleCall_3_5_0; }

		//argument=AssuranceArgument?
		public Assignment getArgumentAssignment_3_6() { return cArgumentAssignment_3_6; }

		//AssuranceArgument
		public RuleCall getArgumentAssuranceArgumentParserRuleCall_3_6_0() { return cArgumentAssuranceArgumentParserRuleCall_3_6_0; }

		//("rationale" rationale=ValueString)?
		public Group getGroup_3_7() { return cGroup_3_7; }

		//"rationale"
		public Keyword getRationaleKeyword_3_7_0() { return cRationaleKeyword_3_7_0; }

		//rationale=ValueString
		public Assignment getRationaleAssignment_3_7_1() { return cRationaleAssignment_3_7_1; }

		//ValueString
		public RuleCall getRationaleValueStringParserRuleCall_3_7_1_0() { return cRationaleValueStringParserRuleCall_3_7_1_0; }

		//("issues" issue+=ValueString ("," issue+=ValueString)*)?
		public Group getGroup_3_8() { return cGroup_3_8; }

		//"issues"
		public Keyword getIssuesKeyword_3_8_0() { return cIssuesKeyword_3_8_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_3_8_1() { return cIssueAssignment_3_8_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_3_8_1_0() { return cIssueValueStringParserRuleCall_3_8_1_0; }

		//("," issue+=ValueString)*
		public Group getGroup_3_8_2() { return cGroup_3_8_2; }

		//","
		public Keyword getCommaKeyword_3_8_2_0() { return cCommaKeyword_3_8_2_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_3_8_2_1() { return cIssueAssignment_3_8_2_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_3_8_2_1_0() { return cIssueValueStringParserRuleCall_3_8_2_1_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class HazardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Hazard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHazardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cForKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cTargetAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cTargetVerificationActivityCrossReference_2_0_1_0 = (CrossReference)cTargetAssignment_2_0_1.eContents().get(0);
		private final RuleCall cTargetVerificationActivityDOTTEDREFParserRuleCall_2_0_1_0_1 = (RuleCall)cTargetVerificationActivityCrossReference_2_0_1_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cCategoryKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cCategoryAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final CrossReference cCategoryHazardCategoryCrossReference_2_1_1_0 = (CrossReference)cCategoryAssignment_2_1_1.eContents().get(0);
		private final RuleCall cCategoryHazardCategoryCATREFParserRuleCall_2_1_1_0_1 = (RuleCall)cCategoryHazardCategoryCrossReference_2_1_1_0.eContents().get(1);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cCommaKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cCategoryAssignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final CrossReference cCategoryHazardCategoryCrossReference_2_1_2_1_0 = (CrossReference)cCategoryAssignment_2_1_2_1.eContents().get(0);
		private final RuleCall cCategoryHazardCategoryCATREFParserRuleCall_2_1_2_1_0_1 = (RuleCall)cCategoryHazardCategoryCrossReference_2_1_2_1_0.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cTitleKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTitleAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_2_2_1_0 = (RuleCall)cTitleAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cDescriptionKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cDescriptionValueStringParserRuleCall_2_3_1_0 = (RuleCall)cDescriptionAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cMitigatedKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Keyword cByKeyword_2_4_1 = (Keyword)cGroup_2_4.eContents().get(1);
		private final Assignment cMitigatedAssignment_2_4_2 = (Assignment)cGroup_2_4.eContents().get(2);
		private final CrossReference cMitigatedRequirementCrossReference_2_4_2_0 = (CrossReference)cMitigatedAssignment_2_4_2.eContents().get(0);
		private final RuleCall cMitigatedRequirementDOTTEDREFParserRuleCall_2_4_2_0_1 = (RuleCall)cMitigatedRequirementCrossReference_2_4_2_0.eContents().get(1);
		private final Group cGroup_2_5 = (Group)cUnorderedGroup_2.eContents().get(5);
		private final Keyword cRationaleKeyword_2_5_0 = (Keyword)cGroup_2_5.eContents().get(0);
		private final Assignment cRationaleAssignment_2_5_1 = (Assignment)cGroup_2_5.eContents().get(1);
		private final RuleCall cRationaleValueStringParserRuleCall_2_5_1_0 = (RuleCall)cRationaleAssignment_2_5_1.eContents().get(0);
		private final Group cGroup_2_6 = (Group)cUnorderedGroup_2.eContents().get(6);
		private final Keyword cIssuesKeyword_2_6_0 = (Keyword)cGroup_2_6.eContents().get(0);
		private final Assignment cIssueAssignment_2_6_1 = (Assignment)cGroup_2_6.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_2_6_1_0 = (RuleCall)cIssueAssignment_2_6_1.eContents().get(0);
		private final Group cGroup_2_6_2 = (Group)cGroup_2_6.eContents().get(2);
		private final Keyword cCommaKeyword_2_6_2_0 = (Keyword)cGroup_2_6_2.eContents().get(0);
		private final Assignment cIssueAssignment_2_6_2_1 = (Assignment)cGroup_2_6_2.eContents().get(1);
		private final RuleCall cIssueValueStringParserRuleCall_2_6_2_1_0 = (RuleCall)cIssueAssignment_2_6_2_1.eContents().get(0);
		private final Keyword cEndKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Hazard:
		//	"hazard" name=ID (("for" target=[VerificationActivity|DOTTEDREF])? & ("category" category+=[HazardCategory|CATREF]
		//	("," category+=[HazardCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=ValueString)?
		//	& ("mitigated" "by" mitigated=[Requirement|DOTTEDREF])? & ("rationale" rationale=ValueString)? & ("issues"
		//	issue+=ValueString ("," issue+=ValueString)*)?) "end";
		public ParserRule getRule() { return rule; }

		//"hazard" name=ID (("for" target=[VerificationActivity|DOTTEDREF])? & ("category" category+=[HazardCategory|CATREF] (","
		//category+=[HazardCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=ValueString)? &
		//("mitigated" "by" mitigated=[Requirement|DOTTEDREF])? & ("rationale" rationale=ValueString)? & ("issues"
		//issue+=ValueString ("," issue+=ValueString)*)?) "end"
		public Group getGroup() { return cGroup; }

		//"hazard"
		public Keyword getHazardKeyword_0() { return cHazardKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("for" target=[VerificationActivity|DOTTEDREF])? & ("category" category+=[HazardCategory|CATREF] (","
		//category+=[HazardCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=ValueString)? &
		//("mitigated" "by" mitigated=[Requirement|DOTTEDREF])? & ("rationale" rationale=ValueString)? & ("issues"
		//issue+=ValueString ("," issue+=ValueString)*)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//("for" target=[VerificationActivity|DOTTEDREF])?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"for"
		public Keyword getForKeyword_2_0_0() { return cForKeyword_2_0_0; }

		//target=[VerificationActivity|DOTTEDREF]
		public Assignment getTargetAssignment_2_0_1() { return cTargetAssignment_2_0_1; }

		//[VerificationActivity|DOTTEDREF]
		public CrossReference getTargetVerificationActivityCrossReference_2_0_1_0() { return cTargetVerificationActivityCrossReference_2_0_1_0; }

		//DOTTEDREF
		public RuleCall getTargetVerificationActivityDOTTEDREFParserRuleCall_2_0_1_0_1() { return cTargetVerificationActivityDOTTEDREFParserRuleCall_2_0_1_0_1; }

		//("category" category+=[HazardCategory|CATREF] ("," category+=[HazardCategory|CATREF])*)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"category"
		public Keyword getCategoryKeyword_2_1_0() { return cCategoryKeyword_2_1_0; }

		//category+=[HazardCategory|CATREF]
		public Assignment getCategoryAssignment_2_1_1() { return cCategoryAssignment_2_1_1; }

		//[HazardCategory|CATREF]
		public CrossReference getCategoryHazardCategoryCrossReference_2_1_1_0() { return cCategoryHazardCategoryCrossReference_2_1_1_0; }

		//CATREF
		public RuleCall getCategoryHazardCategoryCATREFParserRuleCall_2_1_1_0_1() { return cCategoryHazardCategoryCATREFParserRuleCall_2_1_1_0_1; }

		//("," category+=[HazardCategory|CATREF])*
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//","
		public Keyword getCommaKeyword_2_1_2_0() { return cCommaKeyword_2_1_2_0; }

		//category+=[HazardCategory|CATREF]
		public Assignment getCategoryAssignment_2_1_2_1() { return cCategoryAssignment_2_1_2_1; }

		//[HazardCategory|CATREF]
		public CrossReference getCategoryHazardCategoryCrossReference_2_1_2_1_0() { return cCategoryHazardCategoryCrossReference_2_1_2_1_0; }

		//CATREF
		public RuleCall getCategoryHazardCategoryCATREFParserRuleCall_2_1_2_1_0_1() { return cCategoryHazardCategoryCATREFParserRuleCall_2_1_2_1_0_1; }

		//("title" title=ValueString)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"title"
		public Keyword getTitleKeyword_2_2_0() { return cTitleKeyword_2_2_0; }

		//title=ValueString
		public Assignment getTitleAssignment_2_2_1() { return cTitleAssignment_2_2_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_2_2_1_0() { return cTitleValueStringParserRuleCall_2_2_1_0; }

		//("description" description=ValueString)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"description"
		public Keyword getDescriptionKeyword_2_3_0() { return cDescriptionKeyword_2_3_0; }

		//description=ValueString
		public Assignment getDescriptionAssignment_2_3_1() { return cDescriptionAssignment_2_3_1; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_2_3_1_0() { return cDescriptionValueStringParserRuleCall_2_3_1_0; }

		//("mitigated" "by" mitigated=[Requirement|DOTTEDREF])?
		public Group getGroup_2_4() { return cGroup_2_4; }

		//"mitigated"
		public Keyword getMitigatedKeyword_2_4_0() { return cMitigatedKeyword_2_4_0; }

		//"by"
		public Keyword getByKeyword_2_4_1() { return cByKeyword_2_4_1; }

		//mitigated=[Requirement|DOTTEDREF]
		public Assignment getMitigatedAssignment_2_4_2() { return cMitigatedAssignment_2_4_2; }

		//[Requirement|DOTTEDREF]
		public CrossReference getMitigatedRequirementCrossReference_2_4_2_0() { return cMitigatedRequirementCrossReference_2_4_2_0; }

		//DOTTEDREF
		public RuleCall getMitigatedRequirementDOTTEDREFParserRuleCall_2_4_2_0_1() { return cMitigatedRequirementDOTTEDREFParserRuleCall_2_4_2_0_1; }

		//("rationale" rationale=ValueString)?
		public Group getGroup_2_5() { return cGroup_2_5; }

		//"rationale"
		public Keyword getRationaleKeyword_2_5_0() { return cRationaleKeyword_2_5_0; }

		//rationale=ValueString
		public Assignment getRationaleAssignment_2_5_1() { return cRationaleAssignment_2_5_1; }

		//ValueString
		public RuleCall getRationaleValueStringParserRuleCall_2_5_1_0() { return cRationaleValueStringParserRuleCall_2_5_1_0; }

		//("issues" issue+=ValueString ("," issue+=ValueString)*)?
		public Group getGroup_2_6() { return cGroup_2_6; }

		//"issues"
		public Keyword getIssuesKeyword_2_6_0() { return cIssuesKeyword_2_6_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_2_6_1() { return cIssueAssignment_2_6_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_2_6_1_0() { return cIssueValueStringParserRuleCall_2_6_1_0; }

		//("," issue+=ValueString)*
		public Group getGroup_2_6_2() { return cGroup_2_6_2; }

		//","
		public Keyword getCommaKeyword_2_6_2_0() { return cCommaKeyword_2_6_2_0; }

		//issue+=ValueString
		public Assignment getIssueAssignment_2_6_2_1() { return cIssueAssignment_2_6_2_1; }

		//ValueString
		public RuleCall getIssueValueStringParserRuleCall_2_6_2_1_0() { return cIssueValueStringParserRuleCall_2_6_2_1_0; }

		//"end"
		public Keyword getEndKeyword_3() { return cEndKeyword_3; }
	}

	public class ExternalDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalDocument");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocReferenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocReferenceDOCPATHParserRuleCall_0_0 = (RuleCall)cDocReferenceAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNumberSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDocFragmentAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDocFragmentDOCFRAGMENTParserRuleCall_1_1_0 = (RuleCall)cDocFragmentAssignment_1_1.eContents().get(0);
		
		//ExternalDocument:
		//	docReference=DOCPATH ("#" docFragment=DOCFRAGMENT)?;
		public ParserRule getRule() { return rule; }

		//docReference=DOCPATH ("#" docFragment=DOCFRAGMENT)?
		public Group getGroup() { return cGroup; }

		//docReference=DOCPATH
		public Assignment getDocReferenceAssignment_0() { return cDocReferenceAssignment_0; }

		//DOCPATH
		public RuleCall getDocReferenceDOCPATHParserRuleCall_0_0() { return cDocReferenceDOCPATHParserRuleCall_0_0; }

		//("#" docFragment=DOCFRAGMENT)?
		public Group getGroup_1() { return cGroup_1; }

		//"#"
		public Keyword getNumberSignKeyword_1_0() { return cNumberSignKeyword_1_0; }

		//docFragment=DOCFRAGMENT
		public Assignment getDocFragmentAssignment_1_1() { return cDocFragmentAssignment_1_1; }

		//DOCFRAGMENT
		public RuleCall getDocFragmentDOCFRAGMENTParserRuleCall_1_1_0() { return cDocFragmentDOCFRAGMENTParserRuleCall_1_1_0; }
	}

	public class CategoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Categories");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRequirementCategoriesParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVerificationCategoriesParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHazardCategoriesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Categories:
		//	RequirementCategories | VerificationCategories | HazardCategories;
		public ParserRule getRule() { return rule; }

		//RequirementCategories | VerificationCategories | HazardCategories
		public Alternatives getAlternatives() { return cAlternatives; }

		//RequirementCategories
		public RuleCall getRequirementCategoriesParserRuleCall_0() { return cRequirementCategoriesParserRuleCall_0; }

		//VerificationCategories
		public RuleCall getVerificationCategoriesParserRuleCall_1() { return cVerificationCategoriesParserRuleCall_1; }

		//HazardCategories
		public RuleCall getHazardCategoriesParserRuleCall_2() { return cHazardCategoriesParserRuleCall_2; }
	}

	public class RequirementCategoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RequirementCategories");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCategoriesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cCategoryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCategoryRequirementCategoryParserRuleCall_3_0 = (RuleCall)cCategoryAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RequirementCategories:
		//	"requirement" "categories" name=ID category+=RequirementCategory+ "end";
		public ParserRule getRule() { return rule; }

		//"requirement" "categories" name=ID category+=RequirementCategory+ "end"
		public Group getGroup() { return cGroup; }

		//"requirement"
		public Keyword getRequirementKeyword_0() { return cRequirementKeyword_0; }

		//"categories"
		public Keyword getCategoriesKeyword_1() { return cCategoriesKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//category+=RequirementCategory+
		public Assignment getCategoryAssignment_3() { return cCategoryAssignment_3; }

		//RequirementCategory
		public RuleCall getCategoryRequirementCategoryParserRuleCall_3_0() { return cCategoryRequirementCategoryParserRuleCall_3_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class VerificationCategoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationCategories");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCategoriesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cCategoryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCategoryVerificationCategoryParserRuleCall_3_0 = (RuleCall)cCategoryAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//VerificationCategories:
		//	"verification" "categories" name=ID category+=VerificationCategory+ "end";
		public ParserRule getRule() { return rule; }

		//"verification" "categories" name=ID category+=VerificationCategory+ "end"
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"categories"
		public Keyword getCategoriesKeyword_1() { return cCategoriesKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//category+=VerificationCategory+
		public Assignment getCategoryAssignment_3() { return cCategoryAssignment_3; }

		//VerificationCategory
		public RuleCall getCategoryVerificationCategoryParserRuleCall_3_0() { return cCategoryVerificationCategoryParserRuleCall_3_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class HazardCategoriesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HazardCategories");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHazardKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCategoriesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cCategoryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCategoryHazardCategoryParserRuleCall_3_0 = (RuleCall)cCategoryAssignment_3.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//HazardCategories:
		//	"hazard" "categories" name=ID category+=HazardCategory+ "end";
		public ParserRule getRule() { return rule; }

		//"hazard" "categories" name=ID category+=HazardCategory+ "end"
		public Group getGroup() { return cGroup; }

		//"hazard"
		public Keyword getHazardKeyword_0() { return cHazardKeyword_0; }

		//"categories"
		public Keyword getCategoriesKeyword_1() { return cCategoriesKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//category+=HazardCategory+
		public Assignment getCategoryAssignment_3() { return cCategoryAssignment_3; }

		//HazardCategory
		public RuleCall getCategoryHazardCategoryParserRuleCall_3_0() { return cCategoryHazardCategoryParserRuleCall_3_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class CategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Category");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRequirementCategoryParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVerificationCategoryParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHazardCategoryParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Category:
		//	RequirementCategory | VerificationCategory | HazardCategory;
		public ParserRule getRule() { return rule; }

		//RequirementCategory | VerificationCategory | HazardCategory
		public Alternatives getAlternatives() { return cAlternatives; }

		//RequirementCategory
		public RuleCall getRequirementCategoryParserRuleCall_0() { return cRequirementCategoryParserRuleCall_0; }

		//VerificationCategory
		public RuleCall getVerificationCategoryParserRuleCall_1() { return cVerificationCategoryParserRuleCall_1; }

		//HazardCategory
		public RuleCall getHazardCategoryParserRuleCall_2() { return cHazardCategoryParserRuleCall_2; }
	}

	public class RequirementCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RequirementCategory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExtendsRequirementCategoryCrossReference_2_1_0 = (CrossReference)cExtendsAssignment_2_1.eContents().get(0);
		private final RuleCall cExtendsRequirementCategoryDOTTEDREFParserRuleCall_2_1_0_1 = (RuleCall)cExtendsRequirementCategoryCrossReference_2_1_0.eContents().get(1);
		
		//RequirementCategory:
		//	"category" name=ID ("extends" extends=[RequirementCategory|DOTTEDREF])?;
		public ParserRule getRule() { return rule; }

		//"category" name=ID ("extends" extends=[RequirementCategory|DOTTEDREF])?
		public Group getGroup() { return cGroup; }

		//"category"
		public Keyword getCategoryKeyword_0() { return cCategoryKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" extends=[RequirementCategory|DOTTEDREF])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//extends=[RequirementCategory|DOTTEDREF]
		public Assignment getExtendsAssignment_2_1() { return cExtendsAssignment_2_1; }

		//[RequirementCategory|DOTTEDREF]
		public CrossReference getExtendsRequirementCategoryCrossReference_2_1_0() { return cExtendsRequirementCategoryCrossReference_2_1_0; }

		//DOTTEDREF
		public RuleCall getExtendsRequirementCategoryDOTTEDREFParserRuleCall_2_1_0_1() { return cExtendsRequirementCategoryDOTTEDREFParserRuleCall_2_1_0_1; }
	}

	public class VerificationCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationCategory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExtendsVerificationCategoryCrossReference_2_1_0 = (CrossReference)cExtendsAssignment_2_1.eContents().get(0);
		private final RuleCall cExtendsVerificationCategoryDOTTEDREFParserRuleCall_2_1_0_1 = (RuleCall)cExtendsVerificationCategoryCrossReference_2_1_0.eContents().get(1);
		
		//VerificationCategory:
		//	"category" name=ID ("extends" extends=[VerificationCategory|DOTTEDREF])?;
		public ParserRule getRule() { return rule; }

		//"category" name=ID ("extends" extends=[VerificationCategory|DOTTEDREF])?
		public Group getGroup() { return cGroup; }

		//"category"
		public Keyword getCategoryKeyword_0() { return cCategoryKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" extends=[VerificationCategory|DOTTEDREF])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//extends=[VerificationCategory|DOTTEDREF]
		public Assignment getExtendsAssignment_2_1() { return cExtendsAssignment_2_1; }

		//[VerificationCategory|DOTTEDREF]
		public CrossReference getExtendsVerificationCategoryCrossReference_2_1_0() { return cExtendsVerificationCategoryCrossReference_2_1_0; }

		//DOTTEDREF
		public RuleCall getExtendsVerificationCategoryDOTTEDREFParserRuleCall_2_1_0_1() { return cExtendsVerificationCategoryDOTTEDREFParserRuleCall_2_1_0_1; }
	}

	public class HazardCategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HazardCategory");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCategoryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cExtendsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cExtendsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cExtendsHazardCategoryCrossReference_2_1_0 = (CrossReference)cExtendsAssignment_2_1.eContents().get(0);
		private final RuleCall cExtendsHazardCategoryDOTTEDREFParserRuleCall_2_1_0_1 = (RuleCall)cExtendsHazardCategoryCrossReference_2_1_0.eContents().get(1);
		
		//HazardCategory:
		//	"category" name=ID ("extends" extends=[HazardCategory|DOTTEDREF])?;
		public ParserRule getRule() { return rule; }

		//"category" name=ID ("extends" extends=[HazardCategory|DOTTEDREF])?
		public Group getGroup() { return cGroup; }

		//"category"
		public Keyword getCategoryKeyword_0() { return cCategoryKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("extends" extends=[HazardCategory|DOTTEDREF])?
		public Group getGroup_2() { return cGroup_2; }

		//"extends"
		public Keyword getExtendsKeyword_2_0() { return cExtendsKeyword_2_0; }

		//extends=[HazardCategory|DOTTEDREF]
		public Assignment getExtendsAssignment_2_1() { return cExtendsAssignment_2_1; }

		//[HazardCategory|DOTTEDREF]
		public CrossReference getExtendsHazardCategoryCrossReference_2_1_0() { return cExtendsHazardCategoryCrossReference_2_1_0; }

		//DOTTEDREF
		public RuleCall getExtendsHazardCategoryDOTTEDREFParserRuleCall_2_1_0_1() { return cExtendsHazardCategoryDOTTEDREFParserRuleCall_2_1_0_1; }
	}

	public class ValueStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValueString: // remove quotes from string in ValueConverter 
		//	STRING;
		public ParserRule getRule() { return rule; }

		//// remove quotes from string in ValueConverter 
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class StakeholderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stakeholder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStakeholderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_2 = (UnorderedGroup)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cUnorderedGroup_2.eContents().get(0);
		private final Keyword cTitleKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cTitleAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_2_0_1_0 = (RuleCall)cTitleAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cUnorderedGroup_2.eContents().get(1);
		private final Keyword cDescriptionKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cDescriptionValueStringParserRuleCall_2_1_1_0 = (RuleCall)cDescriptionAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cUnorderedGroup_2.eContents().get(2);
		private final Keyword cRoleKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cRoleAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cRoleValueStringParserRuleCall_2_2_1_0 = (RuleCall)cRoleAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cUnorderedGroup_2.eContents().get(3);
		private final Keyword cEmailKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cEmailAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final RuleCall cEmailValueStringParserRuleCall_2_3_1_0 = (RuleCall)cEmailAssignment_2_3_1.eContents().get(0);
		private final Group cGroup_2_4 = (Group)cUnorderedGroup_2.eContents().get(4);
		private final Keyword cPhoneKeyword_2_4_0 = (Keyword)cGroup_2_4.eContents().get(0);
		private final Assignment cPhoneAssignment_2_4_1 = (Assignment)cGroup_2_4.eContents().get(1);
		private final RuleCall cPhoneValueStringParserRuleCall_2_4_1_0 = (RuleCall)cPhoneAssignment_2_4_1.eContents().get(0);
		private final Keyword cEndKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		/// *
		// * Stakeholder
		// * / Stakeholder:
		//	"stakeholder" name=ID (("title" title=ValueString)? & ("description" description=ValueString)? & ("role"
		//	role=ValueString)? & ("email" email=ValueString)? & ("phone" phone=ValueString)?) "end";
		public ParserRule getRule() { return rule; }

		//"stakeholder" name=ID (("title" title=ValueString)? & ("description" description=ValueString)? & ("role"
		//role=ValueString)? & ("email" email=ValueString)? & ("phone" phone=ValueString)?) "end"
		public Group getGroup() { return cGroup; }

		//"stakeholder"
		public Keyword getStakeholderKeyword_0() { return cStakeholderKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("title" title=ValueString)? & ("description" description=ValueString)? & ("role" role=ValueString)? & ("email"
		//email=ValueString)? & ("phone" phone=ValueString)?
		public UnorderedGroup getUnorderedGroup_2() { return cUnorderedGroup_2; }

		//("title" title=ValueString)?
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"title"
		public Keyword getTitleKeyword_2_0_0() { return cTitleKeyword_2_0_0; }

		//title=ValueString
		public Assignment getTitleAssignment_2_0_1() { return cTitleAssignment_2_0_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_2_0_1_0() { return cTitleValueStringParserRuleCall_2_0_1_0; }

		//("description" description=ValueString)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"description"
		public Keyword getDescriptionKeyword_2_1_0() { return cDescriptionKeyword_2_1_0; }

		//description=ValueString
		public Assignment getDescriptionAssignment_2_1_1() { return cDescriptionAssignment_2_1_1; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_2_1_1_0() { return cDescriptionValueStringParserRuleCall_2_1_1_0; }

		//("role" role=ValueString)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"role"
		public Keyword getRoleKeyword_2_2_0() { return cRoleKeyword_2_2_0; }

		//role=ValueString
		public Assignment getRoleAssignment_2_2_1() { return cRoleAssignment_2_2_1; }

		//ValueString
		public RuleCall getRoleValueStringParserRuleCall_2_2_1_0() { return cRoleValueStringParserRuleCall_2_2_1_0; }

		//("email" email=ValueString)?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"email"
		public Keyword getEmailKeyword_2_3_0() { return cEmailKeyword_2_3_0; }

		//email=ValueString
		public Assignment getEmailAssignment_2_3_1() { return cEmailAssignment_2_3_1; }

		//ValueString
		public RuleCall getEmailValueStringParserRuleCall_2_3_1_0() { return cEmailValueStringParserRuleCall_2_3_1_0; }

		//("phone" phone=ValueString)?
		public Group getGroup_2_4() { return cGroup_2_4; }

		//"phone"
		public Keyword getPhoneKeyword_2_4_0() { return cPhoneKeyword_2_4_0; }

		//phone=ValueString
		public Assignment getPhoneAssignment_2_4_1() { return cPhoneAssignment_2_4_1; }

		//ValueString
		public RuleCall getPhoneValueStringParserRuleCall_2_4_1_0() { return cPhoneValueStringParserRuleCall_2_4_1_0; }

		//"end"
		public Keyword getEndKeyword_3() { return cEndKeyword_3; }
	}

	public class AssuranceArgumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssuranceArgument");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArgumentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionArgumentExprParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRationaleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRationaleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRationaleValueStringParserRuleCall_3_1_0 = (RuleCall)cRationaleAssignment_3_1.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//AssuranceArgument:
		//	"argument" expression=ArgumentExpr ";" ("rationale" rationale=ValueString)? "end";
		public ParserRule getRule() { return rule; }

		//"argument" expression=ArgumentExpr ";" ("rationale" rationale=ValueString)? "end"
		public Group getGroup() { return cGroup; }

		//"argument"
		public Keyword getArgumentKeyword_0() { return cArgumentKeyword_0; }

		//expression=ArgumentExpr
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }

		//ArgumentExpr
		public RuleCall getExpressionArgumentExprParserRuleCall_1_0() { return cExpressionArgumentExprParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//("rationale" rationale=ValueString)?
		public Group getGroup_3() { return cGroup_3; }

		//"rationale"
		public Keyword getRationaleKeyword_3_0() { return cRationaleKeyword_3_0; }

		//rationale=ValueString
		public Assignment getRationaleAssignment_3_1() { return cRationaleAssignment_3_1; }

		//ValueString
		public RuleCall getRationaleValueStringParserRuleCall_3_1_0() { return cRationaleValueStringParserRuleCall_3_1_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class ArgumentExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArgumentExpr");
		private final RuleCall cImpliesExprParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ArgumentExpr:
		//	ImpliesExpr;
		public ParserRule getRule() { return rule; }

		//ImpliesExpr
		public RuleCall getImpliesExprParserRuleCall() { return cImpliesExprParserRuleCall; }
	}

	public class ImpliesExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImpliesExpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOrExprParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cBinaryExprLeftAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final Keyword cOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0 = (Keyword)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightImpliesExprParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//ImpliesExpr returns ArgumentExpr:
		//	OrExpr (=> ({BinaryExpr.left=current} op="=>") right=ImpliesExpr)?;
		public ParserRule getRule() { return rule; }

		//OrExpr (=> ({BinaryExpr.left=current} op="=>") right=ImpliesExpr)?
		public Group getGroup() { return cGroup; }

		//OrExpr
		public RuleCall getOrExprParserRuleCall_0() { return cOrExprParserRuleCall_0; }

		//(=> ({BinaryExpr.left=current} op="=>") right=ImpliesExpr)?
		public Group getGroup_1() { return cGroup_1; }

		//=> ({BinaryExpr.left=current} op="=>")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//{BinaryExpr.left=current} op="=>"
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//{BinaryExpr.left=current}
		public Action getBinaryExprLeftAction_1_0_0_0() { return cBinaryExprLeftAction_1_0_0_0; }

		//op="=>"
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//"=>"
		public Keyword getOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0() { return cOpEqualsSignGreaterThanSignKeyword_1_0_0_1_0; }

		//right=ImpliesExpr
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }

		//ImpliesExpr
		public RuleCall getRightImpliesExprParserRuleCall_1_1_0() { return cRightImpliesExprParserRuleCall_1_1_0; }
	}

	public class OrExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrExpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExprParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cBinaryExprLeftAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final Keyword cOpOrKeyword_1_0_0_1_0 = (Keyword)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightAndExprParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//OrExpr returns ArgumentExpr:
		//	AndExpr (=> ({BinaryExpr.left=current} op="or") right=AndExpr)*;
		public ParserRule getRule() { return rule; }

		//AndExpr (=> ({BinaryExpr.left=current} op="or") right=AndExpr)*
		public Group getGroup() { return cGroup; }

		//AndExpr
		public RuleCall getAndExprParserRuleCall_0() { return cAndExprParserRuleCall_0; }

		//(=> ({BinaryExpr.left=current} op="or") right=AndExpr)*
		public Group getGroup_1() { return cGroup_1; }

		//=> ({BinaryExpr.left=current} op="or")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//{BinaryExpr.left=current} op="or"
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//{BinaryExpr.left=current}
		public Action getBinaryExprLeftAction_1_0_0_0() { return cBinaryExprLeftAction_1_0_0_0; }

		//op="or"
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//"or"
		public Keyword getOpOrKeyword_1_0_0_1_0() { return cOpOrKeyword_1_0_0_1_0; }

		//right=AndExpr
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }

		//AndExpr
		public RuleCall getRightAndExprParserRuleCall_1_1_0() { return cRightAndExprParserRuleCall_1_1_0; }
	}

	public class AndExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndExpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAtomicExprParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cGroup_1_0.eContents().get(0);
		private final Action cBinaryExprLeftAction_1_0_0_0 = (Action)cGroup_1_0_0.eContents().get(0);
		private final Assignment cOpAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final Keyword cOpAndKeyword_1_0_0_1_0 = (Keyword)cOpAssignment_1_0_0_1.eContents().get(0);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightAtomicExprParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//AndExpr returns ArgumentExpr:
		//	AtomicExpr (=> ({BinaryExpr.left=current} op="and") right=AtomicExpr)*;
		public ParserRule getRule() { return rule; }

		//AtomicExpr (=> ({BinaryExpr.left=current} op="and") right=AtomicExpr)*
		public Group getGroup() { return cGroup; }

		//AtomicExpr
		public RuleCall getAtomicExprParserRuleCall_0() { return cAtomicExprParserRuleCall_0; }

		//(=> ({BinaryExpr.left=current} op="and") right=AtomicExpr)*
		public Group getGroup_1() { return cGroup_1; }

		//=> ({BinaryExpr.left=current} op="and")
		public Group getGroup_1_0() { return cGroup_1_0; }

		//{BinaryExpr.left=current} op="and"
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//{BinaryExpr.left=current}
		public Action getBinaryExprLeftAction_1_0_0_0() { return cBinaryExprLeftAction_1_0_0_0; }

		//op="and"
		public Assignment getOpAssignment_1_0_0_1() { return cOpAssignment_1_0_0_1; }

		//"and"
		public Keyword getOpAndKeyword_1_0_0_1_0() { return cOpAndKeyword_1_0_0_1_0; }

		//right=AtomicExpr
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }

		//AtomicExpr
		public RuleCall getRightAtomicExprParserRuleCall_1_1_0() { return cRightAtomicExprParserRuleCall_1_1_0; }
	}

	public class AtomicExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtomicExpr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cRefExprAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cIdAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cIdArgumentReferenceParserRuleCall_0_1_0 = (RuleCall)cIdAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cArgumentExprParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//AtomicExpr returns ArgumentExpr:
		//	{RefExpr} id=ArgumentReference | "(" ArgumentExpr ")";
		public ParserRule getRule() { return rule; }

		//{RefExpr} id=ArgumentReference | "(" ArgumentExpr ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//{RefExpr} id=ArgumentReference
		public Group getGroup_0() { return cGroup_0; }

		//{RefExpr}
		public Action getRefExprAction_0_0() { return cRefExprAction_0_0; }

		//id=ArgumentReference
		public Assignment getIdAssignment_0_1() { return cIdAssignment_0_1; }

		//ArgumentReference
		public RuleCall getIdArgumentReferenceParserRuleCall_0_1_0() { return cIdArgumentReferenceParserRuleCall_0_1_0; }

		//"(" ArgumentExpr ")"
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//ArgumentExpr
		public RuleCall getArgumentExprParserRuleCall_1_1() { return cArgumentExprParserRuleCall_1_1; }

		//")"
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}

	public class ArgumentReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArgumentReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferenceAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cReferenceVerificationActivityCrossReference_0_0 = (CrossReference)cReferenceAssignment_0.eContents().get(0);
		private final RuleCall cReferenceVerificationActivityDOTTEDREFParserRuleCall_0_0_1 = (RuleCall)cReferenceVerificationActivityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cWeightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cWeightINTTerminalRuleCall_1_1_0 = (RuleCall)cWeightAssignment_1_1.eContents().get(0);
		
		//ArgumentReference:
		//	reference=[VerificationActivity|DOTTEDREF] ("*" weight=INT)?;
		public ParserRule getRule() { return rule; }

		//reference=[VerificationActivity|DOTTEDREF] ("*" weight=INT)?
		public Group getGroup() { return cGroup; }

		//reference=[VerificationActivity|DOTTEDREF]
		public Assignment getReferenceAssignment_0() { return cReferenceAssignment_0; }

		//[VerificationActivity|DOTTEDREF]
		public CrossReference getReferenceVerificationActivityCrossReference_0_0() { return cReferenceVerificationActivityCrossReference_0_0; }

		//DOTTEDREF
		public RuleCall getReferenceVerificationActivityDOTTEDREFParserRuleCall_0_0_1() { return cReferenceVerificationActivityDOTTEDREFParserRuleCall_0_0_1; }

		//("*" weight=INT)?
		public Group getGroup_1() { return cGroup_1; }

		//"*"
		public Keyword getAsteriskKeyword_1_0() { return cAsteriskKeyword_1_0; }

		//weight=INT
		public Assignment getWeightAssignment_1_1() { return cWeightAssignment_1_1; }

		//INT
		public RuleCall getWeightINTTerminalRuleCall_1_1_0() { return cWeightINTTerminalRuleCall_1_1_0; }
	}

	public class VerificationActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cActivityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cTitleKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cTitleAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_3_0_1_0 = (RuleCall)cTitleAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cDescriptionKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cDescriptionValueStringParserRuleCall_3_1_1_0 = (RuleCall)cDescriptionAssignment_3_1_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cCategoryKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cCategoryAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final CrossReference cCategoryCategoryCrossReference_3_2_1_0 = (CrossReference)cCategoryAssignment_3_2_1.eContents().get(0);
		private final RuleCall cCategoryCategoryDOTTEDREFParserRuleCall_3_2_1_0_1 = (RuleCall)cCategoryCategoryCrossReference_3_2_1_0.eContents().get(1);
		private final Group cGroup_3_2_2 = (Group)cGroup_3_2.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_2_0 = (Keyword)cGroup_3_2_2.eContents().get(0);
		private final Assignment cCategoryAssignment_3_2_2_1 = (Assignment)cGroup_3_2_2.eContents().get(1);
		private final CrossReference cCategoryCategoryCrossReference_3_2_2_1_0 = (CrossReference)cCategoryAssignment_3_2_2_1.eContents().get(0);
		private final RuleCall cCategoryCategoryDOTTEDREFParserRuleCall_3_2_2_1_0_1 = (RuleCall)cCategoryCategoryCrossReference_3_2_2_1_0.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cMethodKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cMethodAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cMethodVerificationMethodParserRuleCall_3_3_1_0 = (RuleCall)cMethodAssignment_3_3_1.eContents().get(0);
		private final Assignment cAssumptionAssignment_3_4 = (Assignment)cUnorderedGroup_3.eContents().get(4);
		private final RuleCall cAssumptionVerificationAssumptionParserRuleCall_3_4_0 = (RuleCall)cAssumptionAssignment_3_4.eContents().get(0);
		private final Keyword cEndKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// *
		// * Verification Activity
		// * / VerificationActivity:
		//	"verification" "activity" name=ID (("title" title=ValueString)? //	('parameters'  verificationParameters+=([ElementReference])*)?
		//	& ("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
		//	category+=[Category|DOTTEDREF])*)? & ("method" method=VerificationMethod)? & assumption+=VerificationAssumption*)
		//	"end";
		public ParserRule getRule() { return rule; }

		//"verification" "activity" name=ID (("title" title=ValueString)? //	('parameters'  verificationParameters+=([ElementReference])*)?
		//& ("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
		//category+=[Category|DOTTEDREF])*)? & ("method" method=VerificationMethod)? & assumption+=VerificationAssumption*)
		//"end"
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"activity"
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("title" title=ValueString)? //	('parameters'  verificationParameters+=([ElementReference])*)?
		//& ("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
		//category+=[Category|DOTTEDREF])*)? & ("method" method=VerificationMethod)? & assumption+=VerificationAssumption*
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//("title" title=ValueString)?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"title"
		public Keyword getTitleKeyword_3_0_0() { return cTitleKeyword_3_0_0; }

		//title=ValueString
		public Assignment getTitleAssignment_3_0_1() { return cTitleAssignment_3_0_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_3_0_1_0() { return cTitleValueStringParserRuleCall_3_0_1_0; }

		//("description" description=ValueString)?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"description"
		public Keyword getDescriptionKeyword_3_1_0() { return cDescriptionKeyword_3_1_0; }

		//description=ValueString
		public Assignment getDescriptionAssignment_3_1_1() { return cDescriptionAssignment_3_1_1; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_3_1_1_0() { return cDescriptionValueStringParserRuleCall_3_1_1_0; }

		//("category" category+=[Category|DOTTEDREF] ("," category+=[Category|DOTTEDREF])*)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"category"
		public Keyword getCategoryKeyword_3_2_0() { return cCategoryKeyword_3_2_0; }

		//category+=[Category|DOTTEDREF]
		public Assignment getCategoryAssignment_3_2_1() { return cCategoryAssignment_3_2_1; }

		//[Category|DOTTEDREF]
		public CrossReference getCategoryCategoryCrossReference_3_2_1_0() { return cCategoryCategoryCrossReference_3_2_1_0; }

		//DOTTEDREF
		public RuleCall getCategoryCategoryDOTTEDREFParserRuleCall_3_2_1_0_1() { return cCategoryCategoryDOTTEDREFParserRuleCall_3_2_1_0_1; }

		//("," category+=[Category|DOTTEDREF])*
		public Group getGroup_3_2_2() { return cGroup_3_2_2; }

		//","
		public Keyword getCommaKeyword_3_2_2_0() { return cCommaKeyword_3_2_2_0; }

		//category+=[Category|DOTTEDREF]
		public Assignment getCategoryAssignment_3_2_2_1() { return cCategoryAssignment_3_2_2_1; }

		//[Category|DOTTEDREF]
		public CrossReference getCategoryCategoryCrossReference_3_2_2_1_0() { return cCategoryCategoryCrossReference_3_2_2_1_0; }

		//DOTTEDREF
		public RuleCall getCategoryCategoryDOTTEDREFParserRuleCall_3_2_2_1_0_1() { return cCategoryCategoryDOTTEDREFParserRuleCall_3_2_2_1_0_1; }

		//("method" method=VerificationMethod)?
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"method"
		public Keyword getMethodKeyword_3_3_0() { return cMethodKeyword_3_3_0; }

		//method=VerificationMethod
		public Assignment getMethodAssignment_3_3_1() { return cMethodAssignment_3_3_1; }

		//VerificationMethod
		public RuleCall getMethodVerificationMethodParserRuleCall_3_3_1_0() { return cMethodVerificationMethodParserRuleCall_3_3_1_0; }

		//assumption+=VerificationAssumption*
		public Assignment getAssumptionAssignment_3_4() { return cAssumptionAssignment_3_4; }

		//VerificationAssumption
		public RuleCall getAssumptionVerificationAssumptionParserRuleCall_3_4_0() { return cAssumptionVerificationAssumptionParserRuleCall_3_4_0; }

		//"end"
		public Keyword getEndKeyword_4() { return cEndKeyword_4; }
	}

	public class VerificationMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationMethod");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMethodKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLanguageAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLanguageSupportedLanguageParserRuleCall_4_0 = (RuleCall)cLanguageAssignment_4.eContents().get(0);
		private final Assignment cMethodAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMethodValueStringParserRuleCall_5_0 = (RuleCall)cMethodAssignment_5.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_6 = (UnorderedGroup)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cUnorderedGroup_6.eContents().get(0);
		private final Keyword cTitleKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cTitleAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_6_0_1_0 = (RuleCall)cTitleAssignment_6_0_1.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cUnorderedGroup_6.eContents().get(1);
		private final Keyword cDescriptionKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cDescriptionValueStringParserRuleCall_6_1_1_0 = (RuleCall)cDescriptionAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cUnorderedGroup_6.eContents().get(2);
		private final Keyword cCategoryKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cCategoryAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cCategoryCategoryCrossReference_6_2_1_0 = (CrossReference)cCategoryAssignment_6_2_1.eContents().get(0);
		private final RuleCall cCategoryCategoryDOTTEDREFParserRuleCall_6_2_1_0_1 = (RuleCall)cCategoryCategoryCrossReference_6_2_1_0.eContents().get(1);
		private final Group cGroup_6_2_2 = (Group)cGroup_6_2.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_2_0 = (Keyword)cGroup_6_2_2.eContents().get(0);
		private final Assignment cCategoryAssignment_6_2_2_1 = (Assignment)cGroup_6_2_2.eContents().get(1);
		private final CrossReference cCategoryCategoryCrossReference_6_2_2_1_0 = (CrossReference)cCategoryAssignment_6_2_2_1.eContents().get(0);
		private final RuleCall cCategoryCategoryDOTTEDREFParserRuleCall_6_2_2_1_0_1 = (RuleCall)cCategoryCategoryCrossReference_6_2_2_1_0.eContents().get(1);
		
		//VerificationMethod:
		//	"verification" "method" name=ID "=" language=SupportedLanguage method=ValueString (("title" title=ValueString)? &
		//	("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
		//	category+=[Category|DOTTEDREF])*)?);
		public ParserRule getRule() { return rule; }

		//"verification" "method" name=ID "=" language=SupportedLanguage method=ValueString (("title" title=ValueString)? &
		//("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
		//category+=[Category|DOTTEDREF])*)?)
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"method"
		public Keyword getMethodKeyword_1() { return cMethodKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//language=SupportedLanguage
		public Assignment getLanguageAssignment_4() { return cLanguageAssignment_4; }

		//SupportedLanguage
		public RuleCall getLanguageSupportedLanguageParserRuleCall_4_0() { return cLanguageSupportedLanguageParserRuleCall_4_0; }

		//method=ValueString
		public Assignment getMethodAssignment_5() { return cMethodAssignment_5; }

		//ValueString
		public RuleCall getMethodValueStringParserRuleCall_5_0() { return cMethodValueStringParserRuleCall_5_0; }

		//("title" title=ValueString)? & ("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF]
		//("," category+=[Category|DOTTEDREF])*)?
		public UnorderedGroup getUnorderedGroup_6() { return cUnorderedGroup_6; }

		//("title" title=ValueString)?
		public Group getGroup_6_0() { return cGroup_6_0; }

		//"title"
		public Keyword getTitleKeyword_6_0_0() { return cTitleKeyword_6_0_0; }

		//title=ValueString
		public Assignment getTitleAssignment_6_0_1() { return cTitleAssignment_6_0_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_6_0_1_0() { return cTitleValueStringParserRuleCall_6_0_1_0; }

		//("description" description=ValueString)?
		public Group getGroup_6_1() { return cGroup_6_1; }

		//"description"
		public Keyword getDescriptionKeyword_6_1_0() { return cDescriptionKeyword_6_1_0; }

		//description=ValueString
		public Assignment getDescriptionAssignment_6_1_1() { return cDescriptionAssignment_6_1_1; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_6_1_1_0() { return cDescriptionValueStringParserRuleCall_6_1_1_0; }

		//("category" category+=[Category|DOTTEDREF] ("," category+=[Category|DOTTEDREF])*)?
		public Group getGroup_6_2() { return cGroup_6_2; }

		//"category"
		public Keyword getCategoryKeyword_6_2_0() { return cCategoryKeyword_6_2_0; }

		//category+=[Category|DOTTEDREF]
		public Assignment getCategoryAssignment_6_2_1() { return cCategoryAssignment_6_2_1; }

		//[Category|DOTTEDREF]
		public CrossReference getCategoryCategoryCrossReference_6_2_1_0() { return cCategoryCategoryCrossReference_6_2_1_0; }

		//DOTTEDREF
		public RuleCall getCategoryCategoryDOTTEDREFParserRuleCall_6_2_1_0_1() { return cCategoryCategoryDOTTEDREFParserRuleCall_6_2_1_0_1; }

		//("," category+=[Category|DOTTEDREF])*
		public Group getGroup_6_2_2() { return cGroup_6_2_2; }

		//","
		public Keyword getCommaKeyword_6_2_2_0() { return cCommaKeyword_6_2_2_0; }

		//category+=[Category|DOTTEDREF]
		public Assignment getCategoryAssignment_6_2_2_1() { return cCategoryAssignment_6_2_2_1; }

		//[Category|DOTTEDREF]
		public CrossReference getCategoryCategoryCrossReference_6_2_2_1_0() { return cCategoryCategoryCrossReference_6_2_2_1_0; }

		//DOTTEDREF
		public RuleCall getCategoryCategoryDOTTEDREFParserRuleCall_6_2_2_1_0_1() { return cCategoryCategoryDOTTEDREFParserRuleCall_6_2_2_1_0_1; }
	}

	public class SupportedLanguageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SupportedLanguage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLuteKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAgreeKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//SupportedLanguage:
		//	"lute" | "agree";
		public ParserRule getRule() { return rule; }

		//"lute" | "agree"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"lute"
		public Keyword getLuteKeyword_0() { return cLuteKeyword_0; }

		//"agree"
		public Keyword getAgreeKeyword_1() { return cAgreeKeyword_1; }
	}

	public class AssuranceCaseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssuranceCase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssuranceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCaseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cForKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTargetAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cTargetSystemInstanceCrossReference_4_0 = (CrossReference)cTargetAssignment_4.eContents().get(0);
		private final RuleCall cTargetSystemInstanceIDTerminalRuleCall_4_0_1 = (RuleCall)cTargetSystemInstanceCrossReference_4_0.eContents().get(1);
		private final Assignment cResultsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cResultsAssuranceResultParserRuleCall_5_0 = (RuleCall)cResultsAssignment_5.eContents().get(0);
		private final Keyword cEndKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		/// *
		// * Assurance Results
		// * / AssuranceCase:
		//	"assurance" "case" name=ID "for" target=[instance::SystemInstance] results+=AssuranceResult+ "end";
		public ParserRule getRule() { return rule; }

		//"assurance" "case" name=ID "for" target=[instance::SystemInstance] results+=AssuranceResult+ "end"
		public Group getGroup() { return cGroup; }

		//"assurance"
		public Keyword getAssuranceKeyword_0() { return cAssuranceKeyword_0; }

		//"case"
		public Keyword getCaseKeyword_1() { return cCaseKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"for"
		public Keyword getForKeyword_3() { return cForKeyword_3; }

		//target=[instance::SystemInstance]
		public Assignment getTargetAssignment_4() { return cTargetAssignment_4; }

		//[instance::SystemInstance]
		public CrossReference getTargetSystemInstanceCrossReference_4_0() { return cTargetSystemInstanceCrossReference_4_0; }

		//ID
		public RuleCall getTargetSystemInstanceIDTerminalRuleCall_4_0_1() { return cTargetSystemInstanceIDTerminalRuleCall_4_0_1; }

		//results+=AssuranceResult+
		public Assignment getResultsAssignment_5() { return cResultsAssignment_5; }

		//AssuranceResult
		public RuleCall getResultsAssuranceResultParserRuleCall_5_0() { return cResultsAssuranceResultParserRuleCall_5_0; }

		//"end"
		public Keyword getEndKeyword_6() { return cEndKeyword_6; }
	}

	public class VerificationResultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationResult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cResultKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVerificationActivityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cVerificationActivityVerificationActivityCrossReference_4_0 = (CrossReference)cVerificationActivityAssignment_4.eContents().get(0);
		private final RuleCall cVerificationActivityVerificationActivityIDTerminalRuleCall_4_0_1 = (RuleCall)cVerificationActivityVerificationActivityCrossReference_4_0.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_5 = (UnorderedGroup)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cUnorderedGroup_5.eContents().get(0);
		private final Keyword cOutputKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Assignment cTitleAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final RuleCall cTitleValueStringParserRuleCall_5_0_1_0 = (RuleCall)cTitleAssignment_5_0_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cUnorderedGroup_5.eContents().get(1);
		private final Keyword cLogfileKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cDescriptionValueStringParserRuleCall_5_1_1_0 = (RuleCall)cDescriptionAssignment_5_1_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cUnorderedGroup_5.eContents().get(2);
		private final Keyword cDateKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cMethodAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cMethodValueStringParserRuleCall_5_2_1_0 = (RuleCall)cMethodAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cUnorderedGroup_5.eContents().get(3);
		private final Keyword cStateKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cStateAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cStateVerificationResultStateEnumRuleCall_5_3_1_0 = (RuleCall)cStateAssignment_5_3_1.eContents().get(0);
		private final Group cGroup_5_4 = (Group)cUnorderedGroup_5.eContents().get(4);
		private final Keyword cStatusKeyword_5_4_0 = (Keyword)cGroup_5_4.eContents().get(0);
		private final Assignment cStatusAssignment_5_4_1 = (Assignment)cGroup_5_4.eContents().get(1);
		private final RuleCall cStatusVerificationResultStatusEnumRuleCall_5_4_1_0 = (RuleCall)cStatusAssignment_5_4_1.eContents().get(0);
		private final Assignment cAssumptionVerificationResultAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAssumptionVerificationResultVerificationResultParserRuleCall_6_0 = (RuleCall)cAssumptionVerificationResultAssignment_6.eContents().get(0);
		private final Keyword cEndKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//VerificationResult:
		//	"verification" "result" name=ID "of" verificationActivity=[VerificationActivity] (("output" title=ValueString)? &
		//	("logfile" description=ValueString)? & ("date" method=ValueString)? & ("state" state=VerificationResultState)? &
		//	("status" status=VerificationResultStatus)?) assumptionVerificationResult+=VerificationResult* "end";
		public ParserRule getRule() { return rule; }

		//"verification" "result" name=ID "of" verificationActivity=[VerificationActivity] (("output" title=ValueString)? &
		//("logfile" description=ValueString)? & ("date" method=ValueString)? & ("state" state=VerificationResultState)? &
		//("status" status=VerificationResultStatus)?) assumptionVerificationResult+=VerificationResult* "end"
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"result"
		public Keyword getResultKeyword_1() { return cResultKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"of"
		public Keyword getOfKeyword_3() { return cOfKeyword_3; }

		//verificationActivity=[VerificationActivity]
		public Assignment getVerificationActivityAssignment_4() { return cVerificationActivityAssignment_4; }

		//[VerificationActivity]
		public CrossReference getVerificationActivityVerificationActivityCrossReference_4_0() { return cVerificationActivityVerificationActivityCrossReference_4_0; }

		//ID
		public RuleCall getVerificationActivityVerificationActivityIDTerminalRuleCall_4_0_1() { return cVerificationActivityVerificationActivityIDTerminalRuleCall_4_0_1; }

		//("output" title=ValueString)? & ("logfile" description=ValueString)? & ("date" method=ValueString)? & ("state"
		//state=VerificationResultState)? & ("status" status=VerificationResultStatus)?
		public UnorderedGroup getUnorderedGroup_5() { return cUnorderedGroup_5; }

		//("output" title=ValueString)?
		public Group getGroup_5_0() { return cGroup_5_0; }

		//"output"
		public Keyword getOutputKeyword_5_0_0() { return cOutputKeyword_5_0_0; }

		//title=ValueString
		public Assignment getTitleAssignment_5_0_1() { return cTitleAssignment_5_0_1; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_5_0_1_0() { return cTitleValueStringParserRuleCall_5_0_1_0; }

		//("logfile" description=ValueString)?
		public Group getGroup_5_1() { return cGroup_5_1; }

		//"logfile"
		public Keyword getLogfileKeyword_5_1_0() { return cLogfileKeyword_5_1_0; }

		//description=ValueString
		public Assignment getDescriptionAssignment_5_1_1() { return cDescriptionAssignment_5_1_1; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_5_1_1_0() { return cDescriptionValueStringParserRuleCall_5_1_1_0; }

		//("date" method=ValueString)?
		public Group getGroup_5_2() { return cGroup_5_2; }

		//"date"
		public Keyword getDateKeyword_5_2_0() { return cDateKeyword_5_2_0; }

		//method=ValueString
		public Assignment getMethodAssignment_5_2_1() { return cMethodAssignment_5_2_1; }

		//ValueString
		public RuleCall getMethodValueStringParserRuleCall_5_2_1_0() { return cMethodValueStringParserRuleCall_5_2_1_0; }

		//("state" state=VerificationResultState)?
		public Group getGroup_5_3() { return cGroup_5_3; }

		//"state"
		public Keyword getStateKeyword_5_3_0() { return cStateKeyword_5_3_0; }

		//state=VerificationResultState
		public Assignment getStateAssignment_5_3_1() { return cStateAssignment_5_3_1; }

		//VerificationResultState
		public RuleCall getStateVerificationResultStateEnumRuleCall_5_3_1_0() { return cStateVerificationResultStateEnumRuleCall_5_3_1_0; }

		//("status" status=VerificationResultStatus)?
		public Group getGroup_5_4() { return cGroup_5_4; }

		//"status"
		public Keyword getStatusKeyword_5_4_0() { return cStatusKeyword_5_4_0; }

		//status=VerificationResultStatus
		public Assignment getStatusAssignment_5_4_1() { return cStatusAssignment_5_4_1; }

		//VerificationResultStatus
		public RuleCall getStatusVerificationResultStatusEnumRuleCall_5_4_1_0() { return cStatusVerificationResultStatusEnumRuleCall_5_4_1_0; }

		//assumptionVerificationResult+=VerificationResult*
		public Assignment getAssumptionVerificationResultAssignment_6() { return cAssumptionVerificationResultAssignment_6; }

		//VerificationResult
		public RuleCall getAssumptionVerificationResultVerificationResultParserRuleCall_6_0() { return cAssumptionVerificationResultVerificationResultParserRuleCall_6_0; }

		//"end"
		public Keyword getEndKeyword_7() { return cEndKeyword_7; }
	}

	public class AssuranceResultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssuranceResult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssuranceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cResultKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRequirementAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRequirementRequirementCrossReference_4_0 = (CrossReference)cRequirementAssignment_4.eContents().get(0);
		private final RuleCall cRequirementRequirementIDTerminalRuleCall_4_0_1 = (RuleCall)cRequirementRequirementCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPassKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPassCountAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPassCountINTTerminalRuleCall_5_1_0 = (RuleCall)cPassCountAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cFailKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cFailCountAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cFailCountINTTerminalRuleCall_6_1_0 = (RuleCall)cFailCountAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cNeutralKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cNeutralCountAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cNeutralCountINTTerminalRuleCall_7_1_0 = (RuleCall)cNeutralCountAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUnknownKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUnknownCountAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUnknownCountINTTerminalRuleCall_8_1_0 = (RuleCall)cUnknownCountAssignment_8_1.eContents().get(0);
		private final Assignment cSubClaimResultAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSubClaimResultAssuranceResultParserRuleCall_9_0 = (RuleCall)cSubClaimResultAssignment_9.eContents().get(0);
		private final Assignment cSubVAResultAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cSubVAResultVerificationResultParserRuleCall_10_0 = (RuleCall)cSubVAResultAssignment_10.eContents().get(0);
		private final Keyword cEndKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//AssuranceResult:
		//	"assurance" "result" name=ID "of" requirement=[Requirement] ("pass" passCount=INT) ("fail" failCount=INT) ("neutral"
		//	neutralCount=INT) ("unknown" unknownCount=INT) subClaimResult+=AssuranceResult* subVAResult+=VerificationResult*
		//	"end";
		public ParserRule getRule() { return rule; }

		//"assurance" "result" name=ID "of" requirement=[Requirement] ("pass" passCount=INT) ("fail" failCount=INT) ("neutral"
		//neutralCount=INT) ("unknown" unknownCount=INT) subClaimResult+=AssuranceResult* subVAResult+=VerificationResult* "end"
		public Group getGroup() { return cGroup; }

		//"assurance"
		public Keyword getAssuranceKeyword_0() { return cAssuranceKeyword_0; }

		//"result"
		public Keyword getResultKeyword_1() { return cResultKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"of"
		public Keyword getOfKeyword_3() { return cOfKeyword_3; }

		//requirement=[Requirement]
		public Assignment getRequirementAssignment_4() { return cRequirementAssignment_4; }

		//[Requirement]
		public CrossReference getRequirementRequirementCrossReference_4_0() { return cRequirementRequirementCrossReference_4_0; }

		//ID
		public RuleCall getRequirementRequirementIDTerminalRuleCall_4_0_1() { return cRequirementRequirementIDTerminalRuleCall_4_0_1; }

		//"pass" passCount=INT
		public Group getGroup_5() { return cGroup_5; }

		//"pass"
		public Keyword getPassKeyword_5_0() { return cPassKeyword_5_0; }

		//passCount=INT
		public Assignment getPassCountAssignment_5_1() { return cPassCountAssignment_5_1; }

		//INT
		public RuleCall getPassCountINTTerminalRuleCall_5_1_0() { return cPassCountINTTerminalRuleCall_5_1_0; }

		//"fail" failCount=INT
		public Group getGroup_6() { return cGroup_6; }

		//"fail"
		public Keyword getFailKeyword_6_0() { return cFailKeyword_6_0; }

		//failCount=INT
		public Assignment getFailCountAssignment_6_1() { return cFailCountAssignment_6_1; }

		//INT
		public RuleCall getFailCountINTTerminalRuleCall_6_1_0() { return cFailCountINTTerminalRuleCall_6_1_0; }

		//"neutral" neutralCount=INT
		public Group getGroup_7() { return cGroup_7; }

		//"neutral"
		public Keyword getNeutralKeyword_7_0() { return cNeutralKeyword_7_0; }

		//neutralCount=INT
		public Assignment getNeutralCountAssignment_7_1() { return cNeutralCountAssignment_7_1; }

		//INT
		public RuleCall getNeutralCountINTTerminalRuleCall_7_1_0() { return cNeutralCountINTTerminalRuleCall_7_1_0; }

		//"unknown" unknownCount=INT
		public Group getGroup_8() { return cGroup_8; }

		//"unknown"
		public Keyword getUnknownKeyword_8_0() { return cUnknownKeyword_8_0; }

		//unknownCount=INT
		public Assignment getUnknownCountAssignment_8_1() { return cUnknownCountAssignment_8_1; }

		//INT
		public RuleCall getUnknownCountINTTerminalRuleCall_8_1_0() { return cUnknownCountINTTerminalRuleCall_8_1_0; }

		//subClaimResult+=AssuranceResult*
		public Assignment getSubClaimResultAssignment_9() { return cSubClaimResultAssignment_9; }

		//AssuranceResult
		public RuleCall getSubClaimResultAssuranceResultParserRuleCall_9_0() { return cSubClaimResultAssuranceResultParserRuleCall_9_0; }

		//subVAResult+=VerificationResult*
		public Assignment getSubVAResultAssignment_10() { return cSubVAResultAssignment_10; }

		//VerificationResult
		public RuleCall getSubVAResultVerificationResultParserRuleCall_10_0() { return cSubVAResultVerificationResultParserRuleCall_10_0; }

		//"end"
		public Keyword getEndKeyword_11() { return cEndKeyword_11; }
	}

	public class RSALResultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RSALResult");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cVerificationResultParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssuranceResultParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//RSALResult:
		//	VerificationResult | AssuranceResult;
		public ParserRule getRule() { return rule; }

		//VerificationResult | AssuranceResult
		public Alternatives getAlternatives() { return cAlternatives; }

		//VerificationResult
		public RuleCall getVerificationResultParserRuleCall_0() { return cVerificationResultParserRuleCall_0; }

		//AssuranceResult
		public RuleCall getAssuranceResultParserRuleCall_1() { return cAssuranceResultParserRuleCall_1; }
	}

	public class QPREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QPREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		////	// classifier reference
		////QCLREF:
		////	(ID '::')* ID ('.' ID)?;
		//// package reference
		//QPREF:
		//	ID ("::" ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("::" ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("::" ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"::"
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QNEREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QNEREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//// named element reference or other multi-dot path with or without qualifier
		//QNEREF:
		//	(ID "::")* ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//(ID "::")* ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//(ID "::")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//("." ID)*
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }
	}

	public class QDOTTEDPAREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QDOTTEDPAREF");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cQNEREFParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cPAREFParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cPAREFParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////  dotted path property ref or property ref
		//QDOTTEDPAREF:
		//	QNEREF PAREF? | PAREF;
		public ParserRule getRule() { return rule; }

		//QNEREF PAREF? | PAREF
		public Alternatives getAlternatives() { return cAlternatives; }

		//QNEREF PAREF?
		public Group getGroup_0() { return cGroup_0; }

		//QNEREF
		public RuleCall getQNEREFParserRuleCall_0_0() { return cQNEREFParserRuleCall_0_0; }

		//PAREF?
		public RuleCall getPAREFParserRuleCall_0_1() { return cPAREFParserRuleCall_0_1; }

		//PAREF
		public RuleCall getPAREFParserRuleCall_1() { return cPAREFParserRuleCall_1; }
	}

	public class DOTTEDREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DOTTEDREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//// dotted path as relative reference
		//DOTTEDREF:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class CATREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CATREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//// dotted path as relative reference
		//CATREF:
		//	ID "." ID;
		public ParserRule getRule() { return rule; }

		//ID "." ID
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_2() { return cIDTerminalRuleCall_2; }
	}

	public class PAREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PAREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//// reference to property (association)	
		//PAREF:
		//	"#" ID ("::" ID)?;
		public ParserRule getRule() { return rule; }

		//"#" ID ("::" ID)?
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//("::" ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"::"
		public Keyword getColonColonKeyword_2_0() { return cColonColonKeyword_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }
	}

	public class DOCPATHElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DOCPATH");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cSolidusKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cIDTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//DOCPATH:
		//	(ID "/")* ID "." ID;
		public ParserRule getRule() { return rule; }

		//(ID "/")* ID "." ID
		public Group getGroup() { return cGroup; }

		//(ID "/")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"/"
		public Keyword getSolidusKeyword_0_1() { return cSolidusKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//"."
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }

		//ID
		public RuleCall getIDTerminalRuleCall_3() { return cIDTerminalRuleCall_3; }
	}

	public class DOCFRAGMENTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DOCFRAGMENT");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//DOCFRAGMENT:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	
	
	public class VerificationResultStateElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationResultState");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSCHEDULEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSCHEDULEDScheduledKeyword_0_0 = (Keyword)cSCHEDULEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPLETEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPLETEDCompletedKeyword_1_0 = (Keyword)cCOMPLETEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINPROGRESSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINPROGRESSInprogressKeyword_2_0 = (Keyword)cINPROGRESSEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum VerificationResultState:
		//	SCHEDULED="scheduled" | COMPLETED="completed" | INPROGRESS="inprogress";
		public EnumRule getRule() { return rule; }

		//SCHEDULED="scheduled" | COMPLETED="completed" | INPROGRESS="inprogress"
		public Alternatives getAlternatives() { return cAlternatives; }

		//SCHEDULED="scheduled"
		public EnumLiteralDeclaration getSCHEDULEDEnumLiteralDeclaration_0() { return cSCHEDULEDEnumLiteralDeclaration_0; }

		//"scheduled"
		public Keyword getSCHEDULEDScheduledKeyword_0_0() { return cSCHEDULEDScheduledKeyword_0_0; }

		//COMPLETED="completed"
		public EnumLiteralDeclaration getCOMPLETEDEnumLiteralDeclaration_1() { return cCOMPLETEDEnumLiteralDeclaration_1; }

		//"completed"
		public Keyword getCOMPLETEDCompletedKeyword_1_0() { return cCOMPLETEDCompletedKeyword_1_0; }

		//INPROGRESS="inprogress"
		public EnumLiteralDeclaration getINPROGRESSEnumLiteralDeclaration_2() { return cINPROGRESSEnumLiteralDeclaration_2; }

		//"inprogress"
		public Keyword getINPROGRESSInprogressKeyword_2_0() { return cINPROGRESSInprogressKeyword_2_0; }
	}

	public class VerificationResultStatusElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationResultStatus");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPASSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPASSPassKeyword_0_0 = (Keyword)cPASSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFAILEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFAILFailKeyword_1_0 = (Keyword)cFAILEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNEUTRALEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNEUTRALNeutralKeyword_2_0 = (Keyword)cNEUTRALEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cUNKNOWNEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cUNKNOWNUnknownKeyword_3_0 = (Keyword)cUNKNOWNEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum VerificationResultStatus:
		//	PASS="pass" | FAIL="fail" | NEUTRAL="neutral" | UNKNOWN="unknown";
		public EnumRule getRule() { return rule; }

		//PASS="pass" | FAIL="fail" | NEUTRAL="neutral" | UNKNOWN="unknown"
		public Alternatives getAlternatives() { return cAlternatives; }

		//PASS="pass"
		public EnumLiteralDeclaration getPASSEnumLiteralDeclaration_0() { return cPASSEnumLiteralDeclaration_0; }

		//"pass"
		public Keyword getPASSPassKeyword_0_0() { return cPASSPassKeyword_0_0; }

		//FAIL="fail"
		public EnumLiteralDeclaration getFAILEnumLiteralDeclaration_1() { return cFAILEnumLiteralDeclaration_1; }

		//"fail"
		public Keyword getFAILFailKeyword_1_0() { return cFAILFailKeyword_1_0; }

		//NEUTRAL="neutral"
		public EnumLiteralDeclaration getNEUTRALEnumLiteralDeclaration_2() { return cNEUTRALEnumLiteralDeclaration_2; }

		//"neutral"
		public Keyword getNEUTRALNeutralKeyword_2_0() { return cNEUTRALNeutralKeyword_2_0; }

		//UNKNOWN="unknown"
		public EnumLiteralDeclaration getUNKNOWNEnumLiteralDeclaration_3() { return cUNKNOWNEnumLiteralDeclaration_3; }

		//"unknown"
		public Keyword getUNKNOWNUnknownKeyword_3_0() { return cUNKNOWNUnknownKeyword_3_0; }
	}
	
	private final AlisaModelElements pAlisaModel;
	private final ContractualElementElements pContractualElement;
	private final RSALContainerElements pRSALContainer;
	private final OrganizationElements pOrganization;
	private final DescriptionElements pDescription;
	private final DescriptionElementElements pDescriptionElement;
	private final RSALVariableElements pRSALVariable;
	private final GoalElements pGoal;
	private final RequirementElements pRequirement;
	private final VerificationAssumptionElements pVerificationAssumption;
	private final HazardElements pHazard;
	private final ExternalDocumentElements pExternalDocument;
	private final CategoriesElements pCategories;
	private final RequirementCategoriesElements pRequirementCategories;
	private final VerificationCategoriesElements pVerificationCategories;
	private final HazardCategoriesElements pHazardCategories;
	private final CategoryElements pCategory;
	private final RequirementCategoryElements pRequirementCategory;
	private final VerificationCategoryElements pVerificationCategory;
	private final HazardCategoryElements pHazardCategory;
	private final ValueStringElements pValueString;
	private final StakeholderElements pStakeholder;
	private final AssuranceArgumentElements pAssuranceArgument;
	private final ArgumentExprElements pArgumentExpr;
	private final ImpliesExprElements pImpliesExpr;
	private final OrExprElements pOrExpr;
	private final AndExprElements pAndExpr;
	private final AtomicExprElements pAtomicExpr;
	private final ArgumentReferenceElements pArgumentReference;
	private final VerificationActivityElements pVerificationActivity;
	private final VerificationMethodElements pVerificationMethod;
	private final SupportedLanguageElements pSupportedLanguage;
	private final AssuranceCaseElements pAssuranceCase;
	private final VerificationResultElements pVerificationResult;
	private final AssuranceResultElements pAssuranceResult;
	private final RSALResultElements pRSALResult;
	private final VerificationResultStateElements unknownRuleVerificationResultState;
	private final VerificationResultStatusElements unknownRuleVerificationResultStatus;
	private final QPREFElements pQPREF;
	private final QNEREFElements pQNEREF;
	private final QDOTTEDPAREFElements pQDOTTEDPAREF;
	private final DOTTEDREFElements pDOTTEDREF;
	private final CATREFElements pCATREF;
	private final PAREFElements pPAREF;
	private final DOCPATHElements pDOCPATH;
	private final DOCFRAGMENTElements pDOCFRAGMENT;
	private final TerminalRule tSTRING;
	private final TerminalRule tID;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AlisaGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAlisaModel = new AlisaModelElements();
		this.pContractualElement = new ContractualElementElements();
		this.pRSALContainer = new RSALContainerElements();
		this.pOrganization = new OrganizationElements();
		this.pDescription = new DescriptionElements();
		this.pDescriptionElement = new DescriptionElementElements();
		this.pRSALVariable = new RSALVariableElements();
		this.pGoal = new GoalElements();
		this.pRequirement = new RequirementElements();
		this.pVerificationAssumption = new VerificationAssumptionElements();
		this.pHazard = new HazardElements();
		this.pExternalDocument = new ExternalDocumentElements();
		this.pCategories = new CategoriesElements();
		this.pRequirementCategories = new RequirementCategoriesElements();
		this.pVerificationCategories = new VerificationCategoriesElements();
		this.pHazardCategories = new HazardCategoriesElements();
		this.pCategory = new CategoryElements();
		this.pRequirementCategory = new RequirementCategoryElements();
		this.pVerificationCategory = new VerificationCategoryElements();
		this.pHazardCategory = new HazardCategoryElements();
		this.pValueString = new ValueStringElements();
		this.pStakeholder = new StakeholderElements();
		this.pAssuranceArgument = new AssuranceArgumentElements();
		this.pArgumentExpr = new ArgumentExprElements();
		this.pImpliesExpr = new ImpliesExprElements();
		this.pOrExpr = new OrExprElements();
		this.pAndExpr = new AndExprElements();
		this.pAtomicExpr = new AtomicExprElements();
		this.pArgumentReference = new ArgumentReferenceElements();
		this.pVerificationActivity = new VerificationActivityElements();
		this.pVerificationMethod = new VerificationMethodElements();
		this.pSupportedLanguage = new SupportedLanguageElements();
		this.pAssuranceCase = new AssuranceCaseElements();
		this.pVerificationResult = new VerificationResultElements();
		this.pAssuranceResult = new AssuranceResultElements();
		this.pRSALResult = new RSALResultElements();
		this.unknownRuleVerificationResultState = new VerificationResultStateElements();
		this.unknownRuleVerificationResultStatus = new VerificationResultStatusElements();
		this.pQPREF = new QPREFElements();
		this.pQNEREF = new QNEREFElements();
		this.pQDOTTEDPAREF = new QDOTTEDPAREFElements();
		this.pDOTTEDREF = new DOTTEDREFElements();
		this.pCATREF = new CATREFElements();
		this.pPAREF = new PAREFElements();
		this.pDOCPATH = new DOCPATHElements();
		this.pDOCFRAGMENT = new DOCFRAGMENTElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("edu.cmu.sei.alisa.Alisa".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AlisaModel:
	//	RSALContainer | Organization | RequirementCategories | VerificationCategories | AssuranceCase;
	public AlisaModelElements getAlisaModelAccess() {
		return pAlisaModel;
	}
	
	public ParserRule getAlisaModelRule() {
		return getAlisaModelAccess().getRule();
	}

	//ContractualElement:
	//	Goal | Requirement | VerificationAssumption;
	public ContractualElementElements getContractualElementAccess() {
		return pContractualElement;
	}
	
	public ParserRule getContractualElementRule() {
		return getContractualElementAccess().getRule();
	}

	//RSALContainer:
	//	"container" name=ID ("for" target=[aadl2::NamedElement|QNEREF])? content+=(Goal | Requirement | VerificationActivity
	//	| RSALContainer) ("issues" issue+=ValueString ("," issue+=ValueString)*)? "end";
	public RSALContainerElements getRSALContainerAccess() {
		return pRSALContainer;
	}
	
	public ParserRule getRSALContainerRule() {
		return getRSALContainerAccess().getRule();
	}

	//Organization:
	//	"organization" name=ID stakeholder+=Stakeholder+ "end";
	public OrganizationElements getOrganizationAccess() {
		return pOrganization;
	}
	
	public ParserRule getOrganizationRule() {
		return getOrganizationAccess().getRule();
	}

	//Description:
	//	description+=DescriptionElement+;
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}

	//DescriptionElement:
	//	text=STRING | ref=[RSALVariable];
	public DescriptionElementElements getDescriptionElementAccess() {
		return pDescriptionElement;
	}
	
	public ParserRule getDescriptionElementRule() {
		return getDescriptionElementAccess().getRule();
	}

	//RSALVariable:
	//	"val" name=ID "=" value=ValueString;
	public RSALVariableElements getRSALVariableAccess() {
		return pRSALVariable;
	}
	
	public ParserRule getRSALVariableRule() {
		return getRSALVariableAccess().getRule();
	}

	//Goal:
	//	"goal" name=ID (("for" target=[aadl2::NamedElement|QNEREF])? & ("category" category+=[RequirementCategory|CATREF]
	//	("," category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)? & ("description"
	//	description=Description)? & ("assertion" assert=ValueString)? & ("rationale" rationale=ValueString)? & ("issues"
	//	issue+=ValueString ("," issue+=ValueString)*)? & ("refined" "to" refinesReference+=[Goal|DOTTEDREF] (","
	//	refinesReference+=[Goal|DOTTEDREF])*)? & subgoal+=Goal* & ("decomposed" "to" decomposesReference+=[Goal|DOTTEDREF]
	//	("," decomposesReference+=[Goal|DOTTEDREF])*)? & ("evolves" evolvesReference+=[Goal|DOTTEDREF] (","
	//	evolvesReference+=[Goal|DOTTEDREF])*)? & ("conflicts" conflictsReference+=[Goal|DOTTEDREF] (","
	//	conflictsReference+=[Goal|DOTTEDREF])*)? & ("stakeholder" stakeholderReference+=[Stakeholder|DOTTEDREF] (","
	//	stakeholderReference+=[Stakeholder|DOTTEDREF])*)? & ("see" "goal" stakeholderRequirementReference+=[Goal|DOTTEDREF]
	//	("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see" "requirement"
	//	systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
	//	systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & ("see" "document" docReference+=ExternalDocument
	//	("," docReference+=ExternalDocument)*)? & ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?)
	//	"end";
	public GoalElements getGoalAccess() {
		return pGoal;
	}
	
	public ParserRule getGoalRule() {
		return getGoalAccess().getRule();
	}

	//Requirement:
	//	"requirement" name=ID (("for" target=[aadl2::NamedElement|QNEREF])? // predicate expression 
	//	// hazardReference+=[aadl2::NamedElement|QNEREF]
	//	& ("category" category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title"
	//	title=ValueString)? & ("description" description=Description)? & ("assertion" assert=ValueString)? & ("rationale"
	//	rationale=ValueString)? & reqValue+=RSALVariable* & ("issues" issue+=ValueString ("," issue+=ValueString)*)? & ("see"
	//	"goal" goalReference+=[Goal] ("," goalReference+=[Goal])*)? & ("see" "hazard" hazardReference+=QNEREF (","
	//	hazardReference+=QNEREF)*)? & ("refines" refinesReference+=[Requirement|DOTTEDREF] (","
	//	refinesReference+=[Requirement|DOTTEDREF])*)? & subrequirement+=Requirement* & ("decomposes"
	//	decomposesReference+=[Requirement|DOTTEDREF] ("," decomposesReference+=[Requirement|DOTTEDREF])*)? & ("evolves"
	//	evolvesReference+=[Requirement|DOTTEDREF] ("," evolvesReference+=[Requirement|DOTTEDREF])*)? & ("see" "goal"
	//	stakeholderRequirementReference+=[Goal|DOTTEDREF] ("," stakeholderRequirementReference+=[Goal|DOTTEDREF])*)? & ("see"
	//	"requirement" systemRequirementReference+=[ContractualElement|DOTTEDREF] (","
	//	systemRequirementReference+=[ContractualElement|DOTTEDREF])*)? & verifiedBy+=VerificationActivity* &
	//	argument=AssuranceArgument? & ("see" "document" docReference+=ExternalDocument (","
	//	docReference+=ExternalDocument)*)? & ("see" modelReference+=QDOTTEDPAREF ("," modelReference+=QDOTTEDPAREF)*)?)
	//	"end";
	public RequirementElements getRequirementAccess() {
		return pRequirement;
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}

	//VerificationAssumption:
	//	"verification" "assumption" name=ID (("for" target=[VerificationActivity|DOTTEDREF])? & ("category"
	//	category+=[RequirementCategory|CATREF] ("," category+=[RequirementCategory|CATREF])*)? & ("title" title=ValueString)?
	//	& ("description" description=Description)? & ("asserted" "by" assert=[Requirement|DOTTEDREF])? &
	//	verifiedBy+=VerificationActivity* & argument=AssuranceArgument? & ("rationale" rationale=ValueString)? & ("issues"
	//	issue+=ValueString ("," issue+=ValueString)*)?) "end";
	public VerificationAssumptionElements getVerificationAssumptionAccess() {
		return pVerificationAssumption;
	}
	
	public ParserRule getVerificationAssumptionRule() {
		return getVerificationAssumptionAccess().getRule();
	}

	//Hazard:
	//	"hazard" name=ID (("for" target=[VerificationActivity|DOTTEDREF])? & ("category" category+=[HazardCategory|CATREF]
	//	("," category+=[HazardCategory|CATREF])*)? & ("title" title=ValueString)? & ("description" description=ValueString)?
	//	& ("mitigated" "by" mitigated=[Requirement|DOTTEDREF])? & ("rationale" rationale=ValueString)? & ("issues"
	//	issue+=ValueString ("," issue+=ValueString)*)?) "end";
	public HazardElements getHazardAccess() {
		return pHazard;
	}
	
	public ParserRule getHazardRule() {
		return getHazardAccess().getRule();
	}

	//ExternalDocument:
	//	docReference=DOCPATH ("#" docFragment=DOCFRAGMENT)?;
	public ExternalDocumentElements getExternalDocumentAccess() {
		return pExternalDocument;
	}
	
	public ParserRule getExternalDocumentRule() {
		return getExternalDocumentAccess().getRule();
	}

	//Categories:
	//	RequirementCategories | VerificationCategories | HazardCategories;
	public CategoriesElements getCategoriesAccess() {
		return pCategories;
	}
	
	public ParserRule getCategoriesRule() {
		return getCategoriesAccess().getRule();
	}

	//RequirementCategories:
	//	"requirement" "categories" name=ID category+=RequirementCategory+ "end";
	public RequirementCategoriesElements getRequirementCategoriesAccess() {
		return pRequirementCategories;
	}
	
	public ParserRule getRequirementCategoriesRule() {
		return getRequirementCategoriesAccess().getRule();
	}

	//VerificationCategories:
	//	"verification" "categories" name=ID category+=VerificationCategory+ "end";
	public VerificationCategoriesElements getVerificationCategoriesAccess() {
		return pVerificationCategories;
	}
	
	public ParserRule getVerificationCategoriesRule() {
		return getVerificationCategoriesAccess().getRule();
	}

	//HazardCategories:
	//	"hazard" "categories" name=ID category+=HazardCategory+ "end";
	public HazardCategoriesElements getHazardCategoriesAccess() {
		return pHazardCategories;
	}
	
	public ParserRule getHazardCategoriesRule() {
		return getHazardCategoriesAccess().getRule();
	}

	//Category:
	//	RequirementCategory | VerificationCategory | HazardCategory;
	public CategoryElements getCategoryAccess() {
		return pCategory;
	}
	
	public ParserRule getCategoryRule() {
		return getCategoryAccess().getRule();
	}

	//RequirementCategory:
	//	"category" name=ID ("extends" extends=[RequirementCategory|DOTTEDREF])?;
	public RequirementCategoryElements getRequirementCategoryAccess() {
		return pRequirementCategory;
	}
	
	public ParserRule getRequirementCategoryRule() {
		return getRequirementCategoryAccess().getRule();
	}

	//VerificationCategory:
	//	"category" name=ID ("extends" extends=[VerificationCategory|DOTTEDREF])?;
	public VerificationCategoryElements getVerificationCategoryAccess() {
		return pVerificationCategory;
	}
	
	public ParserRule getVerificationCategoryRule() {
		return getVerificationCategoryAccess().getRule();
	}

	//HazardCategory:
	//	"category" name=ID ("extends" extends=[HazardCategory|DOTTEDREF])?;
	public HazardCategoryElements getHazardCategoryAccess() {
		return pHazardCategory;
	}
	
	public ParserRule getHazardCategoryRule() {
		return getHazardCategoryAccess().getRule();
	}

	//ValueString: // remove quotes from string in ValueConverter 
	//	STRING;
	public ValueStringElements getValueStringAccess() {
		return pValueString;
	}
	
	public ParserRule getValueStringRule() {
		return getValueStringAccess().getRule();
	}

	/// *
	// * Stakeholder
	// * / Stakeholder:
	//	"stakeholder" name=ID (("title" title=ValueString)? & ("description" description=ValueString)? & ("role"
	//	role=ValueString)? & ("email" email=ValueString)? & ("phone" phone=ValueString)?) "end";
	public StakeholderElements getStakeholderAccess() {
		return pStakeholder;
	}
	
	public ParserRule getStakeholderRule() {
		return getStakeholderAccess().getRule();
	}

	//AssuranceArgument:
	//	"argument" expression=ArgumentExpr ";" ("rationale" rationale=ValueString)? "end";
	public AssuranceArgumentElements getAssuranceArgumentAccess() {
		return pAssuranceArgument;
	}
	
	public ParserRule getAssuranceArgumentRule() {
		return getAssuranceArgumentAccess().getRule();
	}

	//ArgumentExpr:
	//	ImpliesExpr;
	public ArgumentExprElements getArgumentExprAccess() {
		return pArgumentExpr;
	}
	
	public ParserRule getArgumentExprRule() {
		return getArgumentExprAccess().getRule();
	}

	//ImpliesExpr returns ArgumentExpr:
	//	OrExpr (=> ({BinaryExpr.left=current} op="=>") right=ImpliesExpr)?;
	public ImpliesExprElements getImpliesExprAccess() {
		return pImpliesExpr;
	}
	
	public ParserRule getImpliesExprRule() {
		return getImpliesExprAccess().getRule();
	}

	//OrExpr returns ArgumentExpr:
	//	AndExpr (=> ({BinaryExpr.left=current} op="or") right=AndExpr)*;
	public OrExprElements getOrExprAccess() {
		return pOrExpr;
	}
	
	public ParserRule getOrExprRule() {
		return getOrExprAccess().getRule();
	}

	//AndExpr returns ArgumentExpr:
	//	AtomicExpr (=> ({BinaryExpr.left=current} op="and") right=AtomicExpr)*;
	public AndExprElements getAndExprAccess() {
		return pAndExpr;
	}
	
	public ParserRule getAndExprRule() {
		return getAndExprAccess().getRule();
	}

	//AtomicExpr returns ArgumentExpr:
	//	{RefExpr} id=ArgumentReference | "(" ArgumentExpr ")";
	public AtomicExprElements getAtomicExprAccess() {
		return pAtomicExpr;
	}
	
	public ParserRule getAtomicExprRule() {
		return getAtomicExprAccess().getRule();
	}

	//ArgumentReference:
	//	reference=[VerificationActivity|DOTTEDREF] ("*" weight=INT)?;
	public ArgumentReferenceElements getArgumentReferenceAccess() {
		return pArgumentReference;
	}
	
	public ParserRule getArgumentReferenceRule() {
		return getArgumentReferenceAccess().getRule();
	}

	/// *
	// * Verification Activity
	// * / VerificationActivity:
	//	"verification" "activity" name=ID (("title" title=ValueString)? //	('parameters'  verificationParameters+=([ElementReference])*)?
	//	& ("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
	//	category+=[Category|DOTTEDREF])*)? & ("method" method=VerificationMethod)? & assumption+=VerificationAssumption*)
	//	"end";
	public VerificationActivityElements getVerificationActivityAccess() {
		return pVerificationActivity;
	}
	
	public ParserRule getVerificationActivityRule() {
		return getVerificationActivityAccess().getRule();
	}

	//VerificationMethod:
	//	"verification" "method" name=ID "=" language=SupportedLanguage method=ValueString (("title" title=ValueString)? &
	//	("description" description=ValueString)? & ("category" category+=[Category|DOTTEDREF] (","
	//	category+=[Category|DOTTEDREF])*)?);
	public VerificationMethodElements getVerificationMethodAccess() {
		return pVerificationMethod;
	}
	
	public ParserRule getVerificationMethodRule() {
		return getVerificationMethodAccess().getRule();
	}

	//SupportedLanguage:
	//	"lute" | "agree";
	public SupportedLanguageElements getSupportedLanguageAccess() {
		return pSupportedLanguage;
	}
	
	public ParserRule getSupportedLanguageRule() {
		return getSupportedLanguageAccess().getRule();
	}

	/// *
	// * Assurance Results
	// * / AssuranceCase:
	//	"assurance" "case" name=ID "for" target=[instance::SystemInstance] results+=AssuranceResult+ "end";
	public AssuranceCaseElements getAssuranceCaseAccess() {
		return pAssuranceCase;
	}
	
	public ParserRule getAssuranceCaseRule() {
		return getAssuranceCaseAccess().getRule();
	}

	//VerificationResult:
	//	"verification" "result" name=ID "of" verificationActivity=[VerificationActivity] (("output" title=ValueString)? &
	//	("logfile" description=ValueString)? & ("date" method=ValueString)? & ("state" state=VerificationResultState)? &
	//	("status" status=VerificationResultStatus)?) assumptionVerificationResult+=VerificationResult* "end";
	public VerificationResultElements getVerificationResultAccess() {
		return pVerificationResult;
	}
	
	public ParserRule getVerificationResultRule() {
		return getVerificationResultAccess().getRule();
	}

	//AssuranceResult:
	//	"assurance" "result" name=ID "of" requirement=[Requirement] ("pass" passCount=INT) ("fail" failCount=INT) ("neutral"
	//	neutralCount=INT) ("unknown" unknownCount=INT) subClaimResult+=AssuranceResult* subVAResult+=VerificationResult*
	//	"end";
	public AssuranceResultElements getAssuranceResultAccess() {
		return pAssuranceResult;
	}
	
	public ParserRule getAssuranceResultRule() {
		return getAssuranceResultAccess().getRule();
	}

	//RSALResult:
	//	VerificationResult | AssuranceResult;
	public RSALResultElements getRSALResultAccess() {
		return pRSALResult;
	}
	
	public ParserRule getRSALResultRule() {
		return getRSALResultAccess().getRule();
	}

	//enum VerificationResultState:
	//	SCHEDULED="scheduled" | COMPLETED="completed" | INPROGRESS="inprogress";
	public VerificationResultStateElements getVerificationResultStateAccess() {
		return unknownRuleVerificationResultState;
	}
	
	public EnumRule getVerificationResultStateRule() {
		return getVerificationResultStateAccess().getRule();
	}

	//enum VerificationResultStatus:
	//	PASS="pass" | FAIL="fail" | NEUTRAL="neutral" | UNKNOWN="unknown";
	public VerificationResultStatusElements getVerificationResultStatusAccess() {
		return unknownRuleVerificationResultStatus;
	}
	
	public EnumRule getVerificationResultStatusRule() {
		return getVerificationResultStatusAccess().getRule();
	}

	////	// classifier reference
	////QCLREF:
	////	(ID '::')* ID ('.' ID)?;
	//// package reference
	//QPREF:
	//	ID ("::" ID)*;
	public QPREFElements getQPREFAccess() {
		return pQPREF;
	}
	
	public ParserRule getQPREFRule() {
		return getQPREFAccess().getRule();
	}

	//// named element reference or other multi-dot path with or without qualifier
	//QNEREF:
	//	(ID "::")* ID ("." ID)*;
	public QNEREFElements getQNEREFAccess() {
		return pQNEREF;
	}
	
	public ParserRule getQNEREFRule() {
		return getQNEREFAccess().getRule();
	}

	////  dotted path property ref or property ref
	//QDOTTEDPAREF:
	//	QNEREF PAREF? | PAREF;
	public QDOTTEDPAREFElements getQDOTTEDPAREFAccess() {
		return pQDOTTEDPAREF;
	}
	
	public ParserRule getQDOTTEDPAREFRule() {
		return getQDOTTEDPAREFAccess().getRule();
	}

	//// dotted path as relative reference
	//DOTTEDREF:
	//	ID ("." ID)*;
	public DOTTEDREFElements getDOTTEDREFAccess() {
		return pDOTTEDREF;
	}
	
	public ParserRule getDOTTEDREFRule() {
		return getDOTTEDREFAccess().getRule();
	}

	//// dotted path as relative reference
	//CATREF:
	//	ID "." ID;
	public CATREFElements getCATREFAccess() {
		return pCATREF;
	}
	
	public ParserRule getCATREFRule() {
		return getCATREFAccess().getRule();
	}

	//// reference to property (association)	
	//PAREF:
	//	"#" ID ("::" ID)?;
	public PAREFElements getPAREFAccess() {
		return pPAREF;
	}
	
	public ParserRule getPAREFRule() {
		return getPAREFAccess().getRule();
	}

	//DOCPATH:
	//	(ID "/")* ID "." ID;
	public DOCPATHElements getDOCPATHAccess() {
		return pDOCPATH;
	}
	
	public ParserRule getDOCPATHRule() {
		return getDOCPATHAccess().getRule();
	}

	//DOCFRAGMENT:
	//	ID ("." ID)*;
	public DOCFRAGMENTElements getDOCFRAGMENTAccess() {
		return pDOCFRAGMENT;
	}
	
	public ParserRule getDOCFRAGMENTRule() {
		return getDOCFRAGMENTAccess().getRule();
	}

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	////terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	//terminal ID:
	//	("a".."z" | "A".."Z") ("_"? ("a".."z" | "A".."Z" | "0".."9"))*;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return tWS;
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
