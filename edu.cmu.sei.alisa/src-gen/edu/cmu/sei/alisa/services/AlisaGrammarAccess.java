/*
* generated by Xtext
*/
package edu.cmu.sei.alisa.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AlisaGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AlisaModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AlisaModel");
		private final Assignment cContentAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cContentAlternatives_0 = (Alternatives)cContentAssignment.eContents().get(0);
		private final RuleCall cContentStakeholderParserRuleCall_0_0 = (RuleCall)cContentAlternatives_0.eContents().get(0);
		private final RuleCall cContentRequirementParserRuleCall_0_1 = (RuleCall)cContentAlternatives_0.eContents().get(1);
		private final RuleCall cContentVerificationActivityParserRuleCall_0_2 = (RuleCall)cContentAlternatives_0.eContents().get(2);
		private final RuleCall cContentVerificationResultParserRuleCall_0_3 = (RuleCall)cContentAlternatives_0.eContents().get(3);
		private final RuleCall cContentElementTypeParserRuleCall_0_4 = (RuleCall)cContentAlternatives_0.eContents().get(4);
		
		//AlisaModel:
		//	content+=(Stakeholder | Requirement | VerificationActivity | VerificationResult | ElementType)*;
		public ParserRule getRule() { return rule; }

		//content+=(Stakeholder | Requirement | VerificationActivity | VerificationResult | ElementType)*
		public Assignment getContentAssignment() { return cContentAssignment; }

		//Stakeholder | Requirement | VerificationActivity | VerificationResult | ElementType
		public Alternatives getContentAlternatives_0() { return cContentAlternatives_0; }

		//Stakeholder
		public RuleCall getContentStakeholderParserRuleCall_0_0() { return cContentStakeholderParserRuleCall_0_0; }

		//Requirement
		public RuleCall getContentRequirementParserRuleCall_0_1() { return cContentRequirementParserRuleCall_0_1; }

		//VerificationActivity
		public RuleCall getContentVerificationActivityParserRuleCall_0_2() { return cContentVerificationActivityParserRuleCall_0_2; }

		//VerificationResult
		public RuleCall getContentVerificationResultParserRuleCall_0_3() { return cContentVerificationResultParserRuleCall_0_3; }

		//ElementType
		public RuleCall getContentElementTypeParserRuleCall_0_4() { return cContentElementTypeParserRuleCall_0_4; }
	}

	public class ValueStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueString");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ValueString: // remove quotes from string in ValueConverter 
		//	STRING;
		public ParserRule getRule() { return rule; }

		//// remove quotes from string in ValueConverter 
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class StakeholderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stakeholder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStakeholderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTitleAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTitleValueStringParserRuleCall_2_2_0 = (RuleCall)cTitleAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDescriptionValueStringParserRuleCall_3_2_0 = (RuleCall)cDescriptionAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRoleKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRoleAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRoleValueStringParserRuleCall_4_2_0 = (RuleCall)cRoleAssignment_4_2.eContents().get(0);
		private final Keyword cEndKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cStakeholderKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		/// *
		// * Stakeholder
		// * / Stakeholder:
		//	"stakeholder" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)? ("role" ":"
		//	role=ValueString)? "end" "stakeholder" ";";
		public ParserRule getRule() { return rule; }

		//"stakeholder" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)? ("role" ":"
		//role=ValueString)? "end" "stakeholder" ";"
		public Group getGroup() { return cGroup; }

		//"stakeholder"
		public Keyword getStakeholderKeyword_0() { return cStakeholderKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("title" ":" title=ValueString)?
		public Group getGroup_2() { return cGroup_2; }

		//"title"
		public Keyword getTitleKeyword_2_0() { return cTitleKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//title=ValueString
		public Assignment getTitleAssignment_2_2() { return cTitleAssignment_2_2; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_2_2_0() { return cTitleValueStringParserRuleCall_2_2_0; }

		//("description" ":" description=ValueString)?
		public Group getGroup_3() { return cGroup_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//description=ValueString
		public Assignment getDescriptionAssignment_3_2() { return cDescriptionAssignment_3_2; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_3_2_0() { return cDescriptionValueStringParserRuleCall_3_2_0; }

		//("role" ":" role=ValueString)?
		public Group getGroup_4() { return cGroup_4; }

		//"role"
		public Keyword getRoleKeyword_4_0() { return cRoleKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//role=ValueString
		public Assignment getRoleAssignment_4_2() { return cRoleAssignment_4_2; }

		//ValueString
		public RuleCall getRoleValueStringParserRuleCall_4_2_0() { return cRoleValueStringParserRuleCall_4_2_0; }

		//"end"
		public Keyword getEndKeyword_5() { return cEndKeyword_5; }

		//"stakeholder"
		public Keyword getStakeholderKeyword_6() { return cStakeholderKeyword_6; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class RequirementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Requirement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequirementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTitleKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cTitleAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cTitleValueStringParserRuleCall_2_2_0 = (RuleCall)cTitleAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cDescriptionAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDescriptionValueStringParserRuleCall_3_2_0 = (RuleCall)cDescriptionAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommentKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCommentAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCommentValueStringParserRuleCall_4_2_0 = (RuleCall)cCommentAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAssignedKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cToKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cColonKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Assignment cAssignedToAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final CrossReference cAssignedToStakeholderCrossReference_5_3_0 = (CrossReference)cAssignedToAssignment_5_3.eContents().get(0);
		private final RuleCall cAssignedToStakeholderIDTerminalRuleCall_5_3_0_1 = (RuleCall)cAssignedToStakeholderCrossReference_5_3_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cReferencedKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cByKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cColonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cReferencedByAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final CrossReference cReferencedByElementTypeCrossReference_6_3_0 = (CrossReference)cReferencedByAssignment_6_3.eContents().get(0);
		private final RuleCall cReferencedByElementTypeIDTerminalRuleCall_6_3_0_1 = (RuleCall)cReferencedByElementTypeCrossReference_6_3_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVerifiedKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cByKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cColonKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cVerifiedByAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final RuleCall cVerifiedByVerificationDecompositionParserRuleCall_7_3_0 = (RuleCall)cVerifiedByAssignment_7_3.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDecomposedKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cByKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cColonKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cDecomposedByAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cDecomposedByRequirementDecompositionParserRuleCall_8_3_0 = (RuleCall)cDecomposedByAssignment_8_3.eContents().get(0);
		private final Keyword cEndKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRequirementKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		/// *
		// * Requirement
		// * / Requirement:
		//	"requirement" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)? ("comment" ":"
		//	comment=ValueString)? ("assigned" "to" ":" assignedTo+=[Stakeholder]*)? ("referenced" "by" ":"
		//	referencedBy+=[ElementType]*)? ("verified" "by" ":" verifiedBy+=VerificationDecomposition*)? ("decomposed" "by" ":"
		//	decomposedBy+=RequirementDecomposition*)? "end" "requirement" ";";
		public ParserRule getRule() { return rule; }

		//"requirement" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)? ("comment" ":"
		//comment=ValueString)? ("assigned" "to" ":" assignedTo+=[Stakeholder]*)? ("referenced" "by" ":"
		//referencedBy+=[ElementType]*)? ("verified" "by" ":" verifiedBy+=VerificationDecomposition*)? ("decomposed" "by" ":"
		//decomposedBy+=RequirementDecomposition*)? "end" "requirement" ";"
		public Group getGroup() { return cGroup; }

		//"requirement"
		public Keyword getRequirementKeyword_0() { return cRequirementKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("title" ":" title=ValueString)?
		public Group getGroup_2() { return cGroup_2; }

		//"title"
		public Keyword getTitleKeyword_2_0() { return cTitleKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//title=ValueString
		public Assignment getTitleAssignment_2_2() { return cTitleAssignment_2_2; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_2_2_0() { return cTitleValueStringParserRuleCall_2_2_0; }

		//("description" ":" description=ValueString)?
		public Group getGroup_3() { return cGroup_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//description=ValueString
		public Assignment getDescriptionAssignment_3_2() { return cDescriptionAssignment_3_2; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_3_2_0() { return cDescriptionValueStringParserRuleCall_3_2_0; }

		//("comment" ":" comment=ValueString)?
		public Group getGroup_4() { return cGroup_4; }

		//"comment"
		public Keyword getCommentKeyword_4_0() { return cCommentKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//comment=ValueString
		public Assignment getCommentAssignment_4_2() { return cCommentAssignment_4_2; }

		//ValueString
		public RuleCall getCommentValueStringParserRuleCall_4_2_0() { return cCommentValueStringParserRuleCall_4_2_0; }

		//("assigned" "to" ":" assignedTo+=[Stakeholder]*)?
		public Group getGroup_5() { return cGroup_5; }

		//"assigned"
		public Keyword getAssignedKeyword_5_0() { return cAssignedKeyword_5_0; }

		//"to"
		public Keyword getToKeyword_5_1() { return cToKeyword_5_1; }

		//":"
		public Keyword getColonKeyword_5_2() { return cColonKeyword_5_2; }

		//assignedTo+=[Stakeholder]*
		public Assignment getAssignedToAssignment_5_3() { return cAssignedToAssignment_5_3; }

		//[Stakeholder]
		public CrossReference getAssignedToStakeholderCrossReference_5_3_0() { return cAssignedToStakeholderCrossReference_5_3_0; }

		//ID
		public RuleCall getAssignedToStakeholderIDTerminalRuleCall_5_3_0_1() { return cAssignedToStakeholderIDTerminalRuleCall_5_3_0_1; }

		//("referenced" "by" ":" referencedBy+=[ElementType]*)?
		public Group getGroup_6() { return cGroup_6; }

		//"referenced"
		public Keyword getReferencedKeyword_6_0() { return cReferencedKeyword_6_0; }

		//"by"
		public Keyword getByKeyword_6_1() { return cByKeyword_6_1; }

		//":"
		public Keyword getColonKeyword_6_2() { return cColonKeyword_6_2; }

		//referencedBy+=[ElementType]*
		public Assignment getReferencedByAssignment_6_3() { return cReferencedByAssignment_6_3; }

		//[ElementType]
		public CrossReference getReferencedByElementTypeCrossReference_6_3_0() { return cReferencedByElementTypeCrossReference_6_3_0; }

		//ID
		public RuleCall getReferencedByElementTypeIDTerminalRuleCall_6_3_0_1() { return cReferencedByElementTypeIDTerminalRuleCall_6_3_0_1; }

		//("verified" "by" ":" verifiedBy+=VerificationDecomposition*)?
		public Group getGroup_7() { return cGroup_7; }

		//"verified"
		public Keyword getVerifiedKeyword_7_0() { return cVerifiedKeyword_7_0; }

		//"by"
		public Keyword getByKeyword_7_1() { return cByKeyword_7_1; }

		//":"
		public Keyword getColonKeyword_7_2() { return cColonKeyword_7_2; }

		//verifiedBy+=VerificationDecomposition*
		public Assignment getVerifiedByAssignment_7_3() { return cVerifiedByAssignment_7_3; }

		//VerificationDecomposition
		public RuleCall getVerifiedByVerificationDecompositionParserRuleCall_7_3_0() { return cVerifiedByVerificationDecompositionParserRuleCall_7_3_0; }

		//("decomposed" "by" ":" decomposedBy+=RequirementDecomposition*)?
		public Group getGroup_8() { return cGroup_8; }

		//"decomposed"
		public Keyword getDecomposedKeyword_8_0() { return cDecomposedKeyword_8_0; }

		//"by"
		public Keyword getByKeyword_8_1() { return cByKeyword_8_1; }

		//":"
		public Keyword getColonKeyword_8_2() { return cColonKeyword_8_2; }

		//decomposedBy+=RequirementDecomposition*
		public Assignment getDecomposedByAssignment_8_3() { return cDecomposedByAssignment_8_3; }

		//RequirementDecomposition
		public RuleCall getDecomposedByRequirementDecompositionParserRuleCall_8_3_0() { return cDecomposedByRequirementDecompositionParserRuleCall_8_3_0; }

		//"end"
		public Keyword getEndKeyword_9() { return cEndKeyword_9; }

		//"requirement"
		public Keyword getRequirementKeyword_10() { return cRequirementKeyword_10; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}

	public class RequirementDecompositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RequirementDecomposition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cElementRequirementCrossReference_0_0 = (CrossReference)cElementAssignment_0.eContents().get(0);
		private final RuleCall cElementRequirementIDTerminalRuleCall_0_0_1 = (RuleCall)cElementRequirementCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cLeftAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cLeftRequirementCrossReference_1_0_0 = (CrossReference)cLeftAssignment_1_0.eContents().get(0);
		private final RuleCall cLeftRequirementIDTerminalRuleCall_1_0_0_1 = (RuleCall)cLeftRequirementCrossReference_1_0_0.eContents().get(1);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cTypeAlternatives_1_1_0 = (Alternatives)cTypeAssignment_1_1.eContents().get(0);
		private final Keyword cTypeAndKeyword_1_1_0_0 = (Keyword)cTypeAlternatives_1_1_0.eContents().get(0);
		private final Keyword cTypeOrKeyword_1_1_0_1 = (Keyword)cTypeAlternatives_1_1_0.eContents().get(1);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightRequirementDecompositionParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//RequirementDecomposition:
		//	element=[Requirement] | left=[Requirement] type=("and" | "or") right=RequirementDecomposition;
		public ParserRule getRule() { return rule; }

		//element=[Requirement] | left=[Requirement] type=("and" | "or") right=RequirementDecomposition
		public Alternatives getAlternatives() { return cAlternatives; }

		//element=[Requirement]
		public Assignment getElementAssignment_0() { return cElementAssignment_0; }

		//[Requirement]
		public CrossReference getElementRequirementCrossReference_0_0() { return cElementRequirementCrossReference_0_0; }

		//ID
		public RuleCall getElementRequirementIDTerminalRuleCall_0_0_1() { return cElementRequirementIDTerminalRuleCall_0_0_1; }

		//left=[Requirement] type=("and" | "or") right=RequirementDecomposition
		public Group getGroup_1() { return cGroup_1; }

		//left=[Requirement]
		public Assignment getLeftAssignment_1_0() { return cLeftAssignment_1_0; }

		//[Requirement]
		public CrossReference getLeftRequirementCrossReference_1_0_0() { return cLeftRequirementCrossReference_1_0_0; }

		//ID
		public RuleCall getLeftRequirementIDTerminalRuleCall_1_0_0_1() { return cLeftRequirementIDTerminalRuleCall_1_0_0_1; }

		//type=("and" | "or")
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//"and" | "or"
		public Alternatives getTypeAlternatives_1_1_0() { return cTypeAlternatives_1_1_0; }

		//"and"
		public Keyword getTypeAndKeyword_1_1_0_0() { return cTypeAndKeyword_1_1_0_0; }

		//"or"
		public Keyword getTypeOrKeyword_1_1_0_1() { return cTypeOrKeyword_1_1_0_1; }

		//right=RequirementDecomposition
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }

		//RequirementDecomposition
		public RuleCall getRightRequirementDecompositionParserRuleCall_1_2_0() { return cRightRequirementDecompositionParserRuleCall_1_2_0; }
	}

	public class VerificationDecompositionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationDecomposition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cElementAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final CrossReference cElementVerificationActivityCrossReference_0_0 = (CrossReference)cElementAssignment_0.eContents().get(0);
		private final RuleCall cElementVerificationActivityIDTerminalRuleCall_0_0_1 = (RuleCall)cElementVerificationActivityCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cLeftAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final CrossReference cLeftVerificationActivityCrossReference_1_0_0 = (CrossReference)cLeftAssignment_1_0.eContents().get(0);
		private final RuleCall cLeftVerificationActivityIDTerminalRuleCall_1_0_0_1 = (RuleCall)cLeftVerificationActivityCrossReference_1_0_0.eContents().get(1);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final Alternatives cTypeAlternatives_1_1_0 = (Alternatives)cTypeAssignment_1_1.eContents().get(0);
		private final Keyword cTypeAndKeyword_1_1_0_0 = (Keyword)cTypeAlternatives_1_1_0.eContents().get(0);
		private final Keyword cTypeOrKeyword_1_1_0_1 = (Keyword)cTypeAlternatives_1_1_0.eContents().get(1);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightVerificationDecompositionParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//VerificationDecomposition:
		//	element=[VerificationActivity] | left=[VerificationActivity] type=("and" | "or") right=VerificationDecomposition;
		public ParserRule getRule() { return rule; }

		//element=[VerificationActivity] | left=[VerificationActivity] type=("and" | "or") right=VerificationDecomposition
		public Alternatives getAlternatives() { return cAlternatives; }

		//element=[VerificationActivity]
		public Assignment getElementAssignment_0() { return cElementAssignment_0; }

		//[VerificationActivity]
		public CrossReference getElementVerificationActivityCrossReference_0_0() { return cElementVerificationActivityCrossReference_0_0; }

		//ID
		public RuleCall getElementVerificationActivityIDTerminalRuleCall_0_0_1() { return cElementVerificationActivityIDTerminalRuleCall_0_0_1; }

		//left=[VerificationActivity] type=("and" | "or") right=VerificationDecomposition
		public Group getGroup_1() { return cGroup_1; }

		//left=[VerificationActivity]
		public Assignment getLeftAssignment_1_0() { return cLeftAssignment_1_0; }

		//[VerificationActivity]
		public CrossReference getLeftVerificationActivityCrossReference_1_0_0() { return cLeftVerificationActivityCrossReference_1_0_0; }

		//ID
		public RuleCall getLeftVerificationActivityIDTerminalRuleCall_1_0_0_1() { return cLeftVerificationActivityIDTerminalRuleCall_1_0_0_1; }

		//type=("and" | "or")
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//"and" | "or"
		public Alternatives getTypeAlternatives_1_1_0() { return cTypeAlternatives_1_1_0; }

		//"and"
		public Keyword getTypeAndKeyword_1_1_0_0() { return cTypeAndKeyword_1_1_0_0; }

		//"or"
		public Keyword getTypeOrKeyword_1_1_0_1() { return cTypeOrKeyword_1_1_0_1; }

		//right=VerificationDecomposition
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }

		//VerificationDecomposition
		public RuleCall getRightVerificationDecompositionParserRuleCall_1_2_0() { return cRightVerificationDecompositionParserRuleCall_1_2_0; }
	}

	public class ElementTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cReferenceKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cReferenceAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cReferenceValueStringParserRuleCall_3_2_0 = (RuleCall)cReferenceAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElementTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cElementTypeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cElementTypeValueStringParserRuleCall_4_2_0 = (RuleCall)cElementTypeAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cModelTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cModelTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cModelTypeValueStringParserRuleCall_5_2_0 = (RuleCall)cModelTypeAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDocumentDetailsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDetailsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDetailsValueStringParserRuleCall_6_2_0 = (RuleCall)cDetailsAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVersionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cColonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cVersionAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cVersionValueStringParserRuleCall_7_2_0 = (RuleCall)cVersionAssignment_7_2.eContents().get(0);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSystemKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cElementKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		/// *
		// * System Element
		// * / ElementType:
		//	"system" "element" name=ID ("reference" ":" reference=ValueString)? ("element-type" ":" elementType=ValueString)?
		//	("model-type" ":" modelType=ValueString)? ("documentDetails" ":" details=ValueString)? ("version" ":"
		//	version+=ValueString*)? "end" "system" "element" ";";
		public ParserRule getRule() { return rule; }

		//"system" "element" name=ID ("reference" ":" reference=ValueString)? ("element-type" ":" elementType=ValueString)?
		//("model-type" ":" modelType=ValueString)? ("documentDetails" ":" details=ValueString)? ("version" ":"
		//version+=ValueString*)? "end" "system" "element" ";"
		public Group getGroup() { return cGroup; }

		//"system"
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }

		//"element"
		public Keyword getElementKeyword_1() { return cElementKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("reference" ":" reference=ValueString)?
		public Group getGroup_3() { return cGroup_3; }

		//"reference"
		public Keyword getReferenceKeyword_3_0() { return cReferenceKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//reference=ValueString
		public Assignment getReferenceAssignment_3_2() { return cReferenceAssignment_3_2; }

		//ValueString
		public RuleCall getReferenceValueStringParserRuleCall_3_2_0() { return cReferenceValueStringParserRuleCall_3_2_0; }

		//("element-type" ":" elementType=ValueString)?
		public Group getGroup_4() { return cGroup_4; }

		//"element-type"
		public Keyword getElementTypeKeyword_4_0() { return cElementTypeKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//elementType=ValueString
		public Assignment getElementTypeAssignment_4_2() { return cElementTypeAssignment_4_2; }

		//ValueString
		public RuleCall getElementTypeValueStringParserRuleCall_4_2_0() { return cElementTypeValueStringParserRuleCall_4_2_0; }

		//("model-type" ":" modelType=ValueString)?
		public Group getGroup_5() { return cGroup_5; }

		//"model-type"
		public Keyword getModelTypeKeyword_5_0() { return cModelTypeKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//modelType=ValueString
		public Assignment getModelTypeAssignment_5_2() { return cModelTypeAssignment_5_2; }

		//ValueString
		public RuleCall getModelTypeValueStringParserRuleCall_5_2_0() { return cModelTypeValueStringParserRuleCall_5_2_0; }

		//("documentDetails" ":" details=ValueString)?
		public Group getGroup_6() { return cGroup_6; }

		//"documentDetails"
		public Keyword getDocumentDetailsKeyword_6_0() { return cDocumentDetailsKeyword_6_0; }

		//":"
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//details=ValueString
		public Assignment getDetailsAssignment_6_2() { return cDetailsAssignment_6_2; }

		//ValueString
		public RuleCall getDetailsValueStringParserRuleCall_6_2_0() { return cDetailsValueStringParserRuleCall_6_2_0; }

		//("version" ":" version+=ValueString*)?
		public Group getGroup_7() { return cGroup_7; }

		//"version"
		public Keyword getVersionKeyword_7_0() { return cVersionKeyword_7_0; }

		//":"
		public Keyword getColonKeyword_7_1() { return cColonKeyword_7_1; }

		//version+=ValueString*
		public Assignment getVersionAssignment_7_2() { return cVersionAssignment_7_2; }

		//ValueString
		public RuleCall getVersionValueStringParserRuleCall_7_2_0() { return cVersionValueStringParserRuleCall_7_2_0; }

		//"end"
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }

		//"system"
		public Keyword getSystemKeyword_9() { return cSystemKeyword_9; }

		//"element"
		public Keyword getElementKeyword_10() { return cElementKeyword_10; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}

	public class ElementReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cReferenceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUrlKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cUrlAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cUrlValueStringParserRuleCall_3_2_0 = (RuleCall)cUrlAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cModelKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cReferenceKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Assignment cModelReferenceAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final CrossReference cModelReferenceNamedElementCrossReference_4_3_0 = (CrossReference)cModelReferenceAssignment_4_3.eContents().get(0);
		private final RuleCall cModelReferenceNamedElementRELREFParserRuleCall_4_3_0_1 = (RuleCall)cModelReferenceNamedElementCrossReference_4_3_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cReferenceTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cReferenceTypeAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cReferenceTypeValueStringParserRuleCall_5_2_0 = (RuleCall)cReferenceTypeAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDocumentDetailsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDetailsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDetailsValueStringParserRuleCall_6_2_0 = (RuleCall)cDetailsAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cVersionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cColonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cVersionAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cVersionValueStringParserRuleCall_7_2_0 = (RuleCall)cVersionAssignment_7_2.eContents().get(0);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cElementKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cReferenceKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		/// *
		// * Element Reference
		// * / ElementReference:
		//	"element" "reference" name=ID ("url" ":" url=ValueString)? ("model" "reference" ":"
		//	modelReference+=[aadl2::NamedElement|RELREF])? ("reference-type" ":" referenceType=ValueString)? ("documentDetails"
		//	":" details=ValueString)? ("version" ":" version+=ValueString*)? "end" "element" "reference" ";";
		public ParserRule getRule() { return rule; }

		//"element" "reference" name=ID ("url" ":" url=ValueString)? ("model" "reference" ":"
		//modelReference+=[aadl2::NamedElement|RELREF])? ("reference-type" ":" referenceType=ValueString)? ("documentDetails" ":"
		//details=ValueString)? ("version" ":" version+=ValueString*)? "end" "element" "reference" ";"
		public Group getGroup() { return cGroup; }

		//"element"
		public Keyword getElementKeyword_0() { return cElementKeyword_0; }

		//"reference"
		public Keyword getReferenceKeyword_1() { return cReferenceKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("url" ":" url=ValueString)?
		public Group getGroup_3() { return cGroup_3; }

		//"url"
		public Keyword getUrlKeyword_3_0() { return cUrlKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//url=ValueString
		public Assignment getUrlAssignment_3_2() { return cUrlAssignment_3_2; }

		//ValueString
		public RuleCall getUrlValueStringParserRuleCall_3_2_0() { return cUrlValueStringParserRuleCall_3_2_0; }

		//("model" "reference" ":" modelReference+=[aadl2::NamedElement|RELREF])?
		public Group getGroup_4() { return cGroup_4; }

		//"model"
		public Keyword getModelKeyword_4_0() { return cModelKeyword_4_0; }

		//"reference"
		public Keyword getReferenceKeyword_4_1() { return cReferenceKeyword_4_1; }

		//":"
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }

		//modelReference+=[aadl2::NamedElement|RELREF]
		public Assignment getModelReferenceAssignment_4_3() { return cModelReferenceAssignment_4_3; }

		//[aadl2::NamedElement|RELREF]
		public CrossReference getModelReferenceNamedElementCrossReference_4_3_0() { return cModelReferenceNamedElementCrossReference_4_3_0; }

		//RELREF
		public RuleCall getModelReferenceNamedElementRELREFParserRuleCall_4_3_0_1() { return cModelReferenceNamedElementRELREFParserRuleCall_4_3_0_1; }

		//("reference-type" ":" referenceType=ValueString)?
		public Group getGroup_5() { return cGroup_5; }

		//"reference-type"
		public Keyword getReferenceTypeKeyword_5_0() { return cReferenceTypeKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//referenceType=ValueString
		public Assignment getReferenceTypeAssignment_5_2() { return cReferenceTypeAssignment_5_2; }

		//ValueString
		public RuleCall getReferenceTypeValueStringParserRuleCall_5_2_0() { return cReferenceTypeValueStringParserRuleCall_5_2_0; }

		//("documentDetails" ":" details=ValueString)?
		public Group getGroup_6() { return cGroup_6; }

		//"documentDetails"
		public Keyword getDocumentDetailsKeyword_6_0() { return cDocumentDetailsKeyword_6_0; }

		//":"
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//details=ValueString
		public Assignment getDetailsAssignment_6_2() { return cDetailsAssignment_6_2; }

		//ValueString
		public RuleCall getDetailsValueStringParserRuleCall_6_2_0() { return cDetailsValueStringParserRuleCall_6_2_0; }

		//("version" ":" version+=ValueString*)?
		public Group getGroup_7() { return cGroup_7; }

		//"version"
		public Keyword getVersionKeyword_7_0() { return cVersionKeyword_7_0; }

		//":"
		public Keyword getColonKeyword_7_1() { return cColonKeyword_7_1; }

		//version+=ValueString*
		public Assignment getVersionAssignment_7_2() { return cVersionAssignment_7_2; }

		//ValueString
		public RuleCall getVersionValueStringParserRuleCall_7_2_0() { return cVersionValueStringParserRuleCall_7_2_0; }

		//"end"
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }

		//"element"
		public Keyword getElementKeyword_9() { return cElementKeyword_9; }

		//"reference"
		public Keyword getReferenceKeyword_10() { return cReferenceKeyword_10; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}

	public class VerificationActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cActivityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitleKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cColonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTitleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTitleValueStringParserRuleCall_3_2_0 = (RuleCall)cTitleAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cDescriptionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cDescriptionValueStringParserRuleCall_4_2_0 = (RuleCall)cDescriptionAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMethodKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMethodAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMethodVerificationMethodParserRuleCall_5_2_0 = (RuleCall)cMethodAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDecomposedKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cToKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cColonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cDecomposedToAssignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cDecomposedToVerificationDecompositionParserRuleCall_6_3_0 = (RuleCall)cDecomposedToAssignment_6_3.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAssignedKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cToKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Keyword cColonKeyword_7_2 = (Keyword)cGroup_7.eContents().get(2);
		private final Assignment cAssignedToAssignment_7_3 = (Assignment)cGroup_7.eContents().get(3);
		private final CrossReference cAssignedToStakeholderCrossReference_7_3_0 = (CrossReference)cAssignedToAssignment_7_3.eContents().get(0);
		private final RuleCall cAssignedToStakeholderIDTerminalRuleCall_7_3_0_1 = (RuleCall)cAssignedToStakeholderCrossReference_7_3_0.eContents().get(1);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cVerificationKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cActivityKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cSemicolonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		/// *
		// * Verification Activity
		// * / VerificationActivity:
		//	"verification" "activity" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)?
		//	("method" ":" method=VerificationMethod)? //	('parameters' ':' verificationParameters+=([ElementReference])*)?
		//	("decomposed" "to" ":" decomposedTo+=VerificationDecomposition*)? ("assigned" "to" ":" assignedTo+=[Stakeholder]*)?
		//	"end" "verification" "activity" ";";
		public ParserRule getRule() { return rule; }

		//"verification" "activity" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)?
		//("method" ":" method=VerificationMethod)? //	('parameters' ':' verificationParameters+=([ElementReference])*)?
		//("decomposed" "to" ":" decomposedTo+=VerificationDecomposition*)? ("assigned" "to" ":" assignedTo+=[Stakeholder]*)?
		//"end" "verification" "activity" ";"
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"activity"
		public Keyword getActivityKeyword_1() { return cActivityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("title" ":" title=ValueString)?
		public Group getGroup_3() { return cGroup_3; }

		//"title"
		public Keyword getTitleKeyword_3_0() { return cTitleKeyword_3_0; }

		//":"
		public Keyword getColonKeyword_3_1() { return cColonKeyword_3_1; }

		//title=ValueString
		public Assignment getTitleAssignment_3_2() { return cTitleAssignment_3_2; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_3_2_0() { return cTitleValueStringParserRuleCall_3_2_0; }

		//("description" ":" description=ValueString)?
		public Group getGroup_4() { return cGroup_4; }

		//"description"
		public Keyword getDescriptionKeyword_4_0() { return cDescriptionKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//description=ValueString
		public Assignment getDescriptionAssignment_4_2() { return cDescriptionAssignment_4_2; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_4_2_0() { return cDescriptionValueStringParserRuleCall_4_2_0; }

		//("method" ":" method=VerificationMethod)?
		public Group getGroup_5() { return cGroup_5; }

		//"method"
		public Keyword getMethodKeyword_5_0() { return cMethodKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//method=VerificationMethod
		public Assignment getMethodAssignment_5_2() { return cMethodAssignment_5_2; }

		//VerificationMethod
		public RuleCall getMethodVerificationMethodParserRuleCall_5_2_0() { return cMethodVerificationMethodParserRuleCall_5_2_0; }

		//("decomposed" "to" ":" decomposedTo+=VerificationDecomposition*)?
		public Group getGroup_6() { return cGroup_6; }

		//"decomposed"
		public Keyword getDecomposedKeyword_6_0() { return cDecomposedKeyword_6_0; }

		//"to"
		public Keyword getToKeyword_6_1() { return cToKeyword_6_1; }

		//":"
		public Keyword getColonKeyword_6_2() { return cColonKeyword_6_2; }

		//decomposedTo+=VerificationDecomposition*
		public Assignment getDecomposedToAssignment_6_3() { return cDecomposedToAssignment_6_3; }

		//VerificationDecomposition
		public RuleCall getDecomposedToVerificationDecompositionParserRuleCall_6_3_0() { return cDecomposedToVerificationDecompositionParserRuleCall_6_3_0; }

		//("assigned" "to" ":" assignedTo+=[Stakeholder]*)?
		public Group getGroup_7() { return cGroup_7; }

		//"assigned"
		public Keyword getAssignedKeyword_7_0() { return cAssignedKeyword_7_0; }

		//"to"
		public Keyword getToKeyword_7_1() { return cToKeyword_7_1; }

		//":"
		public Keyword getColonKeyword_7_2() { return cColonKeyword_7_2; }

		//assignedTo+=[Stakeholder]*
		public Assignment getAssignedToAssignment_7_3() { return cAssignedToAssignment_7_3; }

		//[Stakeholder]
		public CrossReference getAssignedToStakeholderCrossReference_7_3_0() { return cAssignedToStakeholderCrossReference_7_3_0; }

		//ID
		public RuleCall getAssignedToStakeholderIDTerminalRuleCall_7_3_0_1() { return cAssignedToStakeholderIDTerminalRuleCall_7_3_0_1; }

		//"end"
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }

		//"verification"
		public Keyword getVerificationKeyword_9() { return cVerificationKeyword_9; }

		//"activity"
		public Keyword getActivityKeyword_10() { return cActivityKeyword_10; }

		//";"
		public Keyword getSemicolonKeyword_11() { return cSemicolonKeyword_11; }
	}

	public class VerificationMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationMethod");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cManualKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAutomaticKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//VerificationMethod:
		//	"manual" | "automatic";
		public ParserRule getRule() { return rule; }

		//"manual" | "automatic"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"manual"
		public Keyword getManualKeyword_0() { return cManualKeyword_0; }

		//"automatic"
		public Keyword getAutomaticKeyword_1() { return cAutomaticKeyword_1; }
	}

	public class VerificationResultElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationResult");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVerificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cResultKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cOfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReferencedVerificationMethodAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cReferencedVerificationMethodVerificationActivityCrossReference_4_0 = (CrossReference)cReferencedVerificationMethodAssignment_4.eContents().get(0);
		private final RuleCall cReferencedVerificationMethodVerificationActivityIDTerminalRuleCall_4_0_1 = (RuleCall)cReferencedVerificationMethodVerificationActivityCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutputKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cColonKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cTitleAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cTitleValueStringParserRuleCall_5_2_0 = (RuleCall)cTitleAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLogfileKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cDescriptionAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cDescriptionValueStringParserRuleCall_6_2_0 = (RuleCall)cDescriptionAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cDateKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cColonKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cMethodAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMethodValueStringParserRuleCall_7_2_0 = (RuleCall)cMethodAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cStateKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cColonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cStateAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cStateVerificationResultStateParserRuleCall_8_2_0 = (RuleCall)cStateAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cStatusKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cColonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cStatusAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cStatusVerificationResultStatusParserRuleCall_9_2_0 = (RuleCall)cStatusAssignment_9_2.eContents().get(0);
		private final Keyword cEndKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cVerificationKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cResultKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cSemicolonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		/// *
		// * Verification Result
		// * / VerificationResult:
		//	"verification" "result" name=ID "of" referencedVerificationMethod+=[VerificationActivity]* ("output" ":"
		//	title=ValueString)? ("logfile" ":" description=ValueString)? ("date" ":" method=ValueString)? ("state" ":"
		//	state=VerificationResultState)? ("status" ":" status=VerificationResultStatus)? "end" "verification" "result" ";";
		public ParserRule getRule() { return rule; }

		//"verification" "result" name=ID "of" referencedVerificationMethod+=[VerificationActivity]* ("output" ":"
		//title=ValueString)? ("logfile" ":" description=ValueString)? ("date" ":" method=ValueString)? ("state" ":"
		//state=VerificationResultState)? ("status" ":" status=VerificationResultStatus)? "end" "verification" "result" ";"
		public Group getGroup() { return cGroup; }

		//"verification"
		public Keyword getVerificationKeyword_0() { return cVerificationKeyword_0; }

		//"result"
		public Keyword getResultKeyword_1() { return cResultKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"of"
		public Keyword getOfKeyword_3() { return cOfKeyword_3; }

		//referencedVerificationMethod+=[VerificationActivity]*
		public Assignment getReferencedVerificationMethodAssignment_4() { return cReferencedVerificationMethodAssignment_4; }

		//[VerificationActivity]
		public CrossReference getReferencedVerificationMethodVerificationActivityCrossReference_4_0() { return cReferencedVerificationMethodVerificationActivityCrossReference_4_0; }

		//ID
		public RuleCall getReferencedVerificationMethodVerificationActivityIDTerminalRuleCall_4_0_1() { return cReferencedVerificationMethodVerificationActivityIDTerminalRuleCall_4_0_1; }

		//("output" ":" title=ValueString)?
		public Group getGroup_5() { return cGroup_5; }

		//"output"
		public Keyword getOutputKeyword_5_0() { return cOutputKeyword_5_0; }

		//":"
		public Keyword getColonKeyword_5_1() { return cColonKeyword_5_1; }

		//title=ValueString
		public Assignment getTitleAssignment_5_2() { return cTitleAssignment_5_2; }

		//ValueString
		public RuleCall getTitleValueStringParserRuleCall_5_2_0() { return cTitleValueStringParserRuleCall_5_2_0; }

		//("logfile" ":" description=ValueString)?
		public Group getGroup_6() { return cGroup_6; }

		//"logfile"
		public Keyword getLogfileKeyword_6_0() { return cLogfileKeyword_6_0; }

		//":"
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//description=ValueString
		public Assignment getDescriptionAssignment_6_2() { return cDescriptionAssignment_6_2; }

		//ValueString
		public RuleCall getDescriptionValueStringParserRuleCall_6_2_0() { return cDescriptionValueStringParserRuleCall_6_2_0; }

		//("date" ":" method=ValueString)?
		public Group getGroup_7() { return cGroup_7; }

		//"date"
		public Keyword getDateKeyword_7_0() { return cDateKeyword_7_0; }

		//":"
		public Keyword getColonKeyword_7_1() { return cColonKeyword_7_1; }

		//method=ValueString
		public Assignment getMethodAssignment_7_2() { return cMethodAssignment_7_2; }

		//ValueString
		public RuleCall getMethodValueStringParserRuleCall_7_2_0() { return cMethodValueStringParserRuleCall_7_2_0; }

		//("state" ":" state=VerificationResultState)?
		public Group getGroup_8() { return cGroup_8; }

		//"state"
		public Keyword getStateKeyword_8_0() { return cStateKeyword_8_0; }

		//":"
		public Keyword getColonKeyword_8_1() { return cColonKeyword_8_1; }

		//state=VerificationResultState
		public Assignment getStateAssignment_8_2() { return cStateAssignment_8_2; }

		//VerificationResultState
		public RuleCall getStateVerificationResultStateParserRuleCall_8_2_0() { return cStateVerificationResultStateParserRuleCall_8_2_0; }

		//("status" ":" status=VerificationResultStatus)?
		public Group getGroup_9() { return cGroup_9; }

		//"status"
		public Keyword getStatusKeyword_9_0() { return cStatusKeyword_9_0; }

		//":"
		public Keyword getColonKeyword_9_1() { return cColonKeyword_9_1; }

		//status=VerificationResultStatus
		public Assignment getStatusAssignment_9_2() { return cStatusAssignment_9_2; }

		//VerificationResultStatus
		public RuleCall getStatusVerificationResultStatusParserRuleCall_9_2_0() { return cStatusVerificationResultStatusParserRuleCall_9_2_0; }

		//"end"
		public Keyword getEndKeyword_10() { return cEndKeyword_10; }

		//"verification"
		public Keyword getVerificationKeyword_11() { return cVerificationKeyword_11; }

		//"result"
		public Keyword getResultKeyword_12() { return cResultKeyword_12; }

		//";"
		public Keyword getSemicolonKeyword_13() { return cSemicolonKeyword_13; }
	}

	public class VerificationResultStateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationResultState");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cScheduledKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPassedKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cInprogressKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//VerificationResultState:
		//	"scheduled" | "passed" | "inprogress";
		public ParserRule getRule() { return rule; }

		//"scheduled" | "passed" | "inprogress"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"scheduled"
		public Keyword getScheduledKeyword_0() { return cScheduledKeyword_0; }

		//"passed"
		public Keyword getPassedKeyword_1() { return cPassedKeyword_1; }

		//"inprogress"
		public Keyword getInprogressKeyword_2() { return cInprogressKeyword_2; }
	}

	public class VerificationResultStatusElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerificationResultStatus");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cOkKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cUnknownKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cTbdKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//VerificationResultStatus:
		//	"ok" | "unknown" | "tbd";
		public ParserRule getRule() { return rule; }

		//"ok" | "unknown" | "tbd"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"ok"
		public Keyword getOkKeyword_0() { return cOkKeyword_0; }

		//"unknown"
		public Keyword getUnknownKeyword_1() { return cUnknownKeyword_1; }

		//"tbd"
		public Keyword getTbdKeyword_2() { return cTbdKeyword_2; }
	}

	public class QCLREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QCLREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//// classifier reference
		//QCLREF:
		//	(ID "::")* ID ("." ID)?;
		public ParserRule getRule() { return rule; }

		//(ID "::")* ID ("." ID)?
		public Group getGroup() { return cGroup; }

		//(ID "::")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//("." ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }
	}

	public class QPREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QPREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//// package reference
		//QPREF:
		//	ID ("::" ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("::" ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("::" ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"::"
		public Keyword getColonColonKeyword_1_0() { return cColonColonKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class QNEREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QNEREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cColonColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//// error model element reference or other multi-dot path with or without qualifier
		//QNEREF:
		//	(ID "::")* ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//(ID "::")* ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//(ID "::")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"::"
		public Keyword getColonColonKeyword_0_1() { return cColonColonKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//("." ID)*
		public Group getGroup_2() { return cGroup_2; }

		//"."
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }
	}

	public class QCRELREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QCRELREF");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final RuleCall cQNEREFParserRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final RuleCall cPAREFParserRuleCall_0_1 = (RuleCall)cGroup_0.eContents().get(1);
		private final RuleCall cPAREFParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////  dotted path property ref or property ref
		//QCRELREF:
		//	QNEREF PAREF? | PAREF;
		public ParserRule getRule() { return rule; }

		//QNEREF PAREF? | PAREF
		public Alternatives getAlternatives() { return cAlternatives; }

		//QNEREF PAREF?
		public Group getGroup_0() { return cGroup_0; }

		//QNEREF
		public RuleCall getQNEREFParserRuleCall_0_0() { return cQNEREFParserRuleCall_0_0; }

		//PAREF?
		public RuleCall getPAREFParserRuleCall_0_1() { return cPAREFParserRuleCall_0_1; }

		//PAREF
		public RuleCall getPAREFParserRuleCall_1() { return cPAREFParserRuleCall_1; }
	}

	public class RELREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RELREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//// dotted path as relative reference
		//RELREF:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class PAREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PAREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonColonKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		
		//// reference to property (association)	
		//PAREF:
		//	"#" ID ("::" ID)?;
		public ParserRule getRule() { return rule; }

		//"#" ID ("::" ID)?
		public Group getGroup() { return cGroup; }

		//"#"
		public Keyword getNumberSignKeyword_0() { return cNumberSignKeyword_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }

		//("::" ID)?
		public Group getGroup_2() { return cGroup_2; }

		//"::"
		public Keyword getColonColonKeyword_2_0() { return cColonColonKeyword_2_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_2_1() { return cIDTerminalRuleCall_2_1; }
	}

	public class REQREFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "REQREF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//// requirement or goal reference (just dotted)
		//REQREF:
		//	(ID ".")* ID;
		public ParserRule getRule() { return rule; }

		//(ID ".")* ID
		public Group getGroup() { return cGroup; }

		//(ID ".")*
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"."
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class STARElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "STAR");
		private final Keyword cAsteriskKeyword = (Keyword)rule.eContents().get(1);
		
		//STAR:
		//	"*";
		public ParserRule getRule() { return rule; }

		//"*"
		public Keyword getAsteriskKeyword() { return cAsteriskKeyword; }
	}
	
	
	private AlisaModelElements pAlisaModel;
	private ValueStringElements pValueString;
	private StakeholderElements pStakeholder;
	private RequirementElements pRequirement;
	private RequirementDecompositionElements pRequirementDecomposition;
	private VerificationDecompositionElements pVerificationDecomposition;
	private ElementTypeElements pElementType;
	private ElementReferenceElements pElementReference;
	private VerificationActivityElements pVerificationActivity;
	private VerificationMethodElements pVerificationMethod;
	private VerificationResultElements pVerificationResult;
	private VerificationResultStateElements pVerificationResultState;
	private VerificationResultStatusElements pVerificationResultStatus;
	private QCLREFElements pQCLREF;
	private QPREFElements pQPREF;
	private QNEREFElements pQNEREF;
	private QCRELREFElements pQCRELREF;
	private RELREFElements pRELREF;
	private PAREFElements pPAREF;
	private REQREFElements pREQREF;
	private STARElements pSTAR;
	private TerminalRule tSTRING;
	private TerminalRule tID;
	private TerminalRule tWS;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public AlisaGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("edu.cmu.sei.alisa.Alisa".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AlisaModel:
	//	content+=(Stakeholder | Requirement | VerificationActivity | VerificationResult | ElementType)*;
	public AlisaModelElements getAlisaModelAccess() {
		return (pAlisaModel != null) ? pAlisaModel : (pAlisaModel = new AlisaModelElements());
	}
	
	public ParserRule getAlisaModelRule() {
		return getAlisaModelAccess().getRule();
	}

	//ValueString: // remove quotes from string in ValueConverter 
	//	STRING;
	public ValueStringElements getValueStringAccess() {
		return (pValueString != null) ? pValueString : (pValueString = new ValueStringElements());
	}
	
	public ParserRule getValueStringRule() {
		return getValueStringAccess().getRule();
	}

	/// *
	// * Stakeholder
	// * / Stakeholder:
	//	"stakeholder" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)? ("role" ":"
	//	role=ValueString)? "end" "stakeholder" ";";
	public StakeholderElements getStakeholderAccess() {
		return (pStakeholder != null) ? pStakeholder : (pStakeholder = new StakeholderElements());
	}
	
	public ParserRule getStakeholderRule() {
		return getStakeholderAccess().getRule();
	}

	/// *
	// * Requirement
	// * / Requirement:
	//	"requirement" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)? ("comment" ":"
	//	comment=ValueString)? ("assigned" "to" ":" assignedTo+=[Stakeholder]*)? ("referenced" "by" ":"
	//	referencedBy+=[ElementType]*)? ("verified" "by" ":" verifiedBy+=VerificationDecomposition*)? ("decomposed" "by" ":"
	//	decomposedBy+=RequirementDecomposition*)? "end" "requirement" ";";
	public RequirementElements getRequirementAccess() {
		return (pRequirement != null) ? pRequirement : (pRequirement = new RequirementElements());
	}
	
	public ParserRule getRequirementRule() {
		return getRequirementAccess().getRule();
	}

	//RequirementDecomposition:
	//	element=[Requirement] | left=[Requirement] type=("and" | "or") right=RequirementDecomposition;
	public RequirementDecompositionElements getRequirementDecompositionAccess() {
		return (pRequirementDecomposition != null) ? pRequirementDecomposition : (pRequirementDecomposition = new RequirementDecompositionElements());
	}
	
	public ParserRule getRequirementDecompositionRule() {
		return getRequirementDecompositionAccess().getRule();
	}

	//VerificationDecomposition:
	//	element=[VerificationActivity] | left=[VerificationActivity] type=("and" | "or") right=VerificationDecomposition;
	public VerificationDecompositionElements getVerificationDecompositionAccess() {
		return (pVerificationDecomposition != null) ? pVerificationDecomposition : (pVerificationDecomposition = new VerificationDecompositionElements());
	}
	
	public ParserRule getVerificationDecompositionRule() {
		return getVerificationDecompositionAccess().getRule();
	}

	/// *
	// * System Element
	// * / ElementType:
	//	"system" "element" name=ID ("reference" ":" reference=ValueString)? ("element-type" ":" elementType=ValueString)?
	//	("model-type" ":" modelType=ValueString)? ("documentDetails" ":" details=ValueString)? ("version" ":"
	//	version+=ValueString*)? "end" "system" "element" ";";
	public ElementTypeElements getElementTypeAccess() {
		return (pElementType != null) ? pElementType : (pElementType = new ElementTypeElements());
	}
	
	public ParserRule getElementTypeRule() {
		return getElementTypeAccess().getRule();
	}

	/// *
	// * Element Reference
	// * / ElementReference:
	//	"element" "reference" name=ID ("url" ":" url=ValueString)? ("model" "reference" ":"
	//	modelReference+=[aadl2::NamedElement|RELREF])? ("reference-type" ":" referenceType=ValueString)? ("documentDetails"
	//	":" details=ValueString)? ("version" ":" version+=ValueString*)? "end" "element" "reference" ";";
	public ElementReferenceElements getElementReferenceAccess() {
		return (pElementReference != null) ? pElementReference : (pElementReference = new ElementReferenceElements());
	}
	
	public ParserRule getElementReferenceRule() {
		return getElementReferenceAccess().getRule();
	}

	/// *
	// * Verification Activity
	// * / VerificationActivity:
	//	"verification" "activity" name=ID ("title" ":" title=ValueString)? ("description" ":" description=ValueString)?
	//	("method" ":" method=VerificationMethod)? //	('parameters' ':' verificationParameters+=([ElementReference])*)?
	//	("decomposed" "to" ":" decomposedTo+=VerificationDecomposition*)? ("assigned" "to" ":" assignedTo+=[Stakeholder]*)?
	//	"end" "verification" "activity" ";";
	public VerificationActivityElements getVerificationActivityAccess() {
		return (pVerificationActivity != null) ? pVerificationActivity : (pVerificationActivity = new VerificationActivityElements());
	}
	
	public ParserRule getVerificationActivityRule() {
		return getVerificationActivityAccess().getRule();
	}

	//VerificationMethod:
	//	"manual" | "automatic";
	public VerificationMethodElements getVerificationMethodAccess() {
		return (pVerificationMethod != null) ? pVerificationMethod : (pVerificationMethod = new VerificationMethodElements());
	}
	
	public ParserRule getVerificationMethodRule() {
		return getVerificationMethodAccess().getRule();
	}

	/// *
	// * Verification Result
	// * / VerificationResult:
	//	"verification" "result" name=ID "of" referencedVerificationMethod+=[VerificationActivity]* ("output" ":"
	//	title=ValueString)? ("logfile" ":" description=ValueString)? ("date" ":" method=ValueString)? ("state" ":"
	//	state=VerificationResultState)? ("status" ":" status=VerificationResultStatus)? "end" "verification" "result" ";";
	public VerificationResultElements getVerificationResultAccess() {
		return (pVerificationResult != null) ? pVerificationResult : (pVerificationResult = new VerificationResultElements());
	}
	
	public ParserRule getVerificationResultRule() {
		return getVerificationResultAccess().getRule();
	}

	//VerificationResultState:
	//	"scheduled" | "passed" | "inprogress";
	public VerificationResultStateElements getVerificationResultStateAccess() {
		return (pVerificationResultState != null) ? pVerificationResultState : (pVerificationResultState = new VerificationResultStateElements());
	}
	
	public ParserRule getVerificationResultStateRule() {
		return getVerificationResultStateAccess().getRule();
	}

	//VerificationResultStatus:
	//	"ok" | "unknown" | "tbd";
	public VerificationResultStatusElements getVerificationResultStatusAccess() {
		return (pVerificationResultStatus != null) ? pVerificationResultStatus : (pVerificationResultStatus = new VerificationResultStatusElements());
	}
	
	public ParserRule getVerificationResultStatusRule() {
		return getVerificationResultStatusAccess().getRule();
	}

	//// classifier reference
	//QCLREF:
	//	(ID "::")* ID ("." ID)?;
	public QCLREFElements getQCLREFAccess() {
		return (pQCLREF != null) ? pQCLREF : (pQCLREF = new QCLREFElements());
	}
	
	public ParserRule getQCLREFRule() {
		return getQCLREFAccess().getRule();
	}

	//// package reference
	//QPREF:
	//	ID ("::" ID)*;
	public QPREFElements getQPREFAccess() {
		return (pQPREF != null) ? pQPREF : (pQPREF = new QPREFElements());
	}
	
	public ParserRule getQPREFRule() {
		return getQPREFAccess().getRule();
	}

	//// error model element reference or other multi-dot path with or without qualifier
	//QNEREF:
	//	(ID "::")* ID ("." ID)*;
	public QNEREFElements getQNEREFAccess() {
		return (pQNEREF != null) ? pQNEREF : (pQNEREF = new QNEREFElements());
	}
	
	public ParserRule getQNEREFRule() {
		return getQNEREFAccess().getRule();
	}

	////  dotted path property ref or property ref
	//QCRELREF:
	//	QNEREF PAREF? | PAREF;
	public QCRELREFElements getQCRELREFAccess() {
		return (pQCRELREF != null) ? pQCRELREF : (pQCRELREF = new QCRELREFElements());
	}
	
	public ParserRule getQCRELREFRule() {
		return getQCRELREFAccess().getRule();
	}

	//// dotted path as relative reference
	//RELREF:
	//	ID ("." ID)*;
	public RELREFElements getRELREFAccess() {
		return (pRELREF != null) ? pRELREF : (pRELREF = new RELREFElements());
	}
	
	public ParserRule getRELREFRule() {
		return getRELREFAccess().getRule();
	}

	//// reference to property (association)	
	//PAREF:
	//	"#" ID ("::" ID)?;
	public PAREFElements getPAREFAccess() {
		return (pPAREF != null) ? pPAREF : (pPAREF = new PAREFElements());
	}
	
	public ParserRule getPAREFRule() {
		return getPAREFAccess().getRule();
	}

	//// requirement or goal reference (just dotted)
	//REQREF:
	//	(ID ".")* ID;
	public REQREFElements getREQREFAccess() {
		return (pREQREF != null) ? pREQREF : (pREQREF = new REQREFElements());
	}
	
	public ParserRule getREQREFRule() {
		return getREQREFAccess().getRule();
	}

	//STAR:
	//	"*";
	public STARElements getSTARAccess() {
		return (pSTAR != null) ? pSTAR : (pSTAR = new STARElements());
	}
	
	public ParserRule getSTARRule() {
		return getSTARAccess().getRule();
	}

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return (tSTRING != null) ? tSTRING : (tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING"));
	} 

	////terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	//terminal ID:
	//	("a".."z" | "A".."Z") ("_"? ("a".."z" | "A".."Z" | "0".."9"))*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
