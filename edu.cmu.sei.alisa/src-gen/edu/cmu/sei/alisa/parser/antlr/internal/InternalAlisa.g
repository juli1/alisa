/*
* generated by Xtext
*/
grammar InternalAlisa;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package edu.cmu.sei.alisa.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package edu.cmu.sei.alisa.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.cmu.sei.alisa.services.AlisaGrammarAccess;

}

@parser::members {

 	private AlisaGrammarAccess grammarAccess;
 	
    public InternalAlisaParser(TokenStream input, AlisaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AlisaModel";	
   	}
   	
   	@Override
   	protected AlisaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAlisaModel
entryRuleAlisaModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlisaModelRule()); }
	 iv_ruleAlisaModel=ruleAlisaModel 
	 { $current=$iv_ruleAlisaModel.current; } 
	 EOF 
;

// Rule AlisaModel
ruleAlisaModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlisaModelAccess().getContentStakeholderParserRuleCall_0_0()); 
	    }
		lv_content_0_1=ruleStakeholder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlisaModelRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_0_1, 
        		"Stakeholder");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAlisaModelAccess().getContentRequirementParserRuleCall_0_1()); 
	    }
		lv_content_0_2=ruleRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlisaModelRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_0_2, 
        		"Requirement");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAlisaModelAccess().getContentVerificationActivityParserRuleCall_0_2()); 
	    }
		lv_content_0_3=ruleVerificationActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlisaModelRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_0_3, 
        		"VerificationActivity");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAlisaModelAccess().getContentVerificationResultParserRuleCall_0_3()); 
	    }
		lv_content_0_4=ruleVerificationResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlisaModelRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_0_4, 
        		"VerificationResult");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getAlisaModelAccess().getContentElementTypeParserRuleCall_0_4()); 
	    }
		lv_content_0_5=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlisaModelRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_0_5, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*
;





// Entry rule entryRuleValueString
entryRuleValueString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueStringRule()); } 
	 iv_ruleValueString=ruleValueString 
	 { $current=$iv_ruleValueString.current.getText(); }  
	 EOF 
;

// Rule ValueString
ruleValueString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleStakeholder
entryRuleStakeholder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStakeholderRule()); }
	 iv_ruleStakeholder=ruleStakeholder 
	 { $current=$iv_ruleStakeholder.current; } 
	 EOF 
;

// Rule Stakeholder
ruleStakeholder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='stakeholder' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStakeholderAccess().getStakeholderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStakeholderAccess().getTitleKeyword_2_0());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStakeholderAccess().getColonKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getTitleValueStringParserRuleCall_2_2_0()); 
	    }
		lv_title_4_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStakeholderAccess().getDescriptionKeyword_3_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStakeholderAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getDescriptionValueStringParserRuleCall_3_2_0()); 
	    }
		lv_description_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='role' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStakeholderAccess().getRoleKeyword_4_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStakeholderAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getRoleValueStringParserRuleCall_4_2_0()); 
	    }
		lv_role_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"role",
        		lv_role_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='end' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStakeholderAccess().getEndKeyword_5());
    }
this_ID_12=RULE_ID
    { 
    newLeafNode(this_ID_12, grammarAccess.getStakeholderAccess().getIDTerminalRuleCall_6()); 
    }
	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStakeholderAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='requirement' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='title' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequirementAccess().getTitleKeyword_2_0());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequirementAccess().getColonKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getTitleValueStringParserRuleCall_2_2_0()); 
	    }
		lv_title_4_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='description' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getDescriptionKeyword_3_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequirementAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDescriptionValueStringParserRuleCall_3_2_0()); 
	    }
		lv_description_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='comment' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRequirementAccess().getCommentKeyword_4_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRequirementAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getCommentValueStringParserRuleCall_4_2_0()); 
	    }
		lv_comment_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='assigned' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRequirementAccess().getAssignedKeyword_5_0());
    }
	otherlv_12='to' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRequirementAccess().getToKeyword_5_1());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRequirementAccess().getColonKeyword_5_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_14=RULE_ID
	{
		newLeafNode(otherlv_14, grammarAccess.getRequirementAccess().getAssignedToStakeholderCrossReference_5_3_0()); 
	}

)
)*)?(	otherlv_15='referenced' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getRequirementAccess().getReferencedKeyword_6_0());
    }
	otherlv_16='by' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getRequirementAccess().getByKeyword_6_1());
    }
	otherlv_17=':' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getRequirementAccess().getColonKeyword_6_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_18=RULE_ID
	{
		newLeafNode(otherlv_18, grammarAccess.getRequirementAccess().getReferencedByElementTypeCrossReference_6_3_0()); 
	}

)
)*)?(	otherlv_19='verified' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getRequirementAccess().getVerifiedKeyword_7_0());
    }
	otherlv_20='by' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getRequirementAccess().getByKeyword_7_1());
    }
	otherlv_21=':' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getRequirementAccess().getColonKeyword_7_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getVerifiedByVerificationDecompositionParserRuleCall_7_3_0()); 
	    }
		lv_verifiedBy_22_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"verifiedBy",
        		lv_verifiedBy_22_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_23='decomposed' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getRequirementAccess().getDecomposedKeyword_8_0());
    }
	otherlv_24='by' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getRequirementAccess().getByKeyword_8_1());
    }
	otherlv_25=':' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getRequirementAccess().getColonKeyword_8_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDecomposedByRequirementDecompositionParserRuleCall_8_3_0()); 
	    }
		lv_decomposedBy_26_0=ruleRequirementDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"decomposedBy",
        		lv_decomposedBy_26_0, 
        		"RequirementDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_27='end' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getRequirementAccess().getEndKeyword_9());
    }
this_ID_28=RULE_ID
    { 
    newLeafNode(this_ID_28, grammarAccess.getRequirementAccess().getIDTerminalRuleCall_10()); 
    }
	otherlv_29=';' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getRequirementAccess().getSemicolonKeyword_11());
    }
)
;





// Entry rule entryRuleRequirementDecomposition
entryRuleRequirementDecomposition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRequirementDecompositionRule()); }
	 iv_ruleRequirementDecomposition=ruleRequirementDecomposition 
	 { $current=$iv_ruleRequirementDecomposition.current; } 
	 EOF 
;

// Rule RequirementDecomposition
ruleRequirementDecomposition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementDecompositionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getRequirementDecompositionAccess().getElementRequirementCrossReference_0_0()); 
	}

)
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementDecompositionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRequirementDecompositionAccess().getLeftRequirementCrossReference_1_0_0()); 
	}

)
)(
(
(
		lv_type_2_1=	'and' 
    {
        newLeafNode(lv_type_2_1, grammarAccess.getRequirementDecompositionAccess().getTypeAndKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_1, null);
	    }

    |		lv_type_2_2=	'or' 
    {
        newLeafNode(lv_type_2_2, grammarAccess.getRequirementDecompositionAccess().getTypeOrKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementDecompositionAccess().getRightRequirementDecompositionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleRequirementDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementDecompositionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"RequirementDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleVerificationDecomposition
entryRuleVerificationDecomposition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationDecompositionRule()); }
	 iv_ruleVerificationDecomposition=ruleVerificationDecomposition 
	 { $current=$iv_ruleVerificationDecomposition.current; } 
	 EOF 
;

// Rule VerificationDecomposition
ruleVerificationDecomposition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityCrossReference_0_0()); 
	}

)
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityCrossReference_1_0_0()); 
	}

)
)(
(
(
		lv_type_2_1=	'and' 
    {
        newLeafNode(lv_type_2_1, grammarAccess.getVerificationDecompositionAccess().getTypeAndKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_1, null);
	    }

    |		lv_type_2_2=	'or' 
    {
        newLeafNode(lv_type_2_2, grammarAccess.getVerificationDecompositionAccess().getTypeOrKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getRightVerificationDecompositionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationDecompositionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	 iv_ruleElementType=ruleElementType 
	 { $current=$iv_ruleElementType.current; } 
	 EOF 
;

// Rule ElementType
ruleElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='system' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getElementTypeAccess().getSystemKeyword_0());
    }
	otherlv_1='element' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElementTypeAccess().getElementKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getElementTypeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getElementTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='reference' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElementTypeAccess().getReferenceKeyword_3_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getElementTypeAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementTypeAccess().getReferenceValueStringParserRuleCall_3_2_0()); 
	    }
		lv_reference_5_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementTypeRule());
	        }
       		set(
       			$current, 
       			"reference",
        		lv_reference_5_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='element-type' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getElementTypeAccess().getElementTypeKeyword_4_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getElementTypeAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementTypeAccess().getElementTypeValueStringParserRuleCall_4_2_0()); 
	    }
		lv_elementType_8_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementTypeRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_8_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='model-type' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getElementTypeAccess().getModelTypeKeyword_5_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getElementTypeAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementTypeAccess().getModelTypeValueStringParserRuleCall_5_2_0()); 
	    }
		lv_modelType_11_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementTypeRule());
	        }
       		set(
       			$current, 
       			"modelType",
        		lv_modelType_11_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='documentDetails' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getElementTypeAccess().getDocumentDetailsKeyword_6_0());
    }
	otherlv_13=':' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getElementTypeAccess().getColonKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementTypeAccess().getDetailsValueStringParserRuleCall_6_2_0()); 
	    }
		lv_details_14_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementTypeRule());
	        }
       		set(
       			$current, 
       			"details",
        		lv_details_14_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_15='version' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getElementTypeAccess().getVersionKeyword_7_0());
    }
	otherlv_16=':' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getElementTypeAccess().getColonKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementTypeAccess().getVersionValueStringParserRuleCall_7_2_0()); 
	    }
		lv_version_17_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementTypeRule());
	        }
       		add(
       			$current, 
       			"version",
        		lv_version_17_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_18='end' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getElementTypeAccess().getEndKeyword_8());
    }
this_ID_19=RULE_ID
    { 
    newLeafNode(this_ID_19, grammarAccess.getElementTypeAccess().getIDTerminalRuleCall_9()); 
    }
	otherlv_20=';' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getElementTypeAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRuleVerificationActivity
entryRuleVerificationActivity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationActivityRule()); }
	 iv_ruleVerificationActivity=ruleVerificationActivity 
	 { $current=$iv_ruleVerificationActivity.current; } 
	 EOF 
;

// Rule VerificationActivity
ruleVerificationActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='verification' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0());
    }
	otherlv_1='activity' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationActivityAccess().getActivityKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='title' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVerificationActivityAccess().getTitleKeyword_3_0());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationActivityAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_3_2_0()); 
	    }
		lv_title_5_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_5_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='description' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_0());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationActivityAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_2_0()); 
	    }
		lv_description_8_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='method' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationActivityAccess().getMethodKeyword_5_0());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationActivityAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_5_2_0()); 
	    }
		lv_method_11_0=ruleVerificationMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_11_0, 
        		"VerificationMethod");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='assigned' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationActivityAccess().getAssignedKeyword_6_0());
    }
	otherlv_13='to' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationActivityAccess().getToKeyword_6_1());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationActivityAccess().getColonKeyword_6_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
        }
	otherlv_15=RULE_ID
	{
		newLeafNode(otherlv_15, grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderCrossReference_6_3_0()); 
	}

)
)*)?	otherlv_16='end' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationActivityAccess().getEndKeyword_7());
    }
this_ID_17=RULE_ID
    { 
    newLeafNode(this_ID_17, grammarAccess.getVerificationActivityAccess().getIDTerminalRuleCall_8()); 
    }
	otherlv_18=';' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_9());
    }
)
;





// Entry rule entryRuleVerificationMethod
entryRuleVerificationMethod returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationMethodRule()); } 
	 iv_ruleVerificationMethod=ruleVerificationMethod 
	 { $current=$iv_ruleVerificationMethod.current.getText(); }  
	 EOF 
;

// Rule VerificationMethod
ruleVerificationMethod returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='manual' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getManualKeyword_0()); 
    }

    |
	kw='automatic' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getAutomaticKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleVerificationResult
entryRuleVerificationResult returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationResultRule()); }
	 iv_ruleVerificationResult=ruleVerificationResult 
	 { $current=$iv_ruleVerificationResult.current; } 
	 EOF 
;

// Rule VerificationResult
ruleVerificationResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='verification' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationResultAccess().getVerificationKeyword_0());
    }
	otherlv_1='result' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationResultAccess().getResultKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationResultAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVerificationResultAccess().getOfKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityCrossReference_4_0()); 
	}

)
)*(	otherlv_5='output' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationResultAccess().getOutputKeyword_5_0());
    }
	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationResultAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getTitleValueStringParserRuleCall_5_2_0()); 
	    }
		lv_title_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='logfile' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationResultAccess().getLogfileKeyword_6_0());
    }
	otherlv_9=':' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationResultAccess().getColonKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getDescriptionValueStringParserRuleCall_6_2_0()); 
	    }
		lv_description_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='date' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getVerificationResultAccess().getDateKeyword_7_0());
    }
	otherlv_12=':' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationResultAccess().getColonKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getMethodValueStringParserRuleCall_7_2_0()); 
	    }
		lv_method_13_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_13_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='state' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationResultAccess().getStateKeyword_8_0());
    }
	otherlv_15=':' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getVerificationResultAccess().getColonKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStateVerificationResultStateParserRuleCall_8_2_0()); 
	    }
		lv_state_16_0=ruleVerificationResultState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"state",
        		lv_state_16_0, 
        		"VerificationResultState");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_17='status' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getVerificationResultAccess().getStatusKeyword_9_0());
    }
	otherlv_18=':' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getVerificationResultAccess().getColonKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStatusVerificationResultStatusParserRuleCall_9_2_0()); 
	    }
		lv_status_19_0=ruleVerificationResultStatus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"status",
        		lv_status_19_0, 
        		"VerificationResultStatus");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_20='end' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getVerificationResultAccess().getEndKeyword_10());
    }
this_ID_21=RULE_ID
    { 
    newLeafNode(this_ID_21, grammarAccess.getVerificationResultAccess().getIDTerminalRuleCall_11()); 
    }
	otherlv_22=';' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_12());
    }
)
;





// Entry rule entryRuleVerificationResultState
entryRuleVerificationResultState returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationResultStateRule()); } 
	 iv_ruleVerificationResultState=ruleVerificationResultState 
	 { $current=$iv_ruleVerificationResultState.current.getText(); }  
	 EOF 
;

// Rule VerificationResultState
ruleVerificationResultState returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='scheduled' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationResultStateAccess().getScheduledKeyword_0()); 
    }

    |
	kw='passed' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationResultStateAccess().getPassedKeyword_1()); 
    }

    |
	kw='inprogress' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationResultStateAccess().getInprogressKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleVerificationResultStatus
entryRuleVerificationResultStatus returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVerificationResultStatusRule()); } 
	 iv_ruleVerificationResultStatus=ruleVerificationResultStatus 
	 { $current=$iv_ruleVerificationResultStatus.current.getText(); }  
	 EOF 
;

// Rule VerificationResultStatus
ruleVerificationResultStatus returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='ok' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationResultStatusAccess().getOkKeyword_0()); 
    }

    |
	kw='unknown' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationResultStatusAccess().getUnknownKeyword_1()); 
    }

    |
	kw='tbd' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationResultStatusAccess().getTbdKeyword_2()); 
    }
)
    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


