/*
* generated by Xtext
*/
parser grammar InternalAlisaParser;

options {
	tokenVocab=InternalAlisaLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package edu.cmu.sei.alisa.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.cmu.sei.alisa.services.AlisaGrammarAccess;

}

@members {


	private AlisaGrammarAccess grammarAccess;
	 	
	public InternalAlisaParser(TokenStream input, AlisaGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "RSALPackage";	
	} 
	   	   	
	@Override
	protected AlisaGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleRSALPackage
entryRuleRSALPackage returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRSALPackageRule()); }
	 iv_ruleRSALPackage=ruleRSALPackage 
	 { $current=$iv_ruleRSALPackage.current; } 
	 EOF 
;

// Rule RSALPackage
ruleRSALPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Package
    {
    	newLeafNode(otherlv_0, grammarAccess.getRSALPackageAccess().getPackageKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRSALPackageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSALPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
	otherlv_2=Imports
    {
    	newLeafNode(otherlv_2, grammarAccess.getRSALPackageAccess().getImportsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSALPackageRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRSALPackageAccess().getImportedNamespaceRSALPackageCrossReference_2_1_0()); 
	}

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getRSALPackageAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSALPackageRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getRSALPackageAccess().getImportedNamespaceRSALPackageCrossReference_2_2_1_0()); 
	}

)
))*)?(
	otherlv_6=With
    {
    	newLeafNode(otherlv_6, grammarAccess.getRSALPackageAccess().getWithKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSALPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRSALPackageAccess().getImportedNamespaceAadlPackageCrossReference_3_1_0()); 
	    }
		ruleQPREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_8=Comma
    {
    	newLeafNode(otherlv_8, grammarAccess.getRSALPackageAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSALPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRSALPackageAccess().getImportedNamespaceAadlPackageCrossReference_3_2_1_0()); 
	    }
		ruleQPREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getRSALPackageAccess().getContentRSALElementParserRuleCall_4_0()); 
	    }
		lv_content_10_0=ruleRSALElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRSALPackageRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_10_0, 
        		"RSALElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
	otherlv_11=Issues
    {
    	newLeafNode(otherlv_11, grammarAccess.getRSALPackageAccess().getIssuesKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRSALPackageAccess().getIssueValueStringParserRuleCall_5_1_0()); 
	    }
		lv_issue_12_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRSALPackageRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_12_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_13=Comma
    {
    	newLeafNode(otherlv_13, grammarAccess.getRSALPackageAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRSALPackageAccess().getIssueValueStringParserRuleCall_5_2_1_0()); 
	    }
		lv_issue_14_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRSALPackageRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_14_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_15=End
    {
    	newLeafNode(otherlv_15, grammarAccess.getRSALPackageAccess().getEndKeyword_6());
    }
)
;







// Entry rule entryRuleContractualElement
entryRuleContractualElement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContractualElementRule()); }
	 iv_ruleContractualElement=ruleContractualElement 
	 { $current=$iv_ruleContractualElement.current; } 
	 EOF 
;

// Rule ContractualElement
ruleContractualElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContractualElementAccess().getGoalParserRuleCall_0()); 
    }
    this_Goal_0=ruleGoal
    {
        $current = $this_Goal_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContractualElementAccess().getRequirementParserRuleCall_1()); 
    }
    this_Requirement_1=ruleRequirement
    {
        $current = $this_Requirement_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRSALElement
entryRuleRSALElement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRSALElementRule()); }
	 iv_ruleRSALElement=ruleRSALElement 
	 { $current=$iv_ruleRSALElement.current; } 
	 EOF 
;

// Rule RSALElement
ruleRSALElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getGoalParserRuleCall_0()); 
    }
    this_Goal_0=ruleGoal
    {
        $current = $this_Goal_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getRequirementParserRuleCall_1()); 
    }
    this_Requirement_1=ruleRequirement
    {
        $current = $this_Requirement_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getRSALSectionParserRuleCall_2()); 
    }
    this_RSALSection_2=ruleRSALSection
    {
        $current = $this_RSALSection_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getStakeholderParserRuleCall_3()); 
    }
    this_Stakeholder_3=ruleStakeholder
    {
        $current = $this_Stakeholder_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getVerificationActivityParserRuleCall_4()); 
    }
    this_VerificationActivity_4=ruleVerificationActivity
    {
        $current = $this_VerificationActivity_4.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getCategoryParserRuleCall_5()); 
    }
    this_Category_5=ruleCategory
    {
        $current = $this_Category_5.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRSALElementAccess().getExternalDocumentParserRuleCall_6()); 
    }
    this_ExternalDocument_6=ruleExternalDocument
    {
        $current = $this_ExternalDocument_6.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRSALSection
entryRuleRSALSection returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRSALSectionRule()); }
	 iv_ruleRSALSection=ruleRSALSection 
	 { $current=$iv_ruleRSALSection.current; } 
	 EOF 
;

// Rule RSALSection
ruleRSALSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Section
    {
    	newLeafNode(otherlv_0, grammarAccess.getRSALSectionAccess().getSectionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRSALSectionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRSALSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRSALSectionAccess().getContentRSALElementParserRuleCall_2_0()); 
	    }
		lv_content_2_0=ruleRSALElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRSALSectionRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_2_0, 
        		"RSALElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
	otherlv_3=Issues
    {
    	newLeafNode(otherlv_3, grammarAccess.getRSALSectionAccess().getIssuesKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRSALSectionAccess().getIssueValueStringParserRuleCall_3_1_0()); 
	    }
		lv_issue_4_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRSALSectionRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_4_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getRSALSectionAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRSALSectionAccess().getIssueValueStringParserRuleCall_3_2_1_0()); 
	    }
		lv_issue_6_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRSALSectionRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_6_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_7=End
    {
    	newLeafNode(otherlv_7, grammarAccess.getRSALSectionAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleGoal
entryRuleGoal returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalRule()); }
	 iv_ruleGoal=ruleGoal 
	 { $current=$iv_ruleGoal.current; } 
	 EOF 
;

// Rule Goal
ruleGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Goal
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
	otherlv_3=For
    {
    	newLeafNode(otherlv_3, grammarAccess.getGoalAccess().getForKeyword_2_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getTargetNamedElementCrossReference_2_0_1_0()); 
	    }
		ruleQNEREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
	otherlv_5=Category
    {
    	newLeafNode(otherlv_5, grammarAccess.getGoalAccess().getCategoryKeyword_2_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getCategoryCategoryCrossReference_2_1_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_7=Comma
    {
    	newLeafNode(otherlv_7, grammarAccess.getGoalAccess().getCommaKeyword_2_1_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getCategoryCategoryCrossReference_2_1_2_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(
	otherlv_9=Title
    {
    	newLeafNode(otherlv_9, grammarAccess.getGoalAccess().getTitleKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getTitleValueStringParserRuleCall_2_2_1_0()); 
	    }
		lv_title_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(
	otherlv_11=Description
    {
    	newLeafNode(otherlv_11, grammarAccess.getGoalAccess().getDescriptionKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDescriptionValueStringParserRuleCall_2_3_1_0()); 
	    }
		lv_description_12_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_12_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(
	otherlv_13=Assertion
    {
    	newLeafNode(otherlv_13, grammarAccess.getGoalAccess().getAssertionKeyword_2_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getAssertValueStringParserRuleCall_2_4_1_0()); 
	    }
		lv_assert_14_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"assert",
        		lv_assert_14_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(
	otherlv_15=Rationale
    {
    	newLeafNode(otherlv_15, grammarAccess.getGoalAccess().getRationaleKeyword_2_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getRationaleValueStringParserRuleCall_2_5_1_0()); 
	    }
		lv_rationale_16_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"rationale",
        		lv_rationale_16_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(
	otherlv_17=Issues
    {
    	newLeafNode(otherlv_17, grammarAccess.getGoalAccess().getIssuesKeyword_2_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getIssueValueStringParserRuleCall_2_6_1_0()); 
	    }
		lv_issue_18_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_18_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_19=Comma
    {
    	newLeafNode(otherlv_19, grammarAccess.getGoalAccess().getCommaKeyword_2_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getIssueValueStringParserRuleCall_2_6_2_1_0()); 
	    }
		lv_issue_20_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_20_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 7);
	 				}
					({true}?=>(
	otherlv_21=See
    {
    	newLeafNode(otherlv_21, grammarAccess.getGoalAccess().getSeeKeyword_2_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getModelReferenceQCRELREFParserRuleCall_2_7_1_0()); 
	    }
		lv_modelReference_22_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_22_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_23=Comma
    {
    	newLeafNode(otherlv_23, grammarAccess.getGoalAccess().getCommaKeyword_2_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getModelReferenceQCRELREFParserRuleCall_2_7_2_1_0()); 
	    }
		lv_modelReference_24_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_24_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 8);
	 				}
					({true}?=>(
	otherlv_25=Refines
    {
    	newLeafNode(otherlv_25, grammarAccess.getGoalAccess().getRefinesKeyword_2_8_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getRefinesReferenceGoalCrossReference_2_8_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_27=Comma
    {
    	newLeafNode(otherlv_27, grammarAccess.getGoalAccess().getCommaKeyword_2_8_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getRefinesReferenceGoalCrossReference_2_8_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 9);
	 				}
					({true}?=>(
	otherlv_29=Decomposes
    {
    	newLeafNode(otherlv_29, grammarAccess.getGoalAccess().getDecomposesKeyword_2_9_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDecomposesReferenceGoalCrossReference_2_9_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_31=Comma
    {
    	newLeafNode(otherlv_31, grammarAccess.getGoalAccess().getCommaKeyword_2_9_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDecomposesReferenceGoalCrossReference_2_9_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 10);
	 				}
					({true}?=>(
	otherlv_33=Evolves
    {
    	newLeafNode(otherlv_33, grammarAccess.getGoalAccess().getEvolvesKeyword_2_10_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getEvolvesReferenceGoalCrossReference_2_10_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_35=Comma
    {
    	newLeafNode(otherlv_35, grammarAccess.getGoalAccess().getCommaKeyword_2_10_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getEvolvesReferenceGoalCrossReference_2_10_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 11);
	 				}
					({true}?=>(
	otherlv_37=Conflicts
    {
    	newLeafNode(otherlv_37, grammarAccess.getGoalAccess().getConflictsKeyword_2_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getConflictsReferenceGoalCrossReference_2_11_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_39=Comma
    {
    	newLeafNode(otherlv_39, grammarAccess.getGoalAccess().getCommaKeyword_2_11_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getConflictsReferenceGoalCrossReference_2_11_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 12)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 12);
	 				}
					({true}?=>(
	otherlv_41=Stakeholder
    {
    	newLeafNode(otherlv_41, grammarAccess.getGoalAccess().getStakeholderKeyword_2_12_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderReferenceStakeholderCrossReference_2_12_1_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_43=Comma
    {
    	newLeafNode(otherlv_43, grammarAccess.getGoalAccess().getCommaKeyword_2_12_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderReferenceStakeholderCrossReference_2_12_2_1_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 13)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 13);
	 				}
					({true}?=>(
	otherlv_45=See
    {
    	newLeafNode(otherlv_45, grammarAccess.getGoalAccess().getSeeKeyword_2_13_0());
    }

	otherlv_46=Stakeholder
    {
    	newLeafNode(otherlv_46, grammarAccess.getGoalAccess().getStakeholderKeyword_2_13_1());
    }

	otherlv_47=Req
    {
    	newLeafNode(otherlv_47, grammarAccess.getGoalAccess().getReqKeyword_2_13_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderRequirementReferenceGoalCrossReference_2_13_3_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_49=Comma
    {
    	newLeafNode(otherlv_49, grammarAccess.getGoalAccess().getCommaKeyword_2_13_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderRequirementReferenceGoalCrossReference_2_13_4_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 14)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 14);
	 				}
					({true}?=>(
	otherlv_51=See
    {
    	newLeafNode(otherlv_51, grammarAccess.getGoalAccess().getSeeKeyword_2_14_0());
    }

	otherlv_52=System
    {
    	newLeafNode(otherlv_52, grammarAccess.getGoalAccess().getSystemKeyword_2_14_1());
    }

	otherlv_53=Req
    {
    	newLeafNode(otherlv_53, grammarAccess.getGoalAccess().getReqKeyword_2_14_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getSystemRequirementReferenceContractualElementCrossReference_2_14_3_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_55=Comma
    {
    	newLeafNode(otherlv_55, grammarAccess.getGoalAccess().getCommaKeyword_2_14_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getSystemRequirementReferenceContractualElementCrossReference_2_14_4_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 15)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 15);
	 				}
					({true}?=>(
	otherlv_57=See
    {
    	newLeafNode(otherlv_57, grammarAccess.getGoalAccess().getSeeKeyword_2_15_0());
    }

	otherlv_58=Document
    {
    	newLeafNode(otherlv_58, grammarAccess.getGoalAccess().getDocumentKeyword_2_15_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDocReferenceExternalDocumentCrossReference_2_15_2_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_60=Comma
    {
    	newLeafNode(otherlv_60, grammarAccess.getGoalAccess().getCommaKeyword_2_15_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDocReferenceExternalDocumentCrossReference_2_15_3_1_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	}

)
	otherlv_62=End
    {
    	newLeafNode(otherlv_62, grammarAccess.getGoalAccess().getEndKeyword_3());
    }
)
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Requirement
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
	otherlv_3=For
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequirementAccess().getForKeyword_2_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getTargetNamedElementCrossReference_2_0_1_0()); 
	    }
		ruleQNEREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
	otherlv_5=Category
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getCategoryKeyword_2_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getCategoryCategoryCrossReference_2_1_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_7=Comma
    {
    	newLeafNode(otherlv_7, grammarAccess.getRequirementAccess().getCommaKeyword_2_1_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getCategoryCategoryCrossReference_2_1_2_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(
	otherlv_9=Title
    {
    	newLeafNode(otherlv_9, grammarAccess.getRequirementAccess().getTitleKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getTitleValueStringParserRuleCall_2_2_1_0()); 
	    }
		lv_title_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(
	otherlv_11=Description
    {
    	newLeafNode(otherlv_11, grammarAccess.getRequirementAccess().getDescriptionKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDescriptionValueStringParserRuleCall_2_3_1_0()); 
	    }
		lv_description_12_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_12_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(
	otherlv_13=Assertion
    {
    	newLeafNode(otherlv_13, grammarAccess.getRequirementAccess().getAssertionKeyword_2_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getAssertValueStringParserRuleCall_2_4_1_0()); 
	    }
		lv_assert_14_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"assert",
        		lv_assert_14_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(
	otherlv_15=Rationale
    {
    	newLeafNode(otherlv_15, grammarAccess.getRequirementAccess().getRationaleKeyword_2_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getRationaleValueStringParserRuleCall_2_5_1_0()); 
	    }
		lv_rationale_16_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"rationale",
        		lv_rationale_16_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(
	otherlv_17=Issues
    {
    	newLeafNode(otherlv_17, grammarAccess.getRequirementAccess().getIssuesKeyword_2_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getIssueValueStringParserRuleCall_2_6_1_0()); 
	    }
		lv_issue_18_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_18_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_19=Comma
    {
    	newLeafNode(otherlv_19, grammarAccess.getRequirementAccess().getCommaKeyword_2_6_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getIssueValueStringParserRuleCall_2_6_2_1_0()); 
	    }
		lv_issue_20_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_20_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 7);
	 				}
					({true}?=>(
	otherlv_21=See
    {
    	newLeafNode(otherlv_21, grammarAccess.getRequirementAccess().getSeeKeyword_2_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getModelReferenceQCRELREFParserRuleCall_2_7_1_0()); 
	    }
		lv_modelReference_22_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_22_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_23=Comma
    {
    	newLeafNode(otherlv_23, grammarAccess.getRequirementAccess().getCommaKeyword_2_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getModelReferenceQCRELREFParserRuleCall_2_7_2_1_0()); 
	    }
		lv_modelReference_24_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_24_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 8);
	 				}
					({true}?=>(
	otherlv_25=See
    {
    	newLeafNode(otherlv_25, grammarAccess.getRequirementAccess().getSeeKeyword_2_8_0());
    }

	otherlv_26=Goal
    {
    	newLeafNode(otherlv_26, grammarAccess.getRequirementAccess().getGoalKeyword_2_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_27=RULE_ID
	{
		newLeafNode(otherlv_27, grammarAccess.getRequirementAccess().getGoalReferenceGoalCrossReference_2_8_2_0()); 
	}

)
)(
	otherlv_28=Comma
    {
    	newLeafNode(otherlv_28, grammarAccess.getRequirementAccess().getCommaKeyword_2_8_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_29=RULE_ID
	{
		newLeafNode(otherlv_29, grammarAccess.getRequirementAccess().getGoalReferenceGoalCrossReference_2_8_3_1_0()); 
	}

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 9);
	 				}
					({true}?=>(
	otherlv_30=See
    {
    	newLeafNode(otherlv_30, grammarAccess.getRequirementAccess().getSeeKeyword_2_9_0());
    }

	otherlv_31=Hazard
    {
    	newLeafNode(otherlv_31, grammarAccess.getRequirementAccess().getHazardKeyword_2_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getHazardReferenceQNEREFParserRuleCall_2_9_2_0()); 
	    }
		lv_hazardReference_32_0=ruleQNEREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"hazardReference",
        		lv_hazardReference_32_0, 
        		"QNEREF");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_33=Comma
    {
    	newLeafNode(otherlv_33, grammarAccess.getRequirementAccess().getCommaKeyword_2_9_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getHazardReferenceQNEREFParserRuleCall_2_9_3_1_0()); 
	    }
		lv_hazardReference_34_0=ruleQNEREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"hazardReference",
        		lv_hazardReference_34_0, 
        		"QNEREF");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 10);
	 				}
					({true}?=>(
	otherlv_35=Refines
    {
    	newLeafNode(otherlv_35, grammarAccess.getRequirementAccess().getRefinesKeyword_2_10_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getRefinesReferenceRequirementCrossReference_2_10_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_37=Comma
    {
    	newLeafNode(otherlv_37, grammarAccess.getRequirementAccess().getCommaKeyword_2_10_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getRefinesReferenceRequirementCrossReference_2_10_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 11);
	 				}
					({true}?=>(
	otherlv_39=Decomposes
    {
    	newLeafNode(otherlv_39, grammarAccess.getRequirementAccess().getDecomposesKeyword_2_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDecomposesReferenceRequirementCrossReference_2_11_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_41=Comma
    {
    	newLeafNode(otherlv_41, grammarAccess.getRequirementAccess().getCommaKeyword_2_11_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDecomposesReferenceRequirementCrossReference_2_11_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 12)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 12);
	 				}
					({true}?=>(
	otherlv_43=Evolves
    {
    	newLeafNode(otherlv_43, grammarAccess.getRequirementAccess().getEvolvesKeyword_2_12_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getEvolvesReferenceRequirementCrossReference_2_12_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_45=Comma
    {
    	newLeafNode(otherlv_45, grammarAccess.getRequirementAccess().getCommaKeyword_2_12_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getEvolvesReferenceRequirementCrossReference_2_12_2_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 13)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 13);
	 				}
					({true}?=>(
	otherlv_47=Verified
    {
    	newLeafNode(otherlv_47, grammarAccess.getRequirementAccess().getVerifiedKeyword_2_13_0());
    }

	otherlv_48=By
    {
    	newLeafNode(otherlv_48, grammarAccess.getRequirementAccess().getByKeyword_2_13_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getVerifiedByVerificationDecompositionParserRuleCall_2_13_2_0()); 
	    }
		lv_verifiedBy_49_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"verifiedBy",
        		lv_verifiedBy_49_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 14)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 14);
	 				}
					({true}?=>(
	otherlv_50=See
    {
    	newLeafNode(otherlv_50, grammarAccess.getRequirementAccess().getSeeKeyword_2_14_0());
    }

	otherlv_51=Stakeholder
    {
    	newLeafNode(otherlv_51, grammarAccess.getRequirementAccess().getStakeholderKeyword_2_14_1());
    }

	otherlv_52=Req
    {
    	newLeafNode(otherlv_52, grammarAccess.getRequirementAccess().getReqKeyword_2_14_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getStakeholderRequirementReferenceGoalCrossReference_2_14_3_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_54=Comma
    {
    	newLeafNode(otherlv_54, grammarAccess.getRequirementAccess().getCommaKeyword_2_14_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getStakeholderRequirementReferenceGoalCrossReference_2_14_4_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 15)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 15);
	 				}
					({true}?=>(
	otherlv_56=See
    {
    	newLeafNode(otherlv_56, grammarAccess.getRequirementAccess().getSeeKeyword_2_15_0());
    }

	otherlv_57=System
    {
    	newLeafNode(otherlv_57, grammarAccess.getRequirementAccess().getSystemKeyword_2_15_1());
    }

	otherlv_58=Req
    {
    	newLeafNode(otherlv_58, grammarAccess.getRequirementAccess().getReqKeyword_2_15_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getSystemRequirementReferenceContractualElementCrossReference_2_15_3_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_60=Comma
    {
    	newLeafNode(otherlv_60, grammarAccess.getRequirementAccess().getCommaKeyword_2_15_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getSystemRequirementReferenceContractualElementCrossReference_2_15_4_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 16)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 16);
	 				}
					({true}?=>(
	otherlv_62=See
    {
    	newLeafNode(otherlv_62, grammarAccess.getRequirementAccess().getSeeKeyword_2_16_0());
    }

	otherlv_63=Document
    {
    	newLeafNode(otherlv_63, grammarAccess.getRequirementAccess().getDocumentKeyword_2_16_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDocReferenceXDocUriParserRuleCall_2_16_2_0()); 
	    }
		lv_docReference_64_0=ruleXDocUri		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"docReference",
        		lv_docReference_64_0, 
        		"XDocUri");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_65=Comma
    {
    	newLeafNode(otherlv_65, grammarAccess.getRequirementAccess().getCommaKeyword_2_16_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDocReferenceXDocUriParserRuleCall_2_16_3_1_0()); 
	    }
		lv_docReference_66_0=ruleXDocUri		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"docReference",
        		lv_docReference_66_0, 
        		"XDocUri");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	}

)
	otherlv_67=End
    {
    	newLeafNode(otherlv_67, grammarAccess.getRequirementAccess().getEndKeyword_3());
    }

	otherlv_68=Requirement
    {
    	newLeafNode(otherlv_68, grammarAccess.getRequirementAccess().getRequirementKeyword_4());
    }
)
;





// Entry rule entryRuleExternalDocument
entryRuleExternalDocument returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExternalDocumentRule()); }
	 iv_ruleExternalDocument=ruleExternalDocument 
	 { $current=$iv_ruleExternalDocument.current; } 
	 EOF 
;

// Rule ExternalDocument
ruleExternalDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Document
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalDocumentAccess().getDocumentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalDocumentAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=See
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalDocumentAccess().getSeeKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDocumentAccess().getExternalReferenceDOCPATHParserRuleCall_3_0()); 
	    }
		lv_externalReference_3_0=ruleDOCPATH		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDocumentRule());
	        }
       		set(
       			$current, 
       			"externalReference",
        		lv_externalReference_3_0, 
        		"DOCPATH");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=End
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalDocumentAccess().getEndKeyword_4());
    }
)
;





// Entry rule entryRuleXDocUri
entryRuleXDocUri returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getXDocUriRule()); }
	 iv_ruleXDocUri=ruleXDocUri 
	 { $current=$iv_ruleXDocUri.current; } 
	 EOF 
;

// Rule XDocUri
ruleXDocUri returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXDocUriRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXDocUriAccess().getDocPathExternalDocumentCrossReference_0_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=NumberSign
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDocUriAccess().getNumberSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDocUriAccess().getDocFragmentDOCFRAGMENTParserRuleCall_1_1_0()); 
	    }
		lv_docFragment_2_0=ruleDOCFRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDocUriRule());
	        }
       		set(
       			$current, 
       			"docFragment",
        		lv_docFragment_2_0, 
        		"DOCFRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	 iv_ruleCategory=ruleCategory 
	 { $current=$iv_ruleCategory.current; } 
	 EOF 
;

// Rule Category
ruleCategory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Category
    {
    	newLeafNode(otherlv_0, grammarAccess.getCategoryAccess().getCategoryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
	otherlv_2=Extends
    {
    	newLeafNode(otherlv_2, grammarAccess.getCategoryAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCategoryAccess().getExtendsCategoryCrossReference_2_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleValueString
entryRuleValueString returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getValueStringRule()); } 
	 iv_ruleValueString=ruleValueString 
	 { $current=$iv_ruleValueString.current.getText(); }  
	 EOF 
;

// Rule ValueString
ruleValueString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleStakeholder
entryRuleStakeholder returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStakeholderRule()); }
	 iv_ruleStakeholder=ruleStakeholder 
	 { $current=$iv_ruleStakeholder.current; } 
	 EOF 
;

// Rule Stakeholder
ruleStakeholder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Stakeholder
    {
    	newLeafNode(otherlv_0, grammarAccess.getStakeholderAccess().getStakeholderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
	otherlv_3=Title
    {
    	newLeafNode(otherlv_3, grammarAccess.getStakeholderAccess().getTitleKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getTitleValueStringParserRuleCall_2_0_1_0()); 
	    }
		lv_title_4_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
	otherlv_5=Description
    {
    	newLeafNode(otherlv_5, grammarAccess.getStakeholderAccess().getDescriptionKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getDescriptionValueStringParserRuleCall_2_1_1_0()); 
	    }
		lv_description_6_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(
	otherlv_7=Role
    {
    	newLeafNode(otherlv_7, grammarAccess.getStakeholderAccess().getRoleKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getRoleValueStringParserRuleCall_2_2_1_0()); 
	    }
		lv_role_8_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"role",
        		lv_role_8_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(
	otherlv_9=Oranization
    {
    	newLeafNode(otherlv_9, grammarAccess.getStakeholderAccess().getOranizationKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getOrganziationValueStringParserRuleCall_2_3_1_0()); 
	    }
		lv_organziation_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"organziation",
        		lv_organziation_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(
	otherlv_11=Email
    {
    	newLeafNode(otherlv_11, grammarAccess.getStakeholderAccess().getEmailKeyword_2_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getEmailValueStringParserRuleCall_2_4_1_0()); 
	    }
		lv_email_12_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"email",
        		lv_email_12_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(
	otherlv_13=Phone
    {
    	newLeafNode(otherlv_13, grammarAccess.getStakeholderAccess().getPhoneKeyword_2_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getPhoneValueStringParserRuleCall_2_5_1_0()); 
	    }
		lv_phone_14_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"phone",
        		lv_phone_14_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getStakeholderAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	}

)
	otherlv_15=End
    {
    	newLeafNode(otherlv_15, grammarAccess.getStakeholderAccess().getEndKeyword_3());
    }
)
;





// Entry rule entryRuleVerificationDecomposition
entryRuleVerificationDecomposition returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationDecompositionRule()); }
	 iv_ruleVerificationDecomposition=ruleVerificationDecomposition 
	 { $current=$iv_ruleVerificationDecomposition.current; } 
	 EOF 
;

// Rule VerificationDecomposition
ruleVerificationDecomposition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityCrossReference_0_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityCrossReference_1_0_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_type_2_1=
	And
    {
        newLeafNode(lv_type_2_1, grammarAccess.getVerificationDecompositionAccess().getTypeAndKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_1, null);
	    }

    |		lv_type_2_2=
	Or
    {
        newLeafNode(lv_type_2_2, grammarAccess.getVerificationDecompositionAccess().getTypeOrKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getRightVerificationDecompositionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationDecompositionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleVerificationActivity
entryRuleVerificationActivity returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationActivityRule()); }
	 iv_ruleVerificationActivity=ruleVerificationActivity 
	 { $current=$iv_ruleVerificationActivity.current; } 
	 EOF 
;

// Rule VerificationActivity
ruleVerificationActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Verification
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0());
    }

	otherlv_1=Activity
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationActivityAccess().getActivityKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
	otherlv_3=Title
    {
    	newLeafNode(otherlv_3, grammarAccess.getVerificationActivityAccess().getTitleKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_3_1_0()); 
	    }
		lv_title_4_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_4_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_5=Description
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_1_0()); 
	    }
		lv_description_6_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_6_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_7=Method
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationActivityAccess().getMethodKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_5_1_0()); 
	    }
		lv_method_8_0=ruleVerificationMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_8_0, 
        		"VerificationMethod");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_9=Decomposed
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationActivityAccess().getDecomposedKeyword_6_0());
    }

	otherlv_10=To
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationActivityAccess().getToKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getDecomposedToVerificationDecompositionParserRuleCall_6_2_0()); 
	    }
		lv_decomposedTo_11_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		add(
       			$current, 
       			"decomposedTo",
        		lv_decomposedTo_11_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(
	otherlv_12=Assigned
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationActivityAccess().getAssignedKeyword_7_0());
    }

	otherlv_13=To
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationActivityAccess().getToKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderCrossReference_7_2_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*)?
	otherlv_15=End
    {
    	newLeafNode(otherlv_15, grammarAccess.getVerificationActivityAccess().getEndKeyword_8());
    }

	otherlv_16=Verification
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationActivityAccess().getVerificationKeyword_9());
    }

	otherlv_17=Activity
    {
    	newLeafNode(otherlv_17, grammarAccess.getVerificationActivityAccess().getActivityKeyword_10());
    }
)
;





// Entry rule entryRuleVerificationMethod
entryRuleVerificationMethod returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getVerificationMethodRule()); } 
	 iv_ruleVerificationMethod=ruleVerificationMethod 
	 { $current=$iv_ruleVerificationMethod.current.getText(); }  
	 EOF 
;

// Rule VerificationMethod
ruleVerificationMethod returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=Manual 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getManualKeyword_0()); 
    }

    |
	kw=Automatic 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getAutomaticKeyword_1()); 
    }

    |
	kw=Review 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getReviewKeyword_2()); 
    }

    |
	kw=Testing 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getTestingKeyword_3()); 
    }

    |
	kw=Analysis 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getAnalysisKeyword_4()); 
    }

    |
	kw=Verification 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getVerificationKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleVerificationResult
entryRuleVerificationResult returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationResultRule()); }
	 iv_ruleVerificationResult=ruleVerificationResult 
	 { $current=$iv_ruleVerificationResult.current; } 
	 EOF 
;

// Rule VerificationResult
ruleVerificationResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Verification
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationResultAccess().getVerificationKeyword_0());
    }

	otherlv_1=Result
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationResultAccess().getResultKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationResultAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)
	otherlv_3=Of
    {
    	newLeafNode(otherlv_3, grammarAccess.getVerificationResultAccess().getOfKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityCrossReference_4_0()); 
	}

)
)*(
	otherlv_5=Output
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationResultAccess().getOutputKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getTitleValueStringParserRuleCall_5_1_0()); 
	    }
		lv_title_6_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_6_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_7=Logfile
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationResultAccess().getLogfileKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getDescriptionValueStringParserRuleCall_6_1_0()); 
	    }
		lv_description_8_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_8_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_9=Date
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationResultAccess().getDateKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getMethodValueStringParserRuleCall_7_1_0()); 
	    }
		lv_method_10_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_10_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_11=State
    {
    	newLeafNode(otherlv_11, grammarAccess.getVerificationResultAccess().getStateKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStateVerificationResultStateEnumRuleCall_8_1_0()); 
	    }
		lv_state_12_0=ruleVerificationResultState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"state",
        		lv_state_12_0, 
        		"VerificationResultState");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
	otherlv_13=Status
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationResultAccess().getStatusKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStatusVerificationResultStatusEnumRuleCall_9_1_0()); 
	    }
		lv_status_14_0=ruleVerificationResultStatus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"status",
        		lv_status_14_0, 
        		"VerificationResultStatus");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_15=End
    {
    	newLeafNode(otherlv_15, grammarAccess.getVerificationResultAccess().getEndKeyword_10());
    }

	otherlv_16=Verification
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationResultAccess().getVerificationKeyword_11());
    }

	otherlv_17=Result
    {
    	newLeafNode(otherlv_17, grammarAccess.getVerificationResultAccess().getResultKeyword_12());
    }
)
;







// Entry rule entryRuleQPREF
entryRuleQPREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQPREFRule()); } 
	 iv_ruleQPREF=ruleQPREF 
	 { $current=$iv_ruleQPREF.current.getText(); }  
	 EOF 
;

// Rule QPREF
ruleQPREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQNEREF
entryRuleQNEREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQNEREFRule()); } 
	 iv_ruleQNEREF=ruleQNEREF 
	 { $current=$iv_ruleQNEREF.current.getText(); }  
	 EOF 
;

// Rule QNEREF
ruleQNEREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQNEREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQNEREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQNEREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQNEREFAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQNEREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)*)
    ;





// Entry rule entryRuleQCRELREF
entryRuleQCRELREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCRELREFRule()); } 
	 iv_ruleQCRELREF=ruleQCRELREF 
	 { $current=$iv_ruleQCRELREF.current.getText(); }  
	 EOF 
;

// Rule QCRELREF
ruleQCRELREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
    { 
        newCompositeNode(grammarAccess.getQCRELREFAccess().getQNEREFParserRuleCall_0_0()); 
    }
    this_QNEREF_0=ruleQNEREF    {
		$current.merge(this_QNEREF_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
    { 
        newCompositeNode(grammarAccess.getQCRELREFAccess().getPAREFParserRuleCall_0_1()); 
    }
    this_PAREF_1=rulePAREF    {
		$current.merge(this_PAREF_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    |
    { 
        newCompositeNode(grammarAccess.getQCRELREFAccess().getPAREFParserRuleCall_1()); 
    }
    this_PAREF_2=rulePAREF    {
		$current.merge(this_PAREF_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleRELREF
entryRuleRELREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getRELREFRule()); } 
	 iv_ruleRELREF=ruleRELREF 
	 { $current=$iv_ruleRELREF.current.getText(); }  
	 EOF 
;

// Rule RELREF
ruleRELREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getRELREFAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRELREFAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getRELREFAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleCATREF
entryRuleCATREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getCATREFRule()); } 
	 iv_ruleCATREF=ruleCATREF 
	 { $current=$iv_ruleCATREF.current.getText(); }  
	 EOF 
;

// Rule CATREF
ruleCATREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getCATREFAccess().getIDTerminalRuleCall_0()); 
    }

	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCATREFAccess().getFullStopKeyword_1()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getCATREFAccess().getIDTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePAREF
entryRulePAREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPAREFRule()); } 
	 iv_rulePAREF=rulePAREF 
	 { $current=$iv_rulePAREF.current.getText(); }  
	 EOF 
;

// Rule PAREF
rulePAREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=NumberSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPAREFAccess().getNumberSignKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getPAREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPAREFAccess().getColonColonKeyword_2_0()); 
    }
    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getPAREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleREQREF
entryRuleREQREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getREQREFRule()); } 
	 iv_ruleREQREF=ruleREQREF 
	 { $current=$iv_ruleREQREF.current.getText(); }  
	 EOF 
;

// Rule REQREF
ruleREQREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getREQREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getREQREFAccess().getFullStopKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getREQREFAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDOCPATH
entryRuleDOCPATH returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getDOCPATHRule()); } 
	 iv_ruleDOCPATH=ruleDOCPATH 
	 { $current=$iv_ruleDOCPATH.current.getText(); }  
	 EOF 
;

// Rule DOCPATH
ruleDOCPATH returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=Solidus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOCPATHAccess().getSolidusKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_1()); 
    }

	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOCPATHAccess().getFullStopKeyword_2()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleDOCFRAGMENT
entryRuleDOCFRAGMENT returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getDOCFRAGMENTRule()); } 
	 iv_ruleDOCFRAGMENT=ruleDOCFRAGMENT 
	 { $current=$iv_ruleDOCFRAGMENT.current.getText(); }  
	 EOF 
;

// Rule DOCFRAGMENT
ruleDOCFRAGMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getDOCFRAGMENTAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOCFRAGMENTAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getDOCFRAGMENTAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule VerificationResultState
ruleVerificationResultState returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=Scheduled
    {
        $current = grammarAccess.getVerificationResultStateAccess().getSCHEDULEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStateAccess().getSCHEDULEDEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=Completed
    {
        $current = grammarAccess.getVerificationResultStateAccess().getCOMPLETEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStateAccess().getCOMPLETEDEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=Inprogress
    {
        $current = grammarAccess.getVerificationResultStateAccess().getINPROGRESSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStateAccess().getINPROGRESSEnumLiteralDeclaration_2()); 
    }
));



// Rule VerificationResultStatus
ruleVerificationResultStatus returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=Pass
    {
        $current = grammarAccess.getVerificationResultStatusAccess().getPASSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStatusAccess().getPASSEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=Fail
    {
        $current = grammarAccess.getVerificationResultStatusAccess().getFAILEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStatusAccess().getFAILEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=Unknown
    {
        $current = grammarAccess.getVerificationResultStatusAccess().getUNKNOWNEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStatusAccess().getUNKNOWNEnumLiteralDeclaration_2()); 
    }
));



