/*
* generated by Xtext
*/
parser grammar InternalAlisaParser;

options {
	tokenVocab=InternalAlisaLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package edu.cmu.sei.alisa.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.cmu.sei.alisa.services.AlisaGrammarAccess;

}

@members {


	private AlisaGrammarAccess grammarAccess;
	 	
	public InternalAlisaParser(TokenStream input, AlisaGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "AlisaModel";	
	} 
	   	   	
	@Override
	protected AlisaGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleAlisaModel
entryRuleAlisaModel returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAlisaModelRule()); }
	 iv_ruleAlisaModel=ruleAlisaModel 
	 { $current=$iv_ruleAlisaModel.current; } 
	 EOF 
;

// Rule AlisaModel
ruleAlisaModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAlisaModelAccess().getRDAPackageParserRuleCall_0()); 
    }
    this_RDAPackage_0=ruleRDAPackage
    {
        $current = $this_RDAPackage_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAlisaModelAccess().getVerificationLibraryParserRuleCall_1()); 
    }
    this_VerificationLibrary_1=ruleVerificationLibrary
    {
        $current = $this_VerificationLibrary_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAlisaModelAccess().getRequirementDocumentParserRuleCall_2()); 
    }
    this_RequirementDocument_2=ruleRequirementDocument
    {
        $current = $this_RequirementDocument_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAlisaModelAccess().getOrganizationParserRuleCall_3()); 
    }
    this_Organization_3=ruleOrganization
    {
        $current = $this_Organization_3.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAlisaModelAccess().getExternalDocumentsParserRuleCall_4()); 
    }
    this_ExternalDocuments_4=ruleExternalDocuments
    {
        $current = $this_ExternalDocuments_4.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAlisaModelAccess().getAlisaConfigurationParserRuleCall_5()); 
    }
    this_AlisaConfiguration_5=ruleAlisaConfiguration
    {
        $current = $this_AlisaConfiguration_5.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleContractualElement
entryRuleContractualElement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContractualElementRule()); }
	 iv_ruleContractualElement=ruleContractualElement 
	 { $current=$iv_ruleContractualElement.current; } 
	 EOF 
;

// Rule ContractualElement
ruleContractualElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getContractualElementAccess().getGoalParserRuleCall_0()); 
    }
    this_Goal_0=ruleGoal
    {
        $current = $this_Goal_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getContractualElementAccess().getRequirementParserRuleCall_1()); 
    }
    this_Requirement_1=ruleRequirement
    {
        $current = $this_Requirement_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReqDocContent
entryRuleReqDocContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getReqDocContentRule()); }
	 iv_ruleReqDocContent=ruleReqDocContent 
	 { $current=$iv_ruleReqDocContent.current; } 
	 EOF 
;

// Rule ReqDocContent
ruleReqDocContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getReqDocContentAccess().getContractualElementParserRuleCall_0()); 
    }
    this_ContractualElement_0=ruleContractualElement
    {
        $current = $this_ContractualElement_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getReqDocContentAccess().getDocumentSectionParserRuleCall_1()); 
    }
    this_DocumentSection_1=ruleDocumentSection
    {
        $current = $this_DocumentSection_1.current;
        afterParserOrEnumRuleCall();
    }
)
;











// Entry rule entryRuleRequirementDocument
entryRuleRequirementDocument returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRequirementDocumentRule()); }
	 iv_ruleRequirementDocument=ruleRequirementDocument 
	 { $current=$iv_ruleRequirementDocument.current; } 
	 EOF 
;

// Rule RequirementDocument
ruleRequirementDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Requirement
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementDocumentAccess().getRequirementKeyword_0());
    }

	otherlv_1=Document
    {
    	newLeafNode(otherlv_1, grammarAccess.getRequirementDocumentAccess().getDocumentKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getRequirementDocumentAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementDocumentAccess().getContentReqDocContentParserRuleCall_3_0()); 
	    }
		lv_content_3_0=ruleReqDocContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementDocumentRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"ReqDocContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_4=End
    {
    	newLeafNode(otherlv_4, grammarAccess.getRequirementDocumentAccess().getEndKeyword_4());
    }

	otherlv_5=Requirement
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementDocumentAccess().getRequirementKeyword_5());
    }

	otherlv_6=Document
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequirementDocumentAccess().getDocumentKeyword_6());
    }

	otherlv_7=Semicolon
    {
    	newLeafNode(otherlv_7, grammarAccess.getRequirementDocumentAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleDocumentSection
entryRuleDocumentSection returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDocumentSectionRule()); }
	 iv_ruleDocumentSection=ruleDocumentSection 
	 { $current=$iv_ruleDocumentSection.current; } 
	 EOF 
;

// Rule DocumentSection
ruleDocumentSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Section
    {
    	newLeafNode(otherlv_0, grammarAccess.getDocumentSectionAccess().getSectionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDocumentSectionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentSectionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDocumentSectionAccess().getContentReqDocContentParserRuleCall_2_0()); 
	    }
		lv_content_2_0=ruleReqDocContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDocumentSectionRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_2_0, 
        		"ReqDocContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_3=End
    {
    	newLeafNode(otherlv_3, grammarAccess.getDocumentSectionAccess().getEndKeyword_3());
    }

	otherlv_4=Section
    {
    	newLeafNode(otherlv_4, grammarAccess.getDocumentSectionAccess().getSectionKeyword_4());
    }

	otherlv_5=Semicolon
    {
    	newLeafNode(otherlv_5, grammarAccess.getDocumentSectionAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleVerificationLibrary
entryRuleVerificationLibrary returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationLibraryRule()); }
	 iv_ruleVerificationLibrary=ruleVerificationLibrary 
	 { $current=$iv_ruleVerificationLibrary.current; } 
	 EOF 
;

// Rule VerificationLibrary
ruleVerificationLibrary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Verification
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationLibraryAccess().getVerificationKeyword_0());
    }

	otherlv_1=Library
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationLibraryAccess().getLibraryKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationLibraryAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationLibraryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getContentVerificationActivityParserRuleCall_3_0_0()); 
	    }
		lv_content_3_1=ruleVerificationActivity		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationLibraryRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_1, 
        		"VerificationActivity");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getVerificationLibraryAccess().getContentVerificationResultParserRuleCall_3_0_1()); 
	    }
		lv_content_3_2=ruleVerificationResult		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationLibraryRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_3_2, 
        		"VerificationResult");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*
	otherlv_4=End
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationLibraryAccess().getEndKeyword_4());
    }

	otherlv_5=Verification
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationLibraryAccess().getVerificationKeyword_5());
    }

	otherlv_6=Library
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationLibraryAccess().getLibraryKeyword_6());
    }

	otherlv_7=Semicolon
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationLibraryAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleRDAPackage
entryRuleRDAPackage returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRDAPackageRule()); }
	 iv_ruleRDAPackage=ruleRDAPackage 
	 { $current=$iv_ruleRDAPackage.current; } 
	 EOF 
;

// Rule RDAPackage
ruleRDAPackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Package
    {
    	newLeafNode(otherlv_0, grammarAccess.getRDAPackageAccess().getPackageKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRDAPackageAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRDAPackageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
	otherlv_2=Imports
    {
    	newLeafNode(otherlv_2, grammarAccess.getRDAPackageAccess().getImportsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRDAPackageRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getRDAPackageAccess().getImportedNamespaceAlisaNameSpaceCrossReference_2_1_0()); 
	}

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getRDAPackageAccess().getCommaKeyword_2_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRDAPackageRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getRDAPackageAccess().getImportedNamespaceAlisaNameSpaceCrossReference_2_2_1_0()); 
	}

)
))*
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getRDAPackageAccess().getSemicolonKeyword_2_3());
    }
)?(
	otherlv_7=With
    {
    	newLeafNode(otherlv_7, grammarAccess.getRDAPackageAccess().getWithKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRDAPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRDAPackageAccess().getImportedNamespaceAadlPackageCrossReference_3_1_0()); 
	    }
		ruleQPREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_9=Comma
    {
    	newLeafNode(otherlv_9, grammarAccess.getRDAPackageAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRDAPackageRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRDAPackageAccess().getImportedNamespaceAadlPackageCrossReference_3_2_1_0()); 
	    }
		ruleQPREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_11=Semicolon
    {
    	newLeafNode(otherlv_11, grammarAccess.getRDAPackageAccess().getSemicolonKeyword_3_3());
    }
)?(
(
(
		{ 
	        newCompositeNode(grammarAccess.getRDAPackageAccess().getContentGoalsParserRuleCall_4_0_0()); 
	    }
		lv_content_12_1=ruleGoals		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRDAPackageRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_12_1, 
        		"Goals");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getRDAPackageAccess().getContentRequirementsParserRuleCall_4_0_1()); 
	    }
		lv_content_12_2=ruleRequirements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRDAPackageRule());
	        }
       		add(
       			$current, 
       			"content",
        		lv_content_12_2, 
        		"Requirements");
	        afterParserOrEnumRuleCall();
	    }

)

)
)*
	otherlv_13=End
    {
    	newLeafNode(otherlv_13, grammarAccess.getRDAPackageAccess().getEndKeyword_5());
    }

	otherlv_14=Package
    {
    	newLeafNode(otherlv_14, grammarAccess.getRDAPackageAccess().getPackageKeyword_6());
    }

	otherlv_15=Semicolon
    {
    	newLeafNode(otherlv_15, grammarAccess.getRDAPackageAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleGoals
entryRuleGoals returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalsRule()); }
	 iv_ruleGoals=ruleGoals 
	 { $current=$iv_ruleGoals.current; } 
	 EOF 
;

// Rule Goals
ruleGoals returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Goals
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalsAccess().getGoalsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGoalsAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=For
    {
    	newLeafNode(otherlv_2, grammarAccess.getGoalsAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalsAccess().getTargetNamedElementCrossReference_3_0()); 
	    }
		ruleQCLREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalsAccess().getGoalsGoalParserRuleCall_4_0()); 
	    }
		lv_goals_4_0=ruleGoal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalsRule());
	        }
       		add(
       			$current, 
       			"goals",
        		lv_goals_4_0, 
        		"Goal");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
	otherlv_5=Issues
    {
    	newLeafNode(otherlv_5, grammarAccess.getGoalsAccess().getIssuesKeyword_5_0());
    }

	otherlv_6=Colon
    {
    	newLeafNode(otherlv_6, grammarAccess.getGoalsAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalsAccess().getIssueValueStringParserRuleCall_5_2_0()); 
	    }
		lv_issue_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalsRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_8=Comma
    {
    	newLeafNode(otherlv_8, grammarAccess.getGoalsAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalsAccess().getIssueValueStringParserRuleCall_5_3_1_0()); 
	    }
		lv_issue_9_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalsRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_9_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_10=Semicolon
    {
    	newLeafNode(otherlv_10, grammarAccess.getGoalsAccess().getSemicolonKeyword_5_4());
    }
)?
	otherlv_11=End
    {
    	newLeafNode(otherlv_11, grammarAccess.getGoalsAccess().getEndKeyword_6());
    }

	otherlv_12=Goals
    {
    	newLeafNode(otherlv_12, grammarAccess.getGoalsAccess().getGoalsKeyword_7());
    }

	otherlv_13=Semicolon
    {
    	newLeafNode(otherlv_13, grammarAccess.getGoalsAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleGoal
entryRuleGoal returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalRule()); }
	 iv_ruleGoal=ruleGoal 
	 { $current=$iv_ruleGoal.current; } 
	 EOF 
;

// Rule Goal
ruleGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Goal
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
	otherlv_3=For
    {
    	newLeafNode(otherlv_3, grammarAccess.getGoalAccess().getForKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getTargetRELREFParserRuleCall_2_0_1_0()); 
	    }
		lv_target_4_0=ruleRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_4_0, 
        		"RELREF");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
	otherlv_5=Category
    {
    	newLeafNode(otherlv_5, grammarAccess.getGoalAccess().getCategoryKeyword_2_1_0());
    }

	otherlv_6=Colon
    {
    	newLeafNode(otherlv_6, grammarAccess.getGoalAccess().getColonKeyword_2_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getCategoryCategoryCrossReference_2_1_2_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_8=Comma
    {
    	newLeafNode(otherlv_8, grammarAccess.getGoalAccess().getCommaKeyword_2_1_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getCategoryCategoryCrossReference_2_1_3_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_10=Semicolon
    {
    	newLeafNode(otherlv_10, grammarAccess.getGoalAccess().getSemicolonKeyword_2_1_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(
	otherlv_11=Title
    {
    	newLeafNode(otherlv_11, grammarAccess.getGoalAccess().getTitleKeyword_2_2_0());
    }

	otherlv_12=Colon
    {
    	newLeafNode(otherlv_12, grammarAccess.getGoalAccess().getColonKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getTitleValueStringParserRuleCall_2_2_2_0()); 
	    }
		lv_title_13_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_13_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=Semicolon
    {
    	newLeafNode(otherlv_14, grammarAccess.getGoalAccess().getSemicolonKeyword_2_2_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(
	otherlv_15=Description
    {
    	newLeafNode(otherlv_15, grammarAccess.getGoalAccess().getDescriptionKeyword_2_3_0());
    }

	otherlv_16=Colon
    {
    	newLeafNode(otherlv_16, grammarAccess.getGoalAccess().getColonKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDescriptionValueStringParserRuleCall_2_3_2_0()); 
	    }
		lv_description_17_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_17_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_18=Semicolon
    {
    	newLeafNode(otherlv_18, grammarAccess.getGoalAccess().getSemicolonKeyword_2_3_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(
	otherlv_19=Assertion
    {
    	newLeafNode(otherlv_19, grammarAccess.getGoalAccess().getAssertionKeyword_2_4_0());
    }

	otherlv_20=Colon
    {
    	newLeafNode(otherlv_20, grammarAccess.getGoalAccess().getColonKeyword_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getAssertValueStringParserRuleCall_2_4_2_0()); 
	    }
		lv_assert_21_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"assert",
        		lv_assert_21_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_22=Semicolon
    {
    	newLeafNode(otherlv_22, grammarAccess.getGoalAccess().getSemicolonKeyword_2_4_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(
	otherlv_23=Rationale
    {
    	newLeafNode(otherlv_23, grammarAccess.getGoalAccess().getRationaleKeyword_2_5_0());
    }

	otherlv_24=Colon
    {
    	newLeafNode(otherlv_24, grammarAccess.getGoalAccess().getColonKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getRationaleValueStringParserRuleCall_2_5_2_0()); 
	    }
		lv_rationale_25_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"rationale",
        		lv_rationale_25_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_26=Semicolon
    {
    	newLeafNode(otherlv_26, grammarAccess.getGoalAccess().getSemicolonKeyword_2_5_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(
	otherlv_27=Issues
    {
    	newLeafNode(otherlv_27, grammarAccess.getGoalAccess().getIssuesKeyword_2_6_0());
    }

	otherlv_28=Colon
    {
    	newLeafNode(otherlv_28, grammarAccess.getGoalAccess().getColonKeyword_2_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getIssueValueStringParserRuleCall_2_6_2_0()); 
	    }
		lv_issue_29_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_29_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_30=Comma
    {
    	newLeafNode(otherlv_30, grammarAccess.getGoalAccess().getCommaKeyword_2_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getIssueValueStringParserRuleCall_2_6_3_1_0()); 
	    }
		lv_issue_31_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_31_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_32=Semicolon
    {
    	newLeafNode(otherlv_32, grammarAccess.getGoalAccess().getSemicolonKeyword_2_6_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 7);
	 				}
					({true}?=>(
	otherlv_33=See
    {
    	newLeafNode(otherlv_33, grammarAccess.getGoalAccess().getSeeKeyword_2_7_0());
    }

	otherlv_34=Colon
    {
    	newLeafNode(otherlv_34, grammarAccess.getGoalAccess().getColonKeyword_2_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getModelReferenceQCRELREFParserRuleCall_2_7_2_0()); 
	    }
		lv_modelReference_35_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_35_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_36=Comma
    {
    	newLeafNode(otherlv_36, grammarAccess.getGoalAccess().getCommaKeyword_2_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getModelReferenceQCRELREFParserRuleCall_2_7_3_1_0()); 
	    }
		lv_modelReference_37_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_37_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_38=Semicolon
    {
    	newLeafNode(otherlv_38, grammarAccess.getGoalAccess().getSemicolonKeyword_2_7_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 8);
	 				}
					({true}?=>(
	otherlv_39=Refines
    {
    	newLeafNode(otherlv_39, grammarAccess.getGoalAccess().getRefinesKeyword_2_8_0());
    }

	otherlv_40=Colon
    {
    	newLeafNode(otherlv_40, grammarAccess.getGoalAccess().getColonKeyword_2_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getRefinesReferenceGoalCrossReference_2_8_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_42=Comma
    {
    	newLeafNode(otherlv_42, grammarAccess.getGoalAccess().getCommaKeyword_2_8_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getRefinesReferenceGoalCrossReference_2_8_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_44=Semicolon
    {
    	newLeafNode(otherlv_44, grammarAccess.getGoalAccess().getSemicolonKeyword_2_8_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 9);
	 				}
					({true}?=>(
	otherlv_45=Decomposes
    {
    	newLeafNode(otherlv_45, grammarAccess.getGoalAccess().getDecomposesKeyword_2_9_0());
    }

	otherlv_46=Colon
    {
    	newLeafNode(otherlv_46, grammarAccess.getGoalAccess().getColonKeyword_2_9_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDecomposesReferenceGoalCrossReference_2_9_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_48=Comma
    {
    	newLeafNode(otherlv_48, grammarAccess.getGoalAccess().getCommaKeyword_2_9_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDecomposesReferenceGoalCrossReference_2_9_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_50=Semicolon
    {
    	newLeafNode(otherlv_50, grammarAccess.getGoalAccess().getSemicolonKeyword_2_9_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 10);
	 				}
					({true}?=>(
	otherlv_51=Evolves
    {
    	newLeafNode(otherlv_51, grammarAccess.getGoalAccess().getEvolvesKeyword_2_10_0());
    }

	otherlv_52=Colon
    {
    	newLeafNode(otherlv_52, grammarAccess.getGoalAccess().getColonKeyword_2_10_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getEvolvesReferenceGoalCrossReference_2_10_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_54=Comma
    {
    	newLeafNode(otherlv_54, grammarAccess.getGoalAccess().getCommaKeyword_2_10_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getEvolvesReferenceGoalCrossReference_2_10_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_56=Semicolon
    {
    	newLeafNode(otherlv_56, grammarAccess.getGoalAccess().getSemicolonKeyword_2_10_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 11);
	 				}
					({true}?=>(
	otherlv_57=Conflicts
    {
    	newLeafNode(otherlv_57, grammarAccess.getGoalAccess().getConflictsKeyword_2_11_0());
    }

	otherlv_58=Colon
    {
    	newLeafNode(otherlv_58, grammarAccess.getGoalAccess().getColonKeyword_2_11_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getConflictsReferenceGoalCrossReference_2_11_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_60=Comma
    {
    	newLeafNode(otherlv_60, grammarAccess.getGoalAccess().getCommaKeyword_2_11_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getConflictsReferenceGoalCrossReference_2_11_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_62=Semicolon
    {
    	newLeafNode(otherlv_62, grammarAccess.getGoalAccess().getSemicolonKeyword_2_11_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 12)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 12);
	 				}
					({true}?=>(
	otherlv_63=Stakeholder
    {
    	newLeafNode(otherlv_63, grammarAccess.getGoalAccess().getStakeholderKeyword_2_12_0());
    }

	otherlv_64=Colon
    {
    	newLeafNode(otherlv_64, grammarAccess.getGoalAccess().getColonKeyword_2_12_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderReferenceStakeholderCrossReference_2_12_2_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_66=Comma
    {
    	newLeafNode(otherlv_66, grammarAccess.getGoalAccess().getCommaKeyword_2_12_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderReferenceStakeholderCrossReference_2_12_3_1_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_68=Semicolon
    {
    	newLeafNode(otherlv_68, grammarAccess.getGoalAccess().getSemicolonKeyword_2_12_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 13)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 13);
	 				}
					({true}?=>(
	otherlv_69=See
    {
    	newLeafNode(otherlv_69, grammarAccess.getGoalAccess().getSeeKeyword_2_13_0());
    }

	otherlv_70=Stakeholder
    {
    	newLeafNode(otherlv_70, grammarAccess.getGoalAccess().getStakeholderKeyword_2_13_1());
    }

	otherlv_71=Req
    {
    	newLeafNode(otherlv_71, grammarAccess.getGoalAccess().getReqKeyword_2_13_2());
    }

	otherlv_72=Colon
    {
    	newLeafNode(otherlv_72, grammarAccess.getGoalAccess().getColonKeyword_2_13_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderRequirementReferenceGoalCrossReference_2_13_4_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_74=Comma
    {
    	newLeafNode(otherlv_74, grammarAccess.getGoalAccess().getCommaKeyword_2_13_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getStakeholderRequirementReferenceGoalCrossReference_2_13_5_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_76=Semicolon
    {
    	newLeafNode(otherlv_76, grammarAccess.getGoalAccess().getSemicolonKeyword_2_13_6());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 14)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 14);
	 				}
					({true}?=>(
	otherlv_77=See
    {
    	newLeafNode(otherlv_77, grammarAccess.getGoalAccess().getSeeKeyword_2_14_0());
    }

	otherlv_78=System
    {
    	newLeafNode(otherlv_78, grammarAccess.getGoalAccess().getSystemKeyword_2_14_1());
    }

	otherlv_79=Req
    {
    	newLeafNode(otherlv_79, grammarAccess.getGoalAccess().getReqKeyword_2_14_2());
    }

	otherlv_80=Colon
    {
    	newLeafNode(otherlv_80, grammarAccess.getGoalAccess().getColonKeyword_2_14_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getSystemRequirementReferenceContractualElementCrossReference_2_14_4_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_82=Comma
    {
    	newLeafNode(otherlv_82, grammarAccess.getGoalAccess().getCommaKeyword_2_14_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getSystemRequirementReferenceContractualElementCrossReference_2_14_5_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_84=Semicolon
    {
    	newLeafNode(otherlv_84, grammarAccess.getGoalAccess().getSemicolonKeyword_2_14_6());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 15)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getGoalAccess().getUnorderedGroup_2(), 15);
	 				}
					({true}?=>(
	otherlv_85=See
    {
    	newLeafNode(otherlv_85, grammarAccess.getGoalAccess().getSeeKeyword_2_15_0());
    }

	otherlv_86=Document
    {
    	newLeafNode(otherlv_86, grammarAccess.getGoalAccess().getDocumentKeyword_2_15_1());
    }

	otherlv_87=Colon
    {
    	newLeafNode(otherlv_87, grammarAccess.getGoalAccess().getColonKeyword_2_15_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDocReferenceExternalDocumentCrossReference_2_15_3_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_89=Comma
    {
    	newLeafNode(otherlv_89, grammarAccess.getGoalAccess().getCommaKeyword_2_15_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDocReferenceExternalDocumentCrossReference_2_15_4_1_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_91=Semicolon
    {
    	newLeafNode(otherlv_91, grammarAccess.getGoalAccess().getSemicolonKeyword_2_15_5());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getGoalAccess().getUnorderedGroup_2());
	}

)
	otherlv_92=End
    {
    	newLeafNode(otherlv_92, grammarAccess.getGoalAccess().getEndKeyword_3());
    }

	otherlv_93=Goal
    {
    	newLeafNode(otherlv_93, grammarAccess.getGoalAccess().getGoalKeyword_4());
    }

	otherlv_94=Semicolon
    {
    	newLeafNode(otherlv_94, grammarAccess.getGoalAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleRequirements
entryRuleRequirements returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRequirementsRule()); }
	 iv_ruleRequirements=ruleRequirements 
	 { $current=$iv_ruleRequirements.current; } 
	 EOF 
;

// Rule Requirements
ruleRequirements returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Requirements
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementsAccess().getRequirementsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementsAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=For
    {
    	newLeafNode(otherlv_2, grammarAccess.getRequirementsAccess().getForKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementsRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementsAccess().getTargetNamedElementCrossReference_3_0()); 
	    }
		ruleQCLREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementsAccess().getReqsRequirementParserRuleCall_4_0()); 
	    }
		lv_reqs_4_0=ruleRequirement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementsRule());
	        }
       		add(
       			$current, 
       			"reqs",
        		lv_reqs_4_0, 
        		"Requirement");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
	otherlv_5=Issues
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementsAccess().getIssuesKeyword_5_0());
    }

	otherlv_6=Colon
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequirementsAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementsAccess().getIssueValueStringParserRuleCall_5_2_0()); 
	    }
		lv_issue_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementsRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_8=Comma
    {
    	newLeafNode(otherlv_8, grammarAccess.getRequirementsAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementsAccess().getIssueValueStringParserRuleCall_5_3_1_0()); 
	    }
		lv_issue_9_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementsRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_9_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_10=Semicolon
    {
    	newLeafNode(otherlv_10, grammarAccess.getRequirementsAccess().getSemicolonKeyword_5_4());
    }
)?
	otherlv_11=End
    {
    	newLeafNode(otherlv_11, grammarAccess.getRequirementsAccess().getEndKeyword_6());
    }

	otherlv_12=Requirements
    {
    	newLeafNode(otherlv_12, grammarAccess.getRequirementsAccess().getRequirementsKeyword_7());
    }

	otherlv_13=Semicolon
    {
    	newLeafNode(otherlv_13, grammarAccess.getRequirementsAccess().getSemicolonKeyword_8());
    }
)
;





// Entry rule entryRuleRequirement
entryRuleRequirement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRequirementRule()); }
	 iv_ruleRequirement=ruleRequirement 
	 { $current=$iv_ruleRequirement.current; } 
	 EOF 
;

// Rule Requirement
ruleRequirement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Requirement
    {
    	newLeafNode(otherlv_0, grammarAccess.getRequirementAccess().getRequirementKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRequirementAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
	otherlv_3=For
    {
    	newLeafNode(otherlv_3, grammarAccess.getRequirementAccess().getForKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getTargetRELREFParserRuleCall_2_0_1_0()); 
	    }
		lv_target_4_0=ruleRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_4_0, 
        		"RELREF");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
	otherlv_5=Category
    {
    	newLeafNode(otherlv_5, grammarAccess.getRequirementAccess().getCategoryKeyword_2_1_0());
    }

	otherlv_6=Colon
    {
    	newLeafNode(otherlv_6, grammarAccess.getRequirementAccess().getColonKeyword_2_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getCategoryCategoryCrossReference_2_1_2_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_8=Comma
    {
    	newLeafNode(otherlv_8, grammarAccess.getRequirementAccess().getCommaKeyword_2_1_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getCategoryCategoryCrossReference_2_1_3_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_10=Semicolon
    {
    	newLeafNode(otherlv_10, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_1_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(
	otherlv_11=Title
    {
    	newLeafNode(otherlv_11, grammarAccess.getRequirementAccess().getTitleKeyword_2_2_0());
    }

	otherlv_12=Colon
    {
    	newLeafNode(otherlv_12, grammarAccess.getRequirementAccess().getColonKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getTitleValueStringParserRuleCall_2_2_2_0()); 
	    }
		lv_title_13_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_13_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=Semicolon
    {
    	newLeafNode(otherlv_14, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_2_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(
	otherlv_15=Description
    {
    	newLeafNode(otherlv_15, grammarAccess.getRequirementAccess().getDescriptionKeyword_2_3_0());
    }

	otherlv_16=Colon
    {
    	newLeafNode(otherlv_16, grammarAccess.getRequirementAccess().getColonKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDescriptionValueStringParserRuleCall_2_3_2_0()); 
	    }
		lv_description_17_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_17_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_18=Semicolon
    {
    	newLeafNode(otherlv_18, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_3_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(
	otherlv_19=Assertion
    {
    	newLeafNode(otherlv_19, grammarAccess.getRequirementAccess().getAssertionKeyword_2_4_0());
    }

	otherlv_20=Colon
    {
    	newLeafNode(otherlv_20, grammarAccess.getRequirementAccess().getColonKeyword_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getAssertValueStringParserRuleCall_2_4_2_0()); 
	    }
		lv_assert_21_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"assert",
        		lv_assert_21_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_22=Semicolon
    {
    	newLeafNode(otherlv_22, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_4_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(
	otherlv_23=Rationale
    {
    	newLeafNode(otherlv_23, grammarAccess.getRequirementAccess().getRationaleKeyword_2_5_0());
    }

	otherlv_24=Colon
    {
    	newLeafNode(otherlv_24, grammarAccess.getRequirementAccess().getColonKeyword_2_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getRationaleValueStringParserRuleCall_2_5_2_0()); 
	    }
		lv_rationale_25_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		set(
       			$current, 
       			"rationale",
        		lv_rationale_25_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_26=Semicolon
    {
    	newLeafNode(otherlv_26, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_5_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(
	otherlv_27=Issues
    {
    	newLeafNode(otherlv_27, grammarAccess.getRequirementAccess().getIssuesKeyword_2_6_0());
    }

	otherlv_28=Colon
    {
    	newLeafNode(otherlv_28, grammarAccess.getRequirementAccess().getColonKeyword_2_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getIssueValueStringParserRuleCall_2_6_2_0()); 
	    }
		lv_issue_29_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_29_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_30=Comma
    {
    	newLeafNode(otherlv_30, grammarAccess.getRequirementAccess().getCommaKeyword_2_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getIssueValueStringParserRuleCall_2_6_3_1_0()); 
	    }
		lv_issue_31_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"issue",
        		lv_issue_31_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_32=Semicolon
    {
    	newLeafNode(otherlv_32, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_6_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 7);
	 				}
					({true}?=>(
	otherlv_33=See
    {
    	newLeafNode(otherlv_33, grammarAccess.getRequirementAccess().getSeeKeyword_2_7_0());
    }

	otherlv_34=Colon
    {
    	newLeafNode(otherlv_34, grammarAccess.getRequirementAccess().getColonKeyword_2_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getModelReferenceQCRELREFParserRuleCall_2_7_2_0()); 
	    }
		lv_modelReference_35_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_35_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_36=Comma
    {
    	newLeafNode(otherlv_36, grammarAccess.getRequirementAccess().getCommaKeyword_2_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getModelReferenceQCRELREFParserRuleCall_2_7_3_1_0()); 
	    }
		lv_modelReference_37_0=ruleQCRELREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"modelReference",
        		lv_modelReference_37_0, 
        		"QCRELREF");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_38=Semicolon
    {
    	newLeafNode(otherlv_38, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_7_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 8);
	 				}
					({true}?=>(
	otherlv_39=See
    {
    	newLeafNode(otherlv_39, grammarAccess.getRequirementAccess().getSeeKeyword_2_8_0());
    }

	otherlv_40=Goal
    {
    	newLeafNode(otherlv_40, grammarAccess.getRequirementAccess().getGoalKeyword_2_8_1());
    }

	otherlv_41=Colon
    {
    	newLeafNode(otherlv_41, grammarAccess.getRequirementAccess().getColonKeyword_2_8_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_42=RULE_ID
	{
		newLeafNode(otherlv_42, grammarAccess.getRequirementAccess().getGoalReferenceGoalCrossReference_2_8_3_0()); 
	}

)
)(
	otherlv_43=Comma
    {
    	newLeafNode(otherlv_43, grammarAccess.getRequirementAccess().getCommaKeyword_2_8_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
	otherlv_44=RULE_ID
	{
		newLeafNode(otherlv_44, grammarAccess.getRequirementAccess().getGoalReferenceGoalCrossReference_2_8_4_1_0()); 
	}

)
))*
	otherlv_45=Semicolon
    {
    	newLeafNode(otherlv_45, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_8_5());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 9);
	 				}
					({true}?=>(
	otherlv_46=See
    {
    	newLeafNode(otherlv_46, grammarAccess.getRequirementAccess().getSeeKeyword_2_9_0());
    }

	otherlv_47=Hazard
    {
    	newLeafNode(otherlv_47, grammarAccess.getRequirementAccess().getHazardKeyword_2_9_1());
    }

	otherlv_48=Colon
    {
    	newLeafNode(otherlv_48, grammarAccess.getRequirementAccess().getColonKeyword_2_9_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getHazardReferenceQNEREFParserRuleCall_2_9_3_0()); 
	    }
		lv_hazardReference_49_0=ruleQNEREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"hazardReference",
        		lv_hazardReference_49_0, 
        		"QNEREF");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_50=Comma
    {
    	newLeafNode(otherlv_50, grammarAccess.getRequirementAccess().getCommaKeyword_2_9_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getHazardReferenceQNEREFParserRuleCall_2_9_4_1_0()); 
	    }
		lv_hazardReference_51_0=ruleQNEREF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"hazardReference",
        		lv_hazardReference_51_0, 
        		"QNEREF");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_52=Semicolon
    {
    	newLeafNode(otherlv_52, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_9_5());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 10);
	 				}
					({true}?=>(
	otherlv_53=Refines
    {
    	newLeafNode(otherlv_53, grammarAccess.getRequirementAccess().getRefinesKeyword_2_10_0());
    }

	otherlv_54=Colon
    {
    	newLeafNode(otherlv_54, grammarAccess.getRequirementAccess().getColonKeyword_2_10_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getRefinesReferenceRequirementCrossReference_2_10_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_56=Comma
    {
    	newLeafNode(otherlv_56, grammarAccess.getRequirementAccess().getCommaKeyword_2_10_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getRefinesReferenceRequirementCrossReference_2_10_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_58=Semicolon
    {
    	newLeafNode(otherlv_58, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_10_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 11)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 11);
	 				}
					({true}?=>(
	otherlv_59=Decomposes
    {
    	newLeafNode(otherlv_59, grammarAccess.getRequirementAccess().getDecomposesKeyword_2_11_0());
    }

	otherlv_60=Colon
    {
    	newLeafNode(otherlv_60, grammarAccess.getRequirementAccess().getColonKeyword_2_11_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDecomposesReferenceRequirementCrossReference_2_11_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_62=Comma
    {
    	newLeafNode(otherlv_62, grammarAccess.getRequirementAccess().getCommaKeyword_2_11_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDecomposesReferenceRequirementCrossReference_2_11_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_64=Semicolon
    {
    	newLeafNode(otherlv_64, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_11_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 12)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 12);
	 				}
					({true}?=>(
	otherlv_65=Evolves
    {
    	newLeafNode(otherlv_65, grammarAccess.getRequirementAccess().getEvolvesKeyword_2_12_0());
    }

	otherlv_66=Colon
    {
    	newLeafNode(otherlv_66, grammarAccess.getRequirementAccess().getColonKeyword_2_12_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getEvolvesReferenceRequirementCrossReference_2_12_2_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_68=Comma
    {
    	newLeafNode(otherlv_68, grammarAccess.getRequirementAccess().getCommaKeyword_2_12_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getEvolvesReferenceRequirementCrossReference_2_12_3_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_70=Semicolon
    {
    	newLeafNode(otherlv_70, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_12_4());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 13)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 13);
	 				}
					({true}?=>(
	otherlv_71=Verified
    {
    	newLeafNode(otherlv_71, grammarAccess.getRequirementAccess().getVerifiedKeyword_2_13_0());
    }

	otherlv_72=By
    {
    	newLeafNode(otherlv_72, grammarAccess.getRequirementAccess().getByKeyword_2_13_1());
    }

	otherlv_73=Colon
    {
    	newLeafNode(otherlv_73, grammarAccess.getRequirementAccess().getColonKeyword_2_13_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getVerifiedByVerificationDecompositionParserRuleCall_2_13_3_0()); 
	    }
		lv_verifiedBy_74_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"verifiedBy",
        		lv_verifiedBy_74_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 14)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 14);
	 				}
					({true}?=>(
	otherlv_75=See
    {
    	newLeafNode(otherlv_75, grammarAccess.getRequirementAccess().getSeeKeyword_2_14_0());
    }

	otherlv_76=Stakeholder
    {
    	newLeafNode(otherlv_76, grammarAccess.getRequirementAccess().getStakeholderKeyword_2_14_1());
    }

	otherlv_77=Req
    {
    	newLeafNode(otherlv_77, grammarAccess.getRequirementAccess().getReqKeyword_2_14_2());
    }

	otherlv_78=Colon
    {
    	newLeafNode(otherlv_78, grammarAccess.getRequirementAccess().getColonKeyword_2_14_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getStakeholderRequirementReferenceGoalCrossReference_2_14_4_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_80=Comma
    {
    	newLeafNode(otherlv_80, grammarAccess.getRequirementAccess().getCommaKeyword_2_14_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getStakeholderRequirementReferenceGoalCrossReference_2_14_5_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_82=Semicolon
    {
    	newLeafNode(otherlv_82, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_14_6());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 15)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 15);
	 				}
					({true}?=>(
	otherlv_83=See
    {
    	newLeafNode(otherlv_83, grammarAccess.getRequirementAccess().getSeeKeyword_2_15_0());
    }

	otherlv_84=System
    {
    	newLeafNode(otherlv_84, grammarAccess.getRequirementAccess().getSystemKeyword_2_15_1());
    }

	otherlv_85=Req
    {
    	newLeafNode(otherlv_85, grammarAccess.getRequirementAccess().getReqKeyword_2_15_2());
    }

	otherlv_86=Colon
    {
    	newLeafNode(otherlv_86, grammarAccess.getRequirementAccess().getColonKeyword_2_15_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getSystemRequirementReferenceContractualElementCrossReference_2_15_4_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_88=Comma
    {
    	newLeafNode(otherlv_88, grammarAccess.getRequirementAccess().getCommaKeyword_2_15_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRequirementRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getSystemRequirementReferenceContractualElementCrossReference_2_15_5_1_0()); 
	    }
		ruleREQREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_90=Semicolon
    {
    	newLeafNode(otherlv_90, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_15_6());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 16)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getRequirementAccess().getUnorderedGroup_2(), 16);
	 				}
					({true}?=>(
	otherlv_91=See
    {
    	newLeafNode(otherlv_91, grammarAccess.getRequirementAccess().getSeeKeyword_2_16_0());
    }

	otherlv_92=Document
    {
    	newLeafNode(otherlv_92, grammarAccess.getRequirementAccess().getDocumentKeyword_2_16_1());
    }

	otherlv_93=Colon
    {
    	newLeafNode(otherlv_93, grammarAccess.getRequirementAccess().getColonKeyword_2_16_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDocReferenceXDocUriParserRuleCall_2_16_3_0()); 
	    }
		lv_docReference_94_0=ruleXDocUri		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"docReference",
        		lv_docReference_94_0, 
        		"XDocUri");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_95=Comma
    {
    	newLeafNode(otherlv_95, grammarAccess.getRequirementAccess().getCommaKeyword_2_16_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRequirementAccess().getDocReferenceXDocUriParserRuleCall_2_16_4_1_0()); 
	    }
		lv_docReference_96_0=ruleXDocUri		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRequirementRule());
	        }
       		add(
       			$current, 
       			"docReference",
        		lv_docReference_96_0, 
        		"XDocUri");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_97=Semicolon
    {
    	newLeafNode(otherlv_97, grammarAccess.getRequirementAccess().getSemicolonKeyword_2_16_5());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getRequirementAccess().getUnorderedGroup_2());
	}

)
	otherlv_98=End
    {
    	newLeafNode(otherlv_98, grammarAccess.getRequirementAccess().getEndKeyword_3());
    }

	otherlv_99=Requirement
    {
    	newLeafNode(otherlv_99, grammarAccess.getRequirementAccess().getRequirementKeyword_4());
    }

	otherlv_100=Semicolon
    {
    	newLeafNode(otherlv_100, grammarAccess.getRequirementAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleExternalDocuments
entryRuleExternalDocuments returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExternalDocumentsRule()); }
	 iv_ruleExternalDocuments=ruleExternalDocuments 
	 { $current=$iv_ruleExternalDocuments.current; } 
	 EOF 
;

// Rule ExternalDocuments
ruleExternalDocuments returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Documents
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalDocumentsAccess().getDocumentsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalDocumentsAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalDocumentsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDocumentsAccess().getDocsExternalDocumentParserRuleCall_2_0()); 
	    }
		lv_docs_2_0=ruleExternalDocument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDocumentsRule());
	        }
       		add(
       			$current, 
       			"docs",
        		lv_docs_2_0, 
        		"ExternalDocument");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDocumentsAccess().getDocsExternalDocumentParserRuleCall_3_0()); 
	    }
		lv_docs_3_0=ruleExternalDocument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDocumentsRule());
	        }
       		add(
       			$current, 
       			"docs",
        		lv_docs_3_0, 
        		"ExternalDocument");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_4=End
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalDocumentsAccess().getEndKeyword_4());
    }

	otherlv_5=Documents
    {
    	newLeafNode(otherlv_5, grammarAccess.getExternalDocumentsAccess().getDocumentsKeyword_5());
    }

	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getExternalDocumentsAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleExternalDocument
entryRuleExternalDocument returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExternalDocumentRule()); }
	 iv_ruleExternalDocument=ruleExternalDocument 
	 { $current=$iv_ruleExternalDocument.current; } 
	 EOF 
;

// Rule ExternalDocument
ruleExternalDocument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Document
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalDocumentAccess().getDocumentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalDocumentAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalDocumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=See
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalDocumentAccess().getSeeKeyword_2());
    }

	otherlv_3=Colon
    {
    	newLeafNode(otherlv_3, grammarAccess.getExternalDocumentAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalDocumentAccess().getExternalReferenceDOCPATHParserRuleCall_4_0()); 
	    }
		lv_externalReference_4_0=ruleDOCPATH		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalDocumentRule());
	        }
       		set(
       			$current, 
       			"externalReference",
        		lv_externalReference_4_0, 
        		"DOCPATH");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=Semicolon
    {
    	newLeafNode(otherlv_5, grammarAccess.getExternalDocumentAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleXDocUri
entryRuleXDocUri returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getXDocUriRule()); }
	 iv_ruleXDocUri=ruleXDocUri 
	 { $current=$iv_ruleXDocUri.current; } 
	 EOF 
;

// Rule XDocUri
ruleXDocUri returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getXDocUriRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getXDocUriAccess().getDocPathExternalDocumentCrossReference_0_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=NumberSign
    {
    	newLeafNode(otherlv_1, grammarAccess.getXDocUriAccess().getNumberSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXDocUriAccess().getDocFragmentDOCFRAGMENTParserRuleCall_1_1_0()); 
	    }
		lv_docFragment_2_0=ruleDOCFRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXDocUriRule());
	        }
       		set(
       			$current, 
       			"docFragment",
        		lv_docFragment_2_0, 
        		"DOCFRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAlisaConfiguration
entryRuleAlisaConfiguration returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAlisaConfigurationRule()); }
	 iv_ruleAlisaConfiguration=ruleAlisaConfiguration 
	 { $current=$iv_ruleAlisaConfiguration.current; } 
	 EOF 
;

// Rule AlisaConfiguration
ruleAlisaConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Configuration
    {
    	newLeafNode(otherlv_0, grammarAccess.getAlisaConfigurationAccess().getConfigurationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAlisaConfigurationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAlisaConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=Categories
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlisaConfigurationAccess().getCategoriesKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlisaConfigurationAccess().getCategoryCategoryParserRuleCall_3_0()); 
	    }
		lv_category_3_0=ruleCategory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlisaConfigurationRule());
	        }
       		add(
       			$current, 
       			"category",
        		lv_category_3_0, 
        		"Category");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_4=End
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlisaConfigurationAccess().getEndKeyword_4());
    }

	otherlv_5=Categories
    {
    	newLeafNode(otherlv_5, grammarAccess.getAlisaConfigurationAccess().getCategoriesKeyword_5());
    }

	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getAlisaConfigurationAccess().getSemicolonKeyword_6());
    }

	otherlv_7=End
    {
    	newLeafNode(otherlv_7, grammarAccess.getAlisaConfigurationAccess().getEndKeyword_7());
    }

	otherlv_8=Configuration
    {
    	newLeafNode(otherlv_8, grammarAccess.getAlisaConfigurationAccess().getConfigurationKeyword_8());
    }

	otherlv_9=Semicolon
    {
    	newLeafNode(otherlv_9, grammarAccess.getAlisaConfigurationAccess().getSemicolonKeyword_9());
    }
)
;





// Entry rule entryRuleCategory
entryRuleCategory returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getCategoryRule()); }
	 iv_ruleCategory=ruleCategory 
	 { $current=$iv_ruleCategory.current; } 
	 EOF 
;

// Rule Category
ruleCategory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Category
    {
    	newLeafNode(otherlv_0, grammarAccess.getCategoryAccess().getCategoryKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCategoryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
	otherlv_2=Extends
    {
    	newLeafNode(otherlv_2, grammarAccess.getCategoryAccess().getExtendsKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCategoryRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getCategoryAccess().getExtendsCategoryCrossReference_2_1_0()); 
	    }
		ruleCATREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_4=Semicolon
    {
    	newLeafNode(otherlv_4, grammarAccess.getCategoryAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleValueString
entryRuleValueString returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getValueStringRule()); } 
	 iv_ruleValueString=ruleValueString 
	 { $current=$iv_ruleValueString.current.getText(); }  
	 EOF 
;

// Rule ValueString
ruleValueString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getValueStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleStakeholder
entryRuleStakeholder returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStakeholderRule()); }
	 iv_ruleStakeholder=ruleStakeholder 
	 { $current=$iv_ruleStakeholder.current; } 
	 EOF 
;

// Rule Stakeholder
ruleStakeholder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Stakeholder
    {
    	newLeafNode(otherlv_0, grammarAccess.getStakeholderAccess().getStakeholderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStakeholderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStakeholderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(
	otherlv_3=Title
    {
    	newLeafNode(otherlv_3, grammarAccess.getStakeholderAccess().getTitleKeyword_2_0_0());
    }

	otherlv_4=Colon
    {
    	newLeafNode(otherlv_4, grammarAccess.getStakeholderAccess().getColonKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getTitleValueStringParserRuleCall_2_0_2_0()); 
	    }
		lv_title_5_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_5_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getStakeholderAccess().getSemicolonKeyword_2_0_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(
	otherlv_7=Description
    {
    	newLeafNode(otherlv_7, grammarAccess.getStakeholderAccess().getDescriptionKeyword_2_1_0());
    }

	otherlv_8=Colon
    {
    	newLeafNode(otherlv_8, grammarAccess.getStakeholderAccess().getColonKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getDescriptionValueStringParserRuleCall_2_1_2_0()); 
	    }
		lv_description_9_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_10=Semicolon
    {
    	newLeafNode(otherlv_10, grammarAccess.getStakeholderAccess().getSemicolonKeyword_2_1_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(
	otherlv_11=Role
    {
    	newLeafNode(otherlv_11, grammarAccess.getStakeholderAccess().getRoleKeyword_2_2_0());
    }

	otherlv_12=Colon
    {
    	newLeafNode(otherlv_12, grammarAccess.getStakeholderAccess().getColonKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getRoleValueStringParserRuleCall_2_2_2_0()); 
	    }
		lv_role_13_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"role",
        		lv_role_13_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=Semicolon
    {
    	newLeafNode(otherlv_14, grammarAccess.getStakeholderAccess().getSemicolonKeyword_2_2_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(
	otherlv_15=Email
    {
    	newLeafNode(otherlv_15, grammarAccess.getStakeholderAccess().getEmailKeyword_2_3_0());
    }

	otherlv_16=Colon
    {
    	newLeafNode(otherlv_16, grammarAccess.getStakeholderAccess().getColonKeyword_2_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getEmailValueStringParserRuleCall_2_3_2_0()); 
	    }
		lv_email_17_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"email",
        		lv_email_17_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_18=Semicolon
    {
    	newLeafNode(otherlv_18, grammarAccess.getStakeholderAccess().getSemicolonKeyword_2_3_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStakeholderAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(
	otherlv_19=Phone
    {
    	newLeafNode(otherlv_19, grammarAccess.getStakeholderAccess().getPhoneKeyword_2_4_0());
    }

	otherlv_20=Colon
    {
    	newLeafNode(otherlv_20, grammarAccess.getStakeholderAccess().getColonKeyword_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStakeholderAccess().getPhoneValueStringParserRuleCall_2_4_2_0()); 
	    }
		lv_phone_21_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStakeholderRule());
	        }
       		set(
       			$current, 
       			"phone",
        		lv_phone_21_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_22=Semicolon
    {
    	newLeafNode(otherlv_22, grammarAccess.getStakeholderAccess().getSemicolonKeyword_2_4_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStakeholderAccess().getUnorderedGroup_2());
	}

)
	otherlv_23=End
    {
    	newLeafNode(otherlv_23, grammarAccess.getStakeholderAccess().getEndKeyword_3());
    }

	otherlv_24=Stakeholder
    {
    	newLeafNode(otherlv_24, grammarAccess.getStakeholderAccess().getStakeholderKeyword_4());
    }

	otherlv_25=Semicolon
    {
    	newLeafNode(otherlv_25, grammarAccess.getStakeholderAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleOrganization
entryRuleOrganization returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOrganizationRule()); }
	 iv_ruleOrganization=ruleOrganization 
	 { $current=$iv_ruleOrganization.current; } 
	 EOF 
;

// Rule Organization
ruleOrganization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Organization
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrganizationAccess().getOrganizationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOrganizationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrganizationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganizationAccess().getStakeholderStakeholderParserRuleCall_2_0()); 
	    }
		lv_stakeholder_2_0=ruleStakeholder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganizationRule());
	        }
       		add(
       			$current, 
       			"stakeholder",
        		lv_stakeholder_2_0, 
        		"Stakeholder");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_3=End
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrganizationAccess().getEndKeyword_3());
    }

	otherlv_4=Organization
    {
    	newLeafNode(otherlv_4, grammarAccess.getOrganizationAccess().getOrganizationKeyword_4());
    }

	otherlv_5=Semicolon
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrganizationAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleVerificationDecomposition
entryRuleVerificationDecomposition returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationDecompositionRule()); }
	 iv_ruleVerificationDecomposition=ruleVerificationDecomposition 
	 { $current=$iv_ruleVerificationDecomposition.current; } 
	 EOF 
;

// Rule VerificationDecomposition
ruleVerificationDecomposition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getElementVerificationActivityCrossReference_0_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getLeftVerificationActivityCrossReference_1_0_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_type_2_1=
	And
    {
        newLeafNode(lv_type_2_1, grammarAccess.getVerificationDecompositionAccess().getTypeAndKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_1, null);
	    }

    |		lv_type_2_2=
	Or
    {
        newLeafNode(lv_type_2_2, grammarAccess.getVerificationDecompositionAccess().getTypeOrKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationDecompositionRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationDecompositionAccess().getRightVerificationDecompositionParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationDecompositionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleVerificationActivity
entryRuleVerificationActivity returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationActivityRule()); }
	 iv_ruleVerificationActivity=ruleVerificationActivity 
	 { $current=$iv_ruleVerificationActivity.current; } 
	 EOF 
;

// Rule VerificationActivity
ruleVerificationActivity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Verification
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationActivityAccess().getVerificationKeyword_0());
    }

	otherlv_1=Activity
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationActivityAccess().getActivityKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationActivityAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
	otherlv_3=Title
    {
    	newLeafNode(otherlv_3, grammarAccess.getVerificationActivityAccess().getTitleKeyword_3_0());
    }

	otherlv_4=Colon
    {
    	newLeafNode(otherlv_4, grammarAccess.getVerificationActivityAccess().getColonKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getTitleValueStringParserRuleCall_3_2_0()); 
	    }
		lv_title_5_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_5_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_3_3());
    }
)?(
	otherlv_7=Description
    {
    	newLeafNode(otherlv_7, grammarAccess.getVerificationActivityAccess().getDescriptionKeyword_4_0());
    }

	otherlv_8=Colon
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationActivityAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getDescriptionValueStringParserRuleCall_4_2_0()); 
	    }
		lv_description_9_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_9_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_10=Semicolon
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_4_3());
    }
)?(
	otherlv_11=Method
    {
    	newLeafNode(otherlv_11, grammarAccess.getVerificationActivityAccess().getMethodKeyword_5_0());
    }

	otherlv_12=Colon
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationActivityAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getMethodVerificationMethodParserRuleCall_5_2_0()); 
	    }
		lv_method_13_0=ruleVerificationMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_13_0, 
        		"VerificationMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=Semicolon
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_5_3());
    }
)?(
	otherlv_15=Decomposed
    {
    	newLeafNode(otherlv_15, grammarAccess.getVerificationActivityAccess().getDecomposedKeyword_6_0());
    }

	otherlv_16=To
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationActivityAccess().getToKeyword_6_1());
    }

	otherlv_17=Colon
    {
    	newLeafNode(otherlv_17, grammarAccess.getVerificationActivityAccess().getColonKeyword_6_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getDecomposedToVerificationDecompositionParserRuleCall_6_3_0()); 
	    }
		lv_decomposedTo_18_0=ruleVerificationDecomposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationActivityRule());
	        }
       		add(
       			$current, 
       			"decomposedTo",
        		lv_decomposedTo_18_0, 
        		"VerificationDecomposition");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_19=Semicolon
    {
    	newLeafNode(otherlv_19, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_6_4());
    }
)?(
	otherlv_20=Assigned
    {
    	newLeafNode(otherlv_20, grammarAccess.getVerificationActivityAccess().getAssignedKeyword_7_0());
    }

	otherlv_21=To
    {
    	newLeafNode(otherlv_21, grammarAccess.getVerificationActivityAccess().getToKeyword_7_1());
    }

	otherlv_22=Colon
    {
    	newLeafNode(otherlv_22, grammarAccess.getVerificationActivityAccess().getColonKeyword_7_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationActivityRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVerificationActivityAccess().getAssignedToStakeholderCrossReference_7_3_0()); 
	    }
		ruleRELREF		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_24=Semicolon
    {
    	newLeafNode(otherlv_24, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_7_4());
    }
)?
	otherlv_25=End
    {
    	newLeafNode(otherlv_25, grammarAccess.getVerificationActivityAccess().getEndKeyword_8());
    }

	otherlv_26=Verification
    {
    	newLeafNode(otherlv_26, grammarAccess.getVerificationActivityAccess().getVerificationKeyword_9());
    }

	otherlv_27=Activity
    {
    	newLeafNode(otherlv_27, grammarAccess.getVerificationActivityAccess().getActivityKeyword_10());
    }

	otherlv_28=Semicolon
    {
    	newLeafNode(otherlv_28, grammarAccess.getVerificationActivityAccess().getSemicolonKeyword_11());
    }
)
;





// Entry rule entryRuleVerificationMethod
entryRuleVerificationMethod returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getVerificationMethodRule()); } 
	 iv_ruleVerificationMethod=ruleVerificationMethod 
	 { $current=$iv_ruleVerificationMethod.current.getText(); }  
	 EOF 
;

// Rule VerificationMethod
ruleVerificationMethod returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=Manual 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getManualKeyword_0()); 
    }

    |
	kw=Automatic 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getAutomaticKeyword_1()); 
    }

    |
	kw=Review 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getReviewKeyword_2()); 
    }

    |
	kw=Testing 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getTestingKeyword_3()); 
    }

    |
	kw=Analysis 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getAnalysisKeyword_4()); 
    }

    |
	kw=Verification 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVerificationMethodAccess().getVerificationKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleVerificationResult
entryRuleVerificationResult returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getVerificationResultRule()); }
	 iv_ruleVerificationResult=ruleVerificationResult 
	 { $current=$iv_ruleVerificationResult.current; } 
	 EOF 
;

// Rule VerificationResult
ruleVerificationResult returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Verification
    {
    	newLeafNode(otherlv_0, grammarAccess.getVerificationResultAccess().getVerificationKeyword_0());
    }

	otherlv_1=Result
    {
    	newLeafNode(otherlv_1, grammarAccess.getVerificationResultAccess().getResultKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getVerificationResultAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)
	otherlv_3=Of
    {
    	newLeafNode(otherlv_3, grammarAccess.getVerificationResultAccess().getOfKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVerificationResultRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getVerificationResultAccess().getReferencedVerificationMethodVerificationActivityCrossReference_4_0()); 
	}

)
)*(
	otherlv_5=Output
    {
    	newLeafNode(otherlv_5, grammarAccess.getVerificationResultAccess().getOutputKeyword_5_0());
    }

	otherlv_6=Colon
    {
    	newLeafNode(otherlv_6, grammarAccess.getVerificationResultAccess().getColonKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getTitleValueStringParserRuleCall_5_2_0()); 
	    }
		lv_title_7_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_7_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=Semicolon
    {
    	newLeafNode(otherlv_8, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_5_3());
    }
)?(
	otherlv_9=Logfile
    {
    	newLeafNode(otherlv_9, grammarAccess.getVerificationResultAccess().getLogfileKeyword_6_0());
    }

	otherlv_10=Colon
    {
    	newLeafNode(otherlv_10, grammarAccess.getVerificationResultAccess().getColonKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getDescriptionValueStringParserRuleCall_6_2_0()); 
	    }
		lv_description_11_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"description",
        		lv_description_11_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_12=Semicolon
    {
    	newLeafNode(otherlv_12, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_6_3());
    }
)?(
	otherlv_13=Date
    {
    	newLeafNode(otherlv_13, grammarAccess.getVerificationResultAccess().getDateKeyword_7_0());
    }

	otherlv_14=Colon
    {
    	newLeafNode(otherlv_14, grammarAccess.getVerificationResultAccess().getColonKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getMethodValueStringParserRuleCall_7_2_0()); 
	    }
		lv_method_15_0=ruleValueString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_15_0, 
        		"ValueString");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_16=Semicolon
    {
    	newLeafNode(otherlv_16, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_7_3());
    }
)?(
	otherlv_17=State
    {
    	newLeafNode(otherlv_17, grammarAccess.getVerificationResultAccess().getStateKeyword_8_0());
    }

	otherlv_18=Colon
    {
    	newLeafNode(otherlv_18, grammarAccess.getVerificationResultAccess().getColonKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStateVerificationResultStateEnumRuleCall_8_2_0()); 
	    }
		lv_state_19_0=ruleVerificationResultState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"state",
        		lv_state_19_0, 
        		"VerificationResultState");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_20=Semicolon
    {
    	newLeafNode(otherlv_20, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_8_3());
    }
)?(
	otherlv_21=Status
    {
    	newLeafNode(otherlv_21, grammarAccess.getVerificationResultAccess().getStatusKeyword_9_0());
    }

	otherlv_22=Colon
    {
    	newLeafNode(otherlv_22, grammarAccess.getVerificationResultAccess().getColonKeyword_9_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVerificationResultAccess().getStatusVerificationResultStatusEnumRuleCall_9_2_0()); 
	    }
		lv_status_23_0=ruleVerificationResultStatus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVerificationResultRule());
	        }
       		set(
       			$current, 
       			"status",
        		lv_status_23_0, 
        		"VerificationResultStatus");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_24=Semicolon
    {
    	newLeafNode(otherlv_24, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_9_3());
    }
)?
	otherlv_25=End
    {
    	newLeafNode(otherlv_25, grammarAccess.getVerificationResultAccess().getEndKeyword_10());
    }

	otherlv_26=Verification
    {
    	newLeafNode(otherlv_26, grammarAccess.getVerificationResultAccess().getVerificationKeyword_11());
    }

	otherlv_27=Result
    {
    	newLeafNode(otherlv_27, grammarAccess.getVerificationResultAccess().getResultKeyword_12());
    }

	otherlv_28=Semicolon
    {
    	newLeafNode(otherlv_28, grammarAccess.getVerificationResultAccess().getSemicolonKeyword_13());
    }
)
;





// Entry rule entryRuleQCLREF
entryRuleQCLREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCLREFRule()); } 
	 iv_ruleQCLREF=ruleQCLREF 
	 { $current=$iv_ruleQCLREF.current.getText(); }  
	 EOF 
;

// Rule QCLREF
ruleQCLREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCLREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCLREFAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQCLREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleQPREF
entryRuleQPREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQPREFRule()); } 
	 iv_ruleQPREF=ruleQPREF 
	 { $current=$iv_ruleQPREF.current.getText(); }  
	 EOF 
;

// Rule QPREF
ruleQPREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleQNEREF
entryRuleQNEREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQNEREFRule()); } 
	 iv_ruleQNEREF=ruleQNEREF 
	 { $current=$iv_ruleQNEREF.current.getText(); }  
	 EOF 
;

// Rule QNEREF
ruleQNEREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQNEREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQNEREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQNEREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQNEREFAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQNEREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)*)
    ;





// Entry rule entryRuleQCRELREF
entryRuleQCRELREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCRELREFRule()); } 
	 iv_ruleQCRELREF=ruleQCRELREF 
	 { $current=$iv_ruleQCRELREF.current.getText(); }  
	 EOF 
;

// Rule QCRELREF
ruleQCRELREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
    { 
        newCompositeNode(grammarAccess.getQCRELREFAccess().getQNEREFParserRuleCall_0_0()); 
    }
    this_QNEREF_0=ruleQNEREF    {
		$current.merge(this_QNEREF_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
    { 
        newCompositeNode(grammarAccess.getQCRELREFAccess().getPAREFParserRuleCall_0_1()); 
    }
    this_PAREF_1=rulePAREF    {
		$current.merge(this_PAREF_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    |
    { 
        newCompositeNode(grammarAccess.getQCRELREFAccess().getPAREFParserRuleCall_1()); 
    }
    this_PAREF_2=rulePAREF    {
		$current.merge(this_PAREF_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleRELREF
entryRuleRELREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getRELREFRule()); } 
	 iv_ruleRELREF=ruleRELREF 
	 { $current=$iv_ruleRELREF.current.getText(); }  
	 EOF 
;

// Rule RELREF
ruleRELREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getRELREFAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRELREFAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getRELREFAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleCATREF
entryRuleCATREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getCATREFRule()); } 
	 iv_ruleCATREF=ruleCATREF 
	 { $current=$iv_ruleCATREF.current.getText(); }  
	 EOF 
;

// Rule CATREF
ruleCATREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getCATREFAccess().getIDTerminalRuleCall_0()); 
    }

	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCATREFAccess().getFullStopKeyword_1()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getCATREFAccess().getIDTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRulePAREF
entryRulePAREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPAREFRule()); } 
	 iv_rulePAREF=rulePAREF 
	 { $current=$iv_rulePAREF.current.getText(); }  
	 EOF 
;

// Rule PAREF
rulePAREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=NumberSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPAREFAccess().getNumberSignKeyword_0()); 
    }
    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getPAREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPAREFAccess().getColonColonKeyword_2_0()); 
    }
    this_ID_3=RULE_ID    {
		$current.merge(this_ID_3);
    }

    { 
    newLeafNode(this_ID_3, grammarAccess.getPAREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleREQREF
entryRuleREQREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getREQREFRule()); } 
	 iv_ruleREQREF=ruleREQREF 
	 { $current=$iv_ruleREQREF.current.getText(); }  
	 EOF 
;

// Rule REQREF
ruleREQREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getREQREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getREQREFAccess().getFullStopKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getREQREFAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDOCPATH
entryRuleDOCPATH returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getDOCPATHRule()); } 
	 iv_ruleDOCPATH=ruleDOCPATH 
	 { $current=$iv_ruleDOCPATH.current.getText(); }  
	 EOF 
;

// Rule DOCPATH
ruleDOCPATH returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=Solidus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOCPATHAccess().getSolidusKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_1()); 
    }

	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOCPATHAccess().getFullStopKeyword_2()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getDOCPATHAccess().getIDTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleDOCFRAGMENT
entryRuleDOCFRAGMENT returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getDOCFRAGMENTRule()); } 
	 iv_ruleDOCFRAGMENT=ruleDOCFRAGMENT 
	 { $current=$iv_ruleDOCFRAGMENT.current.getText(); }  
	 EOF 
;

// Rule DOCFRAGMENT
ruleDOCFRAGMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getDOCFRAGMENTAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDOCFRAGMENTAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getDOCFRAGMENTAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule VerificationResultState
ruleVerificationResultState returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=Scheduled
    {
        $current = grammarAccess.getVerificationResultStateAccess().getSCHEDULEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStateAccess().getSCHEDULEDEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=Completed
    {
        $current = grammarAccess.getVerificationResultStateAccess().getCOMPLETEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStateAccess().getCOMPLETEDEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=Inprogress
    {
        $current = grammarAccess.getVerificationResultStateAccess().getINPROGRESSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStateAccess().getINPROGRESSEnumLiteralDeclaration_2()); 
    }
));



// Rule VerificationResultStatus
ruleVerificationResultStatus returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((    enumLiteral_0=Pass
    {
        $current = grammarAccess.getVerificationResultStatusAccess().getPASSEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerificationResultStatusAccess().getPASSEnumLiteralDeclaration_0()); 
    }
)
    |(    enumLiteral_1=Fail
    {
        $current = grammarAccess.getVerificationResultStatusAccess().getFAILEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerificationResultStatusAccess().getFAILEnumLiteralDeclaration_1()); 
    }
)
    |(    enumLiteral_2=Unknown
    {
        $current = grammarAccess.getVerificationResultStatusAccess().getUNKNOWNEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerificationResultStatusAccess().getUNKNOWNEnumLiteralDeclaration_2()); 
    }
));



